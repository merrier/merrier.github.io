{"title":"CSS书写规范","slug":"CSS书写规范","date":"2017-04-04T13:12:45.000Z","updated":"2019-12-01T01:58:44.500Z","comments":true,"path":"api/articles/CSS书写规范.json","excerpt":null,"covers":["/images/hexo_post_97.png","/images/hexo_post_87.png","/images/hexo_post_98.png","/images/hexo_post_121.png","/images/hexo_post_94.png","/images/hexo_post_317.png","/images/hexo_post_96.png","/images/hexo_post_221.png"],"content":"<p>本篇文章转载自 cnblogs，我在看了原文章之后又搜了一些其他相关资料，就有了下面这些对于 CSS 书写规范的总结。CSS 作为前端语言中最好学的一种，很容易造成“不需要规范”的错觉，但其实 CSS 的书写也有很多规范，顺序、命名以及缩写等等，知道并且遵循这些规范不仅可以更容易让别人读懂你的代码，还能方便自己。</p>\n<h2 id=\"CSS-书写顺序\"><a href=\"#CSS-书写顺序\" class=\"headerlink\" title=\"CSS 书写顺序\"></a>CSS 书写顺序</h2><ol>\n<li>位置属性（position, top, right, z-index, display, float 等）</li>\n<li>大小（width, height, padding, margin）</li>\n<li>文字系列（font, line-height, letter-spacing, color- text-align 等）</li>\n<li>背景（background, border 等）</li>\n<li>其他（animation, transition 等）</li>\n</ol>\n<div align=\"center\"><img src=\"/images/hexo_post_97.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"CSS-书写规范\"><a href=\"#CSS-书写规范\" class=\"headerlink\" title=\"CSS 书写规范\"></a>CSS 书写规范</h2><h3 id=\"使用-CSS-缩写属性\"><a href=\"#使用-CSS-缩写属性\" class=\"headerlink\" title=\"使用 CSS 缩写属性\"></a>使用 CSS 缩写属性</h3><p>CSS 有些属性是可以缩写的，比如 padding, margin, font 等等，这样精简代码同时又能提高用户的阅读体验。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_87.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"去掉小数点前的-“0”\"><a href=\"#去掉小数点前的-“0”\" class=\"headerlink\" title=\"去掉小数点前的 “0”\"></a>去掉小数点前的 “0”</h3><div align=\"center\"><img src=\"/images/hexo_post_98.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"简写命名\"><a href=\"#简写命名\" class=\"headerlink\" title=\"简写命名\"></a>简写命名</h3><p>很多用户都喜欢简写类名，但前提是要让人看懂你的命名才能简写哦！</p>\n<div align=\"center\"><img src=\"/images/hexo_post_121.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"16-进制颜色代码缩写\"><a href=\"#16-进制颜色代码缩写\" class=\"headerlink\" title=\"16 进制颜色代码缩写\"></a>16 进制颜色代码缩写</h3><p>有些颜色代码是可以缩写的，我们就尽量缩写吧，提高用户体验为主。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_94.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"连字符-CSS-选择器命名规范\"><a href=\"#连字符-CSS-选择器命名规范\" class=\"headerlink\" title=\"连字符 CSS 选择器命名规范\"></a>连字符 CSS 选择器命名规范</h3><ol>\n<li>长名称或词组可以使用中横线来为选择器命名。</li>\n<li>不建议使用 “_” 下划线来命名 CSS 选择器，为什么呢？</li>\n</ol>\n<ul>\n<li>输入的时候少按一个 <code>shift</code> 键；</li>\n<li>浏览器兼容问题 （比如使用 _tips 的选择器命名，在 IE6 是无效的）</li>\n<li>能良好区分 JavaScript 变量命名（JS 变量命名是用 “_”）</li>\n</ul>\n<p>这里有一篇破折号与下划线的详细讨论，英文：<a href=\"http://stackoverflow.com/questions/7560813/why-are-dashes-preferred-for-css-selectors-html-attributes\" target=\"_blank\" rel=\"noopener\">点击查看</a> 中文篇：<a href=\"http://www.cnblogs.com/kaiye/archive/2011/06/13/3039046.html\" target=\"_blank\" rel=\"noopener\">点击查看</a> <a href=\"https://book.douban.com/subject/26295140/\" target=\"_blank\" rel=\"noopener\">《CSS Secrets》</a>的译者张鹏对于使用 “_” 还是 “-“ 也阐述了自己的观点，比较了两者的优缺点，可以<a href=\"https://github.com/cssmagic/blog/issues/42\" target=\"_blank\" rel=\"noopener\">点击这里</a>查看</p>\n<div align=\"center\"><img src=\"/images/hexo_post_317.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"不要随意使用-Id\"><a href=\"#不要随意使用-Id\" class=\"headerlink\" title=\"不要随意使用 Id\"></a>不要随意使用 Id</h3><p>id 在 JS 是唯一的，不能多次使用，而使用 class 类选择器却可以重复使用，另外 id 的优先级优先与 class，所以 id 应该按需使用，而不能滥用。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_96.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"为浏览器添加状态前缀\"><a href=\"#为浏览器添加状态前缀\" class=\"headerlink\" title=\"为浏览器添加状态前缀\"></a>为浏览器添加状态前缀</h3><p>有时候可以给选择器添加一个表示状态的前缀，让语义更明了，比如下图是添加了 “.is-” 前缀。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_221.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"CSS-命名规则\"><a href=\"#CSS-命名规则\" class=\"headerlink\" title=\"CSS 命名规则\"></a>CSS 命名规则</h2><p>可以按照功能、位置、结构进行命名，因为命名的出发点就是为了让自己和其他人都能看懂，所以越明白越好：</p>\n<ul>\n<li>一律小写;</li>\n<li>尽量用英文;</li>\n<li>不加中槓和下划线;</li>\n<li>尽量不缩写，除非一看就明白的单词。</li>\n</ul>\n<p>在译文<a href=\"http://jiongks.name/blog/naming-css-stuff-is-really-hard/?utm_source=tuicool\" target=\"_blank\" rel=\"noopener\">《CSS命名神马的真心难》</a>中，作者指出可以根据三类情况给定一个 class 名：</p>\n<ul>\n<li>功能性（positive-button、important-text、selected-tab）</li>\n<li>内容性（submit-button、intro-text、profile-photo）</li>\n<li>展示性（green-button、bit-text、sqiggle-border）</li>\n</ul>\n<p>其实，在我看来，命名的首要目的就是“语义化”，而“语义化”有两个方面：方便自己和方便别人，所以不一定所有的语义化都需要按照内容进行命名，class 名的语义化不同于 HTML，可以按照其背后的意义和开发者的意图进行命名</p>\n<p><strong>最常用主要命名</strong>：wrap（外套、最外层）、header（页眉、头部）、nav(导航条)、menu(菜单)、title(栏目标题、一般配合h1\\h2\\h3\\h4标签使用)、content (内容区)、footer(页脚、底部)、logo（标志、可以配合h1标签使用）、banner（广告条，一般在顶部）、copyRight（版权）</p>\n<h2 id=\"CSS-样式表文件命名\"><a href=\"#CSS-样式表文件命名\" class=\"headerlink\" title=\"CSS 样式表文件命名\"></a>CSS 样式表文件命名</h2><ul>\n<li>主要的 master.css</li>\n<li>模块 module.css</li>\n<li>基本共用 base.css</li>\n<li>布局、版面 layout.css</li>\n<li>主题 themes.css</li>\n<li>专栏 columns.css</li>\n<li>文字 font.css</li>\n<li>表单 forms.css</li>\n<li>补丁 mend.css</li>\n<li>打印 print.css</li>\n</ul>\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"http://www.cnblogs.com/AllenChou/p/5911834.html\" target=\"_blank\" rel=\"noopener\">推荐大家使用的CSS书写规范、顺序</a></li>\n<li><a href=\"http://jiongks.name/blog/naming-css-stuff-is-really-hard/\" target=\"_blank\" rel=\"noopener\">CSS命名神马的真心难</a></li>\n<li><a href=\"http://nec.netease.com/standard/css-name.html\" target=\"_blank\" rel=\"noopener\">css命名方式</a></li>\n<li><a href=\"http://getbem.com/\" target=\"_blank\" rel=\"noopener\">BEM——一种css命名解决方案</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000000391762\" target=\"_blank\" rel=\"noopener\">BEM —— 源自Yandex的CSS 命名方法论</a></li>\n<li><a href=\"http://blog.jobbole.com/76030/\" target=\"_blank\" rel=\"noopener\">CSS设计模式：OOCSS 和 SMACSS</a></li>\n</ul>\n","more":"<p>本篇文章转载自 cnblogs，我在看了原文章之后又搜了一些其他相关资料，就有了下面这些对于 CSS 书写规范的总结。CSS 作为前端语言中最好学的一种，很容易造成“不需要规范”的错觉，但其实 CSS 的书写也有很多规范，顺序、命名以及缩写等等，知道并且遵循这些规范不仅可以更容易让别人读懂你的代码，还能方便自己。</p>\n<h2 id=\"CSS-书写顺序\"><a href=\"#CSS-书写顺序\" class=\"headerlink\" title=\"CSS 书写顺序\"></a>CSS 书写顺序</h2><ol>\n<li>位置属性（position, top, right, z-index, display, float 等）</li>\n<li>大小（width, height, padding, margin）</li>\n<li>文字系列（font, line-height, letter-spacing, color- text-align 等）</li>\n<li>背景（background, border 等）</li>\n<li>其他（animation, transition 等）</li>\n</ol>\n<div align=\"center\"><img src=\"/images/hexo_post_97.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"CSS-书写规范\"><a href=\"#CSS-书写规范\" class=\"headerlink\" title=\"CSS 书写规范\"></a>CSS 书写规范</h2><h3 id=\"使用-CSS-缩写属性\"><a href=\"#使用-CSS-缩写属性\" class=\"headerlink\" title=\"使用 CSS 缩写属性\"></a>使用 CSS 缩写属性</h3><p>CSS 有些属性是可以缩写的，比如 padding, margin, font 等等，这样精简代码同时又能提高用户的阅读体验。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_87.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"去掉小数点前的-“0”\"><a href=\"#去掉小数点前的-“0”\" class=\"headerlink\" title=\"去掉小数点前的 “0”\"></a>去掉小数点前的 “0”</h3><div align=\"center\"><img src=\"/images/hexo_post_98.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"简写命名\"><a href=\"#简写命名\" class=\"headerlink\" title=\"简写命名\"></a>简写命名</h3><p>很多用户都喜欢简写类名，但前提是要让人看懂你的命名才能简写哦！</p>\n<div align=\"center\"><img src=\"/images/hexo_post_121.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"16-进制颜色代码缩写\"><a href=\"#16-进制颜色代码缩写\" class=\"headerlink\" title=\"16 进制颜色代码缩写\"></a>16 进制颜色代码缩写</h3><p>有些颜色代码是可以缩写的，我们就尽量缩写吧，提高用户体验为主。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_94.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"连字符-CSS-选择器命名规范\"><a href=\"#连字符-CSS-选择器命名规范\" class=\"headerlink\" title=\"连字符 CSS 选择器命名规范\"></a>连字符 CSS 选择器命名规范</h3><ol>\n<li>长名称或词组可以使用中横线来为选择器命名。</li>\n<li>不建议使用 “_” 下划线来命名 CSS 选择器，为什么呢？</li>\n</ol>\n<ul>\n<li>输入的时候少按一个 <code>shift</code> 键；</li>\n<li>浏览器兼容问题 （比如使用 _tips 的选择器命名，在 IE6 是无效的）</li>\n<li>能良好区分 JavaScript 变量命名（JS 变量命名是用 “_”）</li>\n</ul>\n<p>这里有一篇破折号与下划线的详细讨论，英文：<a href=\"http://stackoverflow.com/questions/7560813/why-are-dashes-preferred-for-css-selectors-html-attributes\" target=\"_blank\" rel=\"noopener\">点击查看</a> 中文篇：<a href=\"http://www.cnblogs.com/kaiye/archive/2011/06/13/3039046.html\" target=\"_blank\" rel=\"noopener\">点击查看</a> <a href=\"https://book.douban.com/subject/26295140/\" target=\"_blank\" rel=\"noopener\">《CSS Secrets》</a>的译者张鹏对于使用 “_” 还是 “-“ 也阐述了自己的观点，比较了两者的优缺点，可以<a href=\"https://github.com/cssmagic/blog/issues/42\" target=\"_blank\" rel=\"noopener\">点击这里</a>查看</p>\n<div align=\"center\"><img src=\"/images/hexo_post_317.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"不要随意使用-Id\"><a href=\"#不要随意使用-Id\" class=\"headerlink\" title=\"不要随意使用 Id\"></a>不要随意使用 Id</h3><p>id 在 JS 是唯一的，不能多次使用，而使用 class 类选择器却可以重复使用，另外 id 的优先级优先与 class，所以 id 应该按需使用，而不能滥用。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_96.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"为浏览器添加状态前缀\"><a href=\"#为浏览器添加状态前缀\" class=\"headerlink\" title=\"为浏览器添加状态前缀\"></a>为浏览器添加状态前缀</h3><p>有时候可以给选择器添加一个表示状态的前缀，让语义更明了，比如下图是添加了 “.is-” 前缀。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_221.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"CSS-命名规则\"><a href=\"#CSS-命名规则\" class=\"headerlink\" title=\"CSS 命名规则\"></a>CSS 命名规则</h2><p>可以按照功能、位置、结构进行命名，因为命名的出发点就是为了让自己和其他人都能看懂，所以越明白越好：</p>\n<ul>\n<li>一律小写;</li>\n<li>尽量用英文;</li>\n<li>不加中槓和下划线;</li>\n<li>尽量不缩写，除非一看就明白的单词。</li>\n</ul>\n<p>在译文<a href=\"http://jiongks.name/blog/naming-css-stuff-is-really-hard/?utm_source=tuicool\" target=\"_blank\" rel=\"noopener\">《CSS命名神马的真心难》</a>中，作者指出可以根据三类情况给定一个 class 名：</p>\n<ul>\n<li>功能性（positive-button、important-text、selected-tab）</li>\n<li>内容性（submit-button、intro-text、profile-photo）</li>\n<li>展示性（green-button、bit-text、sqiggle-border）</li>\n</ul>\n<p>其实，在我看来，命名的首要目的就是“语义化”，而“语义化”有两个方面：方便自己和方便别人，所以不一定所有的语义化都需要按照内容进行命名，class 名的语义化不同于 HTML，可以按照其背后的意义和开发者的意图进行命名</p>\n<p><strong>最常用主要命名</strong>：wrap（外套、最外层）、header（页眉、头部）、nav(导航条)、menu(菜单)、title(栏目标题、一般配合h1\\h2\\h3\\h4标签使用)、content (内容区)、footer(页脚、底部)、logo（标志、可以配合h1标签使用）、banner（广告条，一般在顶部）、copyRight（版权）</p>\n<h2 id=\"CSS-样式表文件命名\"><a href=\"#CSS-样式表文件命名\" class=\"headerlink\" title=\"CSS 样式表文件命名\"></a>CSS 样式表文件命名</h2><ul>\n<li>主要的 master.css</li>\n<li>模块 module.css</li>\n<li>基本共用 base.css</li>\n<li>布局、版面 layout.css</li>\n<li>主题 themes.css</li>\n<li>专栏 columns.css</li>\n<li>文字 font.css</li>\n<li>表单 forms.css</li>\n<li>补丁 mend.css</li>\n<li>打印 print.css</li>\n</ul>\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"http://www.cnblogs.com/AllenChou/p/5911834.html\" target=\"_blank\" rel=\"noopener\">推荐大家使用的CSS书写规范、顺序</a></li>\n<li><a href=\"http://jiongks.name/blog/naming-css-stuff-is-really-hard/\" target=\"_blank\" rel=\"noopener\">CSS命名神马的真心难</a></li>\n<li><a href=\"http://nec.netease.com/standard/css-name.html\" target=\"_blank\" rel=\"noopener\">css命名方式</a></li>\n<li><a href=\"http://getbem.com/\" target=\"_blank\" rel=\"noopener\">BEM——一种css命名解决方案</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000000391762\" target=\"_blank\" rel=\"noopener\">BEM —— 源自Yandex的CSS 命名方法论</a></li>\n<li><a href=\"http://blog.jobbole.com/76030/\" target=\"_blank\" rel=\"noopener\">CSS设计模式：OOCSS 和 SMACSS</a></li>\n</ul>\n","categories":[{"name":"CSS","path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]}