{"title":"Wordpress迁移至Hexo教程","slug":"Wordpress迁移至Hexo教程","date":"2019-01-20T02:23:16.000Z","updated":"2020-02-26T02:58:10.834Z","comments":true,"path":"api/articles/Wordpress迁移至Hexo教程.json","excerpt":null,"covers":null,"content":"<p>我的个人博客一开始是用 Wordpress 搭建的，其实当初选择 Wordpress 也是经过了比较久的调研，不过后来发现 Wordpress 并不适合我，所以就花了一点时间迁移到了 Hexo，迁移过程积累了一些经验，也遇到了一些坑，这里记录一下：</p>\n<h2 id=\"迁移步骤\"><a href=\"#迁移步骤\" class=\"headerlink\" title=\"迁移步骤\"></a>迁移步骤</h2><h3 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h3><p>安装 Hexo 很简单，只需要：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\">hexo init &lt;blog_dir&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注：如果安装速度比较慢，可以尝试淘宝镜像，具体请自行搜索</p>\n</blockquote>\n<h3 id=\"导出-Wordpress-文章\"><a href=\"#导出-Wordpress-文章\" class=\"headerlink\" title=\"导出 Wordpress 文章\"></a>导出 Wordpress 文章</h3><p>这一步也很简单，直接访问 Wordpress 的<code>后台-工具-导出</code>，导出的 <code>.xml</code> 文件包括文章、页面、评论、自定义栏目、分类和标签等数据</p>\n<h3 id=\"导入文章至-Hexo\"><a href=\"#导入文章至-Hexo\" class=\"headerlink\" title=\"导入文章至 Hexo\"></a>导入文章至 Hexo</h3><p>这一步其实也很简单。。首先，安装迁移的插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> &lt;blog_dir&gt;</span><br><span class=\"line\">npm i hexo-migrator-wordpress --save</span><br></pre></td></tr></table></figure>\n<p>插件安装完成后，执行下列命令来迁移所有文章。<code>source</code> 可以是 WordPress 导出的文件路径或网址。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo migrate wordpress &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>这个插件只能做到一些基础的迁移，迁移之后还需要再进行一些修正：</p>\n<h2 id=\"需要进行的修改\"><a href=\"#需要进行的修改\" class=\"headerlink\" title=\"需要进行的修改\"></a>需要进行的修改</h2><h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><p>迁移之后的 Markdown 文件中的代码块是不会自动加上 ``` 的，所以需要手动修正；其实也可以通过脚本进行修正，但是很难判断代码块所属语言类型，同时还需要二次确认，这样的话反而还不如逐篇文章进行修正。</p>\n<p>除此之外，迁移之后的代码块中可能会出现很多错误的转义符，多表现为：</p>\n<ul>\n<li><code>_</code> 变成了 <code>\\_</code></li>\n<li><code>&lt;</code> 变成了 <code>\\&lt;</code></li>\n<li><code>&gt;</code> 变成了 <code>\\&gt;</code></li>\n<li><code>[</code> 变成了 <code>\\[</code></li>\n<li><code>]</code> 变成了 <code>\\]</code></li>\n</ul>\n<p>其实还会有其他情况，就不一一列举了，所以在迁移之后我们需要手动进行修复，最好不要直接暴力地全局替换，因为有时候转义符还是需要的，我们只需要替换代码块中出现的即可。</p>\n<h3 id=\"categories-字段\"><a href=\"#categories-字段\" class=\"headerlink\" title=\"categories 字段\"></a>categories 字段</h3><p>如果您有过使用 WordPress 的经验，就很容易误解 Hexo 的分类方式。WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是 Hexo 不支持指定多个同级分类。下面的指定方法：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">Diary</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">Life</span></span><br></pre></td></tr></table></figure>\n<p>会使分类Life成为Diary的子分类，而不是并列分类。因此，迁移之后需要对 categories 字段进行筛选，否则会出现分类过多的问题。</p>\n<p>Hexo官方文档：<a href=\"https://hexo.io/zh-cn/docs/front-matter#%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE\" target=\"_blank\" rel=\"noopener\">分类方法的分歧</a></p>\n<h3 id=\"站内链接\"><a href=\"#站内链接\" class=\"headerlink\" title=\"站内链接\"></a>站内链接</h3><p>wordpress 的 URL 命名规则和 Hexo 不一致，所以在迁移之后我们需要对 Markdown 中的站内网页链接进行修正替换；我也没想到什么好的方案，只能手动修正了。</p>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><p>在用 wordpress 的时候，表格用了 TablePress 插件，迁移之后在 Markdown 中就无法展示了，不过 TablePress 提供了导出为 CSV 文件的功能，导出后我们可以借助一些在线工具（推荐一个：<a href=\"https://donatstudios.com/CsvToMarkdownTable\" target=\"_blank\" rel=\"noopener\">https://donatstudios.com/CsvToMarkdownTable</a>）将其转换成 Markdown 格式的表格。</p>\n<h2 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h2><ul>\n<li><a href=\"https://wangheng.org/migrating-from-wordpress-to-hexo.html\" target=\"_blank\" rel=\"noopener\">从wordpress迁移到hexo填坑</a></li>\n<li><a href=\"https://www.m690.com/archives/1135/\" target=\"_blank\" rel=\"noopener\">实战–迁移wordpress 到hexo</a></li>\n</ul>\n","more":"<p>我的个人博客一开始是用 Wordpress 搭建的，其实当初选择 Wordpress 也是经过了比较久的调研，不过后来发现 Wordpress 并不适合我，所以就花了一点时间迁移到了 Hexo，迁移过程积累了一些经验，也遇到了一些坑，这里记录一下：</p>\n<h2 id=\"迁移步骤\"><a href=\"#迁移步骤\" class=\"headerlink\" title=\"迁移步骤\"></a>迁移步骤</h2><h3 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h3><p>安装 Hexo 很简单，只需要：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\">hexo init &lt;blog_dir&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注：如果安装速度比较慢，可以尝试淘宝镜像，具体请自行搜索</p>\n</blockquote>\n<h3 id=\"导出-Wordpress-文章\"><a href=\"#导出-Wordpress-文章\" class=\"headerlink\" title=\"导出 Wordpress 文章\"></a>导出 Wordpress 文章</h3><p>这一步也很简单，直接访问 Wordpress 的<code>后台-工具-导出</code>，导出的 <code>.xml</code> 文件包括文章、页面、评论、自定义栏目、分类和标签等数据</p>\n<h3 id=\"导入文章至-Hexo\"><a href=\"#导入文章至-Hexo\" class=\"headerlink\" title=\"导入文章至 Hexo\"></a>导入文章至 Hexo</h3><p>这一步其实也很简单。。首先，安装迁移的插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> &lt;blog_dir&gt;</span><br><span class=\"line\">npm i hexo-migrator-wordpress --save</span><br></pre></td></tr></table></figure>\n<p>插件安装完成后，执行下列命令来迁移所有文章。<code>source</code> 可以是 WordPress 导出的文件路径或网址。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo migrate wordpress &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>这个插件只能做到一些基础的迁移，迁移之后还需要再进行一些修正：</p>\n<h2 id=\"需要进行的修改\"><a href=\"#需要进行的修改\" class=\"headerlink\" title=\"需要进行的修改\"></a>需要进行的修改</h2><h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><p>迁移之后的 Markdown 文件中的代码块是不会自动加上 ``` 的，所以需要手动修正；其实也可以通过脚本进行修正，但是很难判断代码块所属语言类型，同时还需要二次确认，这样的话反而还不如逐篇文章进行修正。</p>\n<p>除此之外，迁移之后的代码块中可能会出现很多错误的转义符，多表现为：</p>\n<ul>\n<li><code>_</code> 变成了 <code>\\_</code></li>\n<li><code>&lt;</code> 变成了 <code>\\&lt;</code></li>\n<li><code>&gt;</code> 变成了 <code>\\&gt;</code></li>\n<li><code>[</code> 变成了 <code>\\[</code></li>\n<li><code>]</code> 变成了 <code>\\]</code></li>\n</ul>\n<p>其实还会有其他情况，就不一一列举了，所以在迁移之后我们需要手动进行修复，最好不要直接暴力地全局替换，因为有时候转义符还是需要的，我们只需要替换代码块中出现的即可。</p>\n<h3 id=\"categories-字段\"><a href=\"#categories-字段\" class=\"headerlink\" title=\"categories 字段\"></a>categories 字段</h3><p>如果您有过使用 WordPress 的经验，就很容易误解 Hexo 的分类方式。WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是 Hexo 不支持指定多个同级分类。下面的指定方法：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">Diary</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">Life</span></span><br></pre></td></tr></table></figure>\n<p>会使分类Life成为Diary的子分类，而不是并列分类。因此，迁移之后需要对 categories 字段进行筛选，否则会出现分类过多的问题。</p>\n<p>Hexo官方文档：<a href=\"https://hexo.io/zh-cn/docs/front-matter#%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE\" target=\"_blank\" rel=\"noopener\">分类方法的分歧</a></p>\n<h3 id=\"站内链接\"><a href=\"#站内链接\" class=\"headerlink\" title=\"站内链接\"></a>站内链接</h3><p>wordpress 的 URL 命名规则和 Hexo 不一致，所以在迁移之后我们需要对 Markdown 中的站内网页链接进行修正替换；我也没想到什么好的方案，只能手动修正了。</p>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><p>在用 wordpress 的时候，表格用了 TablePress 插件，迁移之后在 Markdown 中就无法展示了，不过 TablePress 提供了导出为 CSV 文件的功能，导出后我们可以借助一些在线工具（推荐一个：<a href=\"https://donatstudios.com/CsvToMarkdownTable\" target=\"_blank\" rel=\"noopener\">https://donatstudios.com/CsvToMarkdownTable</a>）将其转换成 Markdown 格式的表格。</p>\n<h2 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h2><ul>\n<li><a href=\"https://wangheng.org/migrating-from-wordpress-to-hexo.html\" target=\"_blank\" rel=\"noopener\">从wordpress迁移到hexo填坑</a></li>\n<li><a href=\"https://www.m690.com/archives/1135/\" target=\"_blank\" rel=\"noopener\">实战–迁移wordpress 到hexo</a></li>\n</ul>\n","categories":[{"name":"Hexo","path":"api/categories/Hexo.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"Wordpress","path":"api/tags/Wordpress.json"}]}