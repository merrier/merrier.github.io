{"title":"好文章推荐系列——CSS","slug":"好文章推荐系列——CSS","date":"2017-08-07T16:29:07.000Z","updated":"2025-01-03T12:32:52.481Z","comments":true,"path":"api/articles/好文章推荐系列——CSS.json","excerpt":null,"covers":null,"content":"<h3 id=\"深入浅出-CSS-动画\"><a href=\"#深入浅出-CSS-动画\" class=\"headerlink\" title=\"深入浅出 CSS 动画\"></a><a href=\"https://juejin.cn/post/7052506940777168927\">深入浅出 CSS 动画</a></h3><p>本文将比较全面细致的梳理一下 CSS 动画的方方面面，针对每个属性用法的讲解及进阶用法的示意，希望能成为一个比较好的从入门到进阶的教程。</p>\n<h3 id=\"Towards-an-animation-smoothness-metric\"><a href=\"#Towards-an-animation-smoothness-metric\" class=\"headerlink\" title=\"Towards an animation smoothness metric\"></a><a href=\"https://web.dev/smoothness/\">Towards an animation smoothness metric</a></h3><p>Learn about measuring animations, how to think about animation frames, and overall page smoothness.</p>\n<h3 id=\"写给自己看的CSS“content”的应用场景\"><a href=\"#写给自己看的CSS“content”的应用场景\" class=\"headerlink\" title=\"写给自己看的CSS“content”的应用场景\"></a><a href=\"https://juejin.cn/post/7030806479212904456\">写给自己看的CSS“content”的应用场景</a></h3><p>最近学习css的时候，真的有好多地方都用到了content。例如<a href=\"https://juejin.cn/post/7030442181382897671\">《这一篇你不知道的美化列表的两种方案！》</a>用到了content来美化列表，还有这一篇<a href=\"https://juejin.cn/post/7029329890767962149\">《还不会动态渐变文字，试试这几种解决方案！》</a>用到了content+attr来实现动态渐变文字。还有其他文章中，也用到了content.所以我决定整理一下，<strong>关于content，我的应用</strong>。<br>在MDN上列举了content可以设置的各种内容。例如颜色，图片，表情符号，unicode等。有兴趣的可以自己研究：</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/content\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/content</a></p>\n<h3 id=\"RTL-Styling-101\"><a href=\"#RTL-Styling-101\" class=\"headerlink\" title=\"RTL Styling 101\"></a><a href=\"https://rtlstyling.com/posts/rtl-styling#introduction-to-rtl-styling\">RTL Styling 101</a></h3><p>Over 292 million people around the world speak Arabic as their first language. Arabic (al-Arabiyyah, pronounced /al ʕarabijja/, /ʕarabiː/) is my native language, and I sometimes build websites that need to support both left-to-right (LTR) and right-to-left (RTL) styles.</p>\n<h3 id=\"What-does-100-mean-in-CSS\"><a href=\"#What-does-100-mean-in-CSS\" class=\"headerlink\" title=\"What does 100% mean in CSS?\"></a><a href=\"https://wattenberger.com/blog/css-percents\">What does 100% mean in CSS?</a></h3><p>One of the CSS units I use most is the wonderful % — so handy for positioning elements on the page.<br>Unfortunately, the rules aren’t exactly straightforward. One question I’m always asking myself is:</p>\n<p><strong>Percent of what?</strong></p>\n<p>Hopefully this guide can help clear things up.</p>\n<h3 id=\"深入理解-flex-grow、flex-shrink、flex-basis\"><a href=\"#深入理解-flex-grow、flex-shrink、flex-basis\" class=\"headerlink\" title=\"深入理解 flex-grow、flex-shrink、flex-basis\"></a><a href=\"https://juejin.cn/post/6844904016439148551\">深入理解 flex-grow、flex-shrink、flex-basis</a></h3><p>任何一个容器都可以用 Flex 进行布局，而且 Flex 是发生在父容器和子容器之间的布局关系的，那么父容器与子容器的关系是怎么样子的，又是怎么计算子容器所占用的空间的呢，怎么进行弹性布局的呢？<br>欲要解决上面的问题，首先得了解 flex-grow 和 flex-shrink 是怎么计算的？flex-basis 和 width 又有什么关系和区别？</p>\n<h3 id=\"灵活运用CSS开发技巧\"><a href=\"#灵活运用CSS开发技巧\" class=\"headerlink\" title=\"灵活运用CSS开发技巧\"></a><a href=\"https://juejin.cn/post/6844903926110617613\">灵活运用CSS开发技巧</a></h3><p>我整理下三年来自己使用到的一些CSS开发技巧，希望能让你写出耳目一新、容易理解、舒服自然的代码：</p>\n<ul>\n<li>Layout Skill：布局技巧</li>\n<li>Behavior Skill：行为技巧</li>\n<li>Color Skill：色彩技巧</li>\n<li>Figure Skill：图形技巧</li>\n<li>Component Skill：组件技巧</li>\n</ul>\n<h3 id=\"Pure-CSS-Custom-Styled-Radio-Buttons\"><a href=\"#Pure-CSS-Custom-Styled-Radio-Buttons\" class=\"headerlink\" title=\"Pure CSS Custom Styled Radio Buttons\"></a><a href=\"https://moderncss.dev/pure-css-custom-styled-radio-buttons/\">Pure CSS Custom Styled Radio Buttons</a></h3><p>Using a combination of the following properties, we can create custom, accessible, cross-browser, theme-able, scalable radio buttons in pure CSS:</p>\n<ul>\n<li><strong>currentColor</strong> for theme-ability</li>\n<li><strong>em</strong> units for relative sizing</li>\n<li><strong>appearance: none</strong> for full restyling access</li>\n<li>CSS grid layout to align the input and label</li>\n</ul>\n<h3 id=\"Less-Absolute-Positioning-With-Modern-CSS\"><a href=\"#Less-Absolute-Positioning-With-Modern-CSS\" class=\"headerlink\" title=\"Less Absolute Positioning With Modern CSS\"></a><a href=\"https://ishadeed.com/article/less-absolute-positioning-modern-css/\">Less Absolute Positioning With Modern CSS</a></h3><p>在本文中，我将探讨几个使用绝对定位（<code>position: absolute</code>）的用例，它们实际上并不需要。</p>\n<h3 id=\"Designing-Beautiful-Shadows-in-CSS\"><a href=\"#Designing-Beautiful-Shadows-in-CSS\" class=\"headerlink\" title=\"Designing Beautiful Shadows in CSS\"></a><a href=\"https://www.joshwcomeau.com/css/designing-shadows/\">Designing Beautiful Shadows in CSS</a></h3><p>In this tutorial, we’ll learn how to transform typical box-shadows into beautiful, life-like ones:</p>\n<h3 id=\"2021年你可能不知道的-CSS-特性\"><a href=\"#2021年你可能不知道的-CSS-特性\" class=\"headerlink\" title=\"2021年你可能不知道的 CSS 特性\"></a><a href=\"https://zhuanlan.zhihu.com/p/376238191\">2021年你可能不知道的 CSS 特性</a></h3><p>来自大漠，虽然聊的是“新特性”，但其中有些特性并不怎么“新”，或许已在你的项目中，或许已接触过，只是不太了解而以。接下来，就和大家一起来简单地回顾一下这些特性，希望大家能喜欢，也希望对大家平时工作有所帮助。</p>\n<h3 id=\"CSS-实现多行文本“展开收起”\"><a href=\"#CSS-实现多行文本“展开收起”\" class=\"headerlink\" title=\"CSS 实现多行文本“展开收起”\"></a><a href=\"https://zhuanlan.zhihu.com/p/373359523\">CSS 实现多行文本“展开收起”</a></h3><p>多行文本展开收起是一个很常见的交互，实现这一类布局和交互难点主要有以下几点</p>\n<ul>\n<li>位于多行文本右下角的“展开收起”按钮</li>\n<li>“展开”和“收起”两种状态的切换</li>\n<li>当文本不超过指定行数时，不显示“展开收起”按钮</li>\n</ul>\n<h3 id=\"一文详解-CSS-in-JS\"><a href=\"#一文详解-CSS-in-JS\" class=\"headerlink\" title=\"一文详解 CSS-in-JS\"></a><a href=\"https://mp.weixin.qq.com/s/v0IB2mZHrF0l2ks5pVsO1g\">一文详解 CSS-in-JS</a></h3><p>CSS 做为 Web 的样式表来呈现丰富多彩的 Web 应用已经不再是唯一的选择了，我们或许应该多考虑其他的扩展性和移植性尝试未来的 CSS-in-JS。</p>\n<h3 id=\"Getting-started-with-CSS-Font-Loading\"><a href=\"#Getting-started-with-CSS-Font-Loading\" class=\"headerlink\" title=\"Getting started with CSS Font Loading\"></a><a href=\"https://medium.com/@matuzo/getting-started-with-css-font-loading-e24e7ffaa791\">Getting started with CSS Font Loading</a></h3><p>I was in the mood to learn something new and so I decided to take a look at the <a href=\"https://drafts.csswg.org/css-font-loading/\">CSS Font Loading API</a>.</p>\n<h3 id=\"使用CSS-Flexbox-构建可靠实用的网站-Header\"><a href=\"#使用CSS-Flexbox-构建可靠实用的网站-Header\" class=\"headerlink\" title=\"使用CSS Flexbox 构建可靠实用的网站 Header\"></a><a href=\"https://segmentfault.com/a/1190000023908399\">使用CSS Flexbox 构建可靠实用的网站 Header</a></h3><p>在 CSS3 没有普及的时候，创建一个网站 header 是一项既可怕又困难的任务 ?。那时，Flexbox 还是个新东西，我们不得不使用老方法，比如 float和clearfix技术。今天，情况完全不同了，Flexbox 得到了广泛的支持，大大的减少了我们的开发工作，同时也为我们提供了更多的可能性。</p>\n<p>有人可能会说，现在 CSS3 这么普及，制作一个网站 header 不是很容易么 ?？ 并非如此，因为有一些有趣的挑战需要解决,在本文中我们会介绍其中的几种。</p>\n<h3 id=\"Ten-modern-layouts-in-one-line-of-CSS\"><a href=\"#Ten-modern-layouts-in-one-line-of-CSS\" class=\"headerlink\" title=\"Ten modern layouts in one line of CSS\"></a><a href=\"https://web.dev/one-line-layouts/\">Ten modern layouts in one line of CSS</a></h3><p>This post highlights a few powerful lines of CSS that do some serious heavy lifting and help you build robust modern layouts.</p>\n<h3 id=\"移动端UI一致性解决方案\"><a href=\"#移动端UI一致性解决方案\" class=\"headerlink\" title=\"移动端UI一致性解决方案\"></a><a href=\"https://mp.weixin.qq.com/s/oq7ylltdRIdJuSlL7EIiNA\">移动端UI一致性解决方案</a></h3><p>外卖UI一致性项目是外卖UI设计团队与研发团队共建的项目，目的是改善用户端体验的一致性，提升多技术方案间组件的通用性和复用率，降低整体视觉改版带来的研发成本。外卖技术团队通过在实践中不断总结经验，开发了一套完整的UI一致性解决方案，目前已经取得了一些成果，本文系实践经验分享。</p>\n<h3 id=\"Line-Clampin’-Truncating-Multiple-Line-Text\"><a href=\"#Line-Clampin’-Truncating-Multiple-Line-Text\" class=\"headerlink\" title=\"Line Clampin’ (Truncating Multiple Line Text)\"></a><a href=\"https://css-tricks.com/line-clampin/\">Line Clampin’ (Truncating Multiple Line Text)</a></h3><p>作者总结了多行文本省略的各种解决方案，最后给出了“最佳实践”</p>\n<h3 id=\"Full-Bleed-Layout-Using-CSS-Grid\"><a href=\"#Full-Bleed-Layout-Using-CSS-Grid\" class=\"headerlink\" title=\"Full-Bleed Layout Using CSS Grid\"></a><a href=\"https://www.joshwcomeau.com/css/full-bleed/\">Full-Bleed Layout Using CSS Grid</a></h3><p>如何使用 CSS Grid 实现一个现在非常常见的布局：</p>\n<div align='center'><img src='/images/hexo_post_715.png' alt=''/></div>\n\n\n<h3 id=\"10-Ways-to-Hide-Elements-in-CSS\"><a href=\"#10-Ways-to-Hide-Elements-in-CSS\" class=\"headerlink\" title=\"10 Ways to Hide Elements in CSS\"></a><a href=\"https://www.sitepoint.com/hide-elements-in-css/\">10 Ways to Hide Elements in CSS</a></h3><p>There are multiple ways to hide an element in CSS, but they differ in the way they affect accessibility, layout, animation, performance, and event handling.</p>\n<h3 id=\"How-Do-You-Remove-Unused-CSS-From-a-Site\"><a href=\"#How-Do-You-Remove-Unused-CSS-From-a-Site\" class=\"headerlink\" title=\"How Do You Remove Unused CSS From a Site?\"></a><a href=\"https://css-tricks.com/how-do-you-remove-unused-css-from-a-site/\">How Do You Remove Unused CSS From a Site?</a></h3><p>有时候你用到一个库，但是这个库会默认加载所有样式，但其实你用到的只有很小一部分，那这时候应该如何把没有用到的删除呢？</p>\n<h3 id=\"Everything-You-Need-To-Know-About-CSS-Margins\"><a href=\"#Everything-You-Need-To-Know-About-CSS-Margins\" class=\"headerlink\" title=\"Everything You Need To Know About CSS Margins\"></a><a href=\"https://www.smashingmagazine.com/2019/07/margins-in-css/\">Everything You Need To Know About CSS Margins</a></h3><p>You now know most of what there is to know about margins! In short:</p>\n<ul>\n<li>Margin collapsing is a thing. Understanding why it happens and when it doesn’t will help you solve any problems it may cause.</li>\n<li>Setting margins in one direction only solves many margin related headaches.</li>\n<li>As with anything in CSS, share with your team the decisions you make, and comment your code.</li>\n<li>Thinking about block and inline dimensions rather than the physical top, right, bottom and left will help you as the web moves towards being writing mode agnostic.</li>\n</ul>\n<h3 id=\"【建议收藏】css晦涩难懂的点都在这啦\"><a href=\"#【建议收藏】css晦涩难懂的点都在这啦\" class=\"headerlink\" title=\"【建议收藏】css晦涩难懂的点都在这啦\"></a><a href=\"https://juejin.im/post/6888102016007176200\">【建议收藏】css晦涩难懂的点都在这啦</a></h3><p>作者整理了下 CSS 比较晦涩难懂的点，在文章的最后也会有一些面试中常问的 CSS 相关面试题，看完全文面试就不用慌了，附目录：</p>\n<div align='center'><img src='/images/hexo_post_652.png' alt='' /></div>\n\n<h3 id=\"Some-more-CSS-comics\"><a href=\"#Some-more-CSS-comics\" class=\"headerlink\" title=\"Some more CSS comics\"></a><a href=\"https://jvns.ca/blog/2020/08/10/some-more-css-comics/\">Some more CSS comics</a></h3><p>作者通过几篇漫画非常有趣地调侃了 CSS 中经常遇到的一些问题，比如居中、兼容性、语法、flex 布局等等，篇幅较短，但是漫画画的很有意思。</p>\n<h3 id=\"Hello-CSS系列\"><a href=\"#Hello-CSS系列\" class=\"headerlink\" title=\"Hello CSS系列\"></a><a href=\"https://juejin.im/post/5cdc33ac51882515cc7e4b50\">Hello CSS系列</a></h3><p>【Hello CSS】是以CSS基础概念为主题的系列文章，旨在帮助大家更深刻地了解并且提高CSS在各位开发者心目中的地位。</p>\n<h3 id=\"可能是最全的前端动效库汇总\"><a href=\"#可能是最全的前端动效库汇总\" class=\"headerlink\" title=\"可能是最全的前端动效库汇总\"></a><a href=\"https://juejin.im/post/5cc089eae51d456e7d189f9d\">可能是最全的前端动效库汇总</a></h3><p>作者对当前前端领域的动效库进行了大而全的总结，涉及到的动效库多达几十种，同时按照Star数进行了排序</p>\n<h3 id=\"写-CSS-的姿势\"><a href=\"#写-CSS-的姿势\" class=\"headerlink\" title=\"写 CSS 的姿势\"></a><a href=\"https://www.w3cplus.com/css/css-evolution.html\">写 CSS 的姿势</a></h3><p>作者-大漠，内容很丰富，放在第一位是有原因的。。</p>\n<h3 id=\"CSS-实现长宽比的几种方案\"><a href=\"#CSS-实现长宽比的几种方案\" class=\"headerlink\" title=\"CSS 实现长宽比的几种方案\"></a><a href=\"https://www.w3cplus.com/css/aspect-ratio.html\">CSS 实现长宽比的几种方案</a></h3><p>作者是传说中的大漠孤秋，介绍了单纯用CSS实现定比例长宽图形的几种方案</p>\n<h3 id=\"实用的-CSS-—-贝塞尔曲线-cubic-bezier\"><a href=\"#实用的-CSS-—-贝塞尔曲线-cubic-bezier\" class=\"headerlink\" title=\"实用的 CSS — 贝塞尔曲线(cubic-bezier)\"></a><a href=\"http://joveyzheng.com/2016/03/16/css-cubic-bezier/\">实用的 CSS — 贝塞尔曲线(cubic-bezier)</a></h3><p>贝塞尔曲线在 CSS 动画中应用较广，了解一下对于 CSS 动画效果会有更深的理解</p>\n<h3 id=\"探究-CSS-解析原理\"><a href=\"#探究-CSS-解析原理\" class=\"headerlink\" title=\"探究 CSS 解析原理\"></a><a href=\"http://jartto.wang/2017/11/13/Exploring-the-principle-of-CSS-parsing/index.html\">探究 CSS 解析原理</a></h3><p>作者对浏览器的渲染过程和 CSS 的解析原理进行了详细解释，代码很多，干货满满</p>\n<h3 id=\"改变用户体验的滚动新特性\"><a href=\"#改变用户体验的滚动新特性\" class=\"headerlink\" title=\"改变用户体验的滚动新特性\"></a><a href=\"https://www.w3cplus.com/css/new-scroll-features-that-change-the-user-experience.html\">改变用户体验的滚动新特性</a></h3><p>作者是大漠，他在文中介绍了时至今日，CSS 中为浏览器滚动提供的相关新特性究竟能给用户带来哪些新的体验。图片和代码较多，慎用流量</p>\n<h3 id=\"说说CSS学习中的瓶颈\"><a href=\"#说说CSS学习中的瓶颈\" class=\"headerlink\" title=\"说说CSS学习中的瓶颈\"></a><a href=\"https://www.zhangxinxu.com/wordpress/2012/07/bottleneck-css-study/\">说说CSS学习中的瓶颈</a></h3><p>张鑫旭 2012 年的文章，虽然年代比较久远了，但是至今看来还是颇受启发，如果你有“CSS好难”、“为什么CSS那么多属性”、“怎么让它垂直居中啊”等疑问，推荐你看这篇文章。</p>\n<h3 id=\"「前端那些事儿」③-CSS-布局方案\"><a href=\"#「前端那些事儿」③-CSS-布局方案\" class=\"headerlink\" title=\"「前端那些事儿」③ CSS 布局方案\"></a><a href=\"https://juejin.im/post/5bd805e6f265da0acd2107d7\">「前端那些事儿」③ CSS 布局方案</a></h3><p>作者几乎罗列了日常工作中遇到的所有类型的布局，并附上了详细的代码，其中包括：居中布局、多列布局、并排等分，单排对齐靠左布局和圣杯布局&amp;双飞翼布局等。源码传送门：<a href=\"https://github.com/willspace/css-layout/tree/master/demo-1\">https://github.com/willspace/css-layout/tree/master/demo-1</a></p>\n<h3 id=\"深入了解-CSS3-新特性\"><a href=\"#深入了解-CSS3-新特性\" class=\"headerlink\" title=\"深入了解 CSS3 新特性\"></a><a href=\"https://www.ibm.com/developerworks/cn/web/1202_zhouxiang_css3/\">深入了解 CSS3 新特性</a></h3><p>这篇文章介绍了 Web 开发中关于 CSS3 的一些内容，由浅入深的逐步引出 CSS3 的各种相关属性。基于各个 CSS3 属性的原理，通过实际的源代码介绍各个 CSS3 新特性的特点，使用方式以及使用中需要注意的地方</p>\n<h3 id=\"You-need-to-know-css\"><a href=\"#You-need-to-know-css\" class=\"headerlink\" title=\"You need to know css\"></a><a href=\"https://lhammer.cn/You-need-to-know-css/#/\">You need to know css</a></h3><p>作者把自己的收获和工作中常用的一些 CSS 小样式总结成了这份文档，包含了 43 个 CSS 的小样式。</p>\n<h3 id=\"06期：前端布局基础概述\"><a href=\"#06期：前端布局基础概述\" class=\"headerlink\" title=\"06期：前端布局基础概述\"></a><a href=\"https://mp.weixin.qq.com/s/-LcNZWFFty2lWuND6uuNNA\">06期：前端布局基础概述</a></h3><p>作者找到了W3C组织对初始化包含块的官方定义，为了让刚入前端圈的同学少走一些弯路，于是系统地分享一下，同时掺杂了作者本人在前端布局基础方面积累的经验。（因为是系统概述，所以篇幅会比较长，希望各位读者有心理准备）</p>\n<h3 id=\"在-css-中什么是好的注释？\"><a href=\"#在-css-中什么是好的注释？\" class=\"headerlink\" title=\"在 css 中什么是好的注释？\"></a><a href=\"https://mp.weixin.qq.com/s/963TnTMNAXstdIPYCTsrqQ\">在 css 中什么是好的注释？</a></h3><blockquote>\n<p>注释就意味着代码无法自说明 —— Robert C. Martin</p>\n</blockquote>\n<p>Martin在文中详细讨论了代码注释，他的意思是，这些注释是注定会过时的。程序执行时会忽视注释，所以无法保证这些说明注释会准确的描述代码作用。所以最好的方式是让代码自说明，如此，按照代码逻辑，程序员和程序获取到的信息是一致的。读完这篇文章后，我们就知道该怎么写注释了。</p>\n","more":"<h3 id=\"深入浅出-CSS-动画\"><a href=\"#深入浅出-CSS-动画\" class=\"headerlink\" title=\"深入浅出 CSS 动画\"></a><a href=\"https://juejin.cn/post/7052506940777168927\">深入浅出 CSS 动画</a></h3><p>本文将比较全面细致的梳理一下 CSS 动画的方方面面，针对每个属性用法的讲解及进阶用法的示意，希望能成为一个比较好的从入门到进阶的教程。</p>\n<h3 id=\"Towards-an-animation-smoothness-metric\"><a href=\"#Towards-an-animation-smoothness-metric\" class=\"headerlink\" title=\"Towards an animation smoothness metric\"></a><a href=\"https://web.dev/smoothness/\">Towards an animation smoothness metric</a></h3><p>Learn about measuring animations, how to think about animation frames, and overall page smoothness.</p>\n<h3 id=\"写给自己看的CSS“content”的应用场景\"><a href=\"#写给自己看的CSS“content”的应用场景\" class=\"headerlink\" title=\"写给自己看的CSS“content”的应用场景\"></a><a href=\"https://juejin.cn/post/7030806479212904456\">写给自己看的CSS“content”的应用场景</a></h3><p>最近学习css的时候，真的有好多地方都用到了content。例如<a href=\"https://juejin.cn/post/7030442181382897671\">《这一篇你不知道的美化列表的两种方案！》</a>用到了content来美化列表，还有这一篇<a href=\"https://juejin.cn/post/7029329890767962149\">《还不会动态渐变文字，试试这几种解决方案！》</a>用到了content+attr来实现动态渐变文字。还有其他文章中，也用到了content.所以我决定整理一下，<strong>关于content，我的应用</strong>。<br>在MDN上列举了content可以设置的各种内容。例如颜色，图片，表情符号，unicode等。有兴趣的可以自己研究：</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/content\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/content</a></p>\n<h3 id=\"RTL-Styling-101\"><a href=\"#RTL-Styling-101\" class=\"headerlink\" title=\"RTL Styling 101\"></a><a href=\"https://rtlstyling.com/posts/rtl-styling#introduction-to-rtl-styling\">RTL Styling 101</a></h3><p>Over 292 million people around the world speak Arabic as their first language. Arabic (al-Arabiyyah, pronounced /al ʕarabijja/, /ʕarabiː/) is my native language, and I sometimes build websites that need to support both left-to-right (LTR) and right-to-left (RTL) styles.</p>\n<h3 id=\"What-does-100-mean-in-CSS\"><a href=\"#What-does-100-mean-in-CSS\" class=\"headerlink\" title=\"What does 100% mean in CSS?\"></a><a href=\"https://wattenberger.com/blog/css-percents\">What does 100% mean in CSS?</a></h3><p>One of the CSS units I use most is the wonderful % — so handy for positioning elements on the page.<br>Unfortunately, the rules aren’t exactly straightforward. One question I’m always asking myself is:</p>\n<p><strong>Percent of what?</strong></p>\n<p>Hopefully this guide can help clear things up.</p>\n<h3 id=\"深入理解-flex-grow、flex-shrink、flex-basis\"><a href=\"#深入理解-flex-grow、flex-shrink、flex-basis\" class=\"headerlink\" title=\"深入理解 flex-grow、flex-shrink、flex-basis\"></a><a href=\"https://juejin.cn/post/6844904016439148551\">深入理解 flex-grow、flex-shrink、flex-basis</a></h3><p>任何一个容器都可以用 Flex 进行布局，而且 Flex 是发生在父容器和子容器之间的布局关系的，那么父容器与子容器的关系是怎么样子的，又是怎么计算子容器所占用的空间的呢，怎么进行弹性布局的呢？<br>欲要解决上面的问题，首先得了解 flex-grow 和 flex-shrink 是怎么计算的？flex-basis 和 width 又有什么关系和区别？</p>\n<h3 id=\"灵活运用CSS开发技巧\"><a href=\"#灵活运用CSS开发技巧\" class=\"headerlink\" title=\"灵活运用CSS开发技巧\"></a><a href=\"https://juejin.cn/post/6844903926110617613\">灵活运用CSS开发技巧</a></h3><p>我整理下三年来自己使用到的一些CSS开发技巧，希望能让你写出耳目一新、容易理解、舒服自然的代码：</p>\n<ul>\n<li>Layout Skill：布局技巧</li>\n<li>Behavior Skill：行为技巧</li>\n<li>Color Skill：色彩技巧</li>\n<li>Figure Skill：图形技巧</li>\n<li>Component Skill：组件技巧</li>\n</ul>\n<h3 id=\"Pure-CSS-Custom-Styled-Radio-Buttons\"><a href=\"#Pure-CSS-Custom-Styled-Radio-Buttons\" class=\"headerlink\" title=\"Pure CSS Custom Styled Radio Buttons\"></a><a href=\"https://moderncss.dev/pure-css-custom-styled-radio-buttons/\">Pure CSS Custom Styled Radio Buttons</a></h3><p>Using a combination of the following properties, we can create custom, accessible, cross-browser, theme-able, scalable radio buttons in pure CSS:</p>\n<ul>\n<li><strong>currentColor</strong> for theme-ability</li>\n<li><strong>em</strong> units for relative sizing</li>\n<li><strong>appearance: none</strong> for full restyling access</li>\n<li>CSS grid layout to align the input and label</li>\n</ul>\n<h3 id=\"Less-Absolute-Positioning-With-Modern-CSS\"><a href=\"#Less-Absolute-Positioning-With-Modern-CSS\" class=\"headerlink\" title=\"Less Absolute Positioning With Modern CSS\"></a><a href=\"https://ishadeed.com/article/less-absolute-positioning-modern-css/\">Less Absolute Positioning With Modern CSS</a></h3><p>在本文中，我将探讨几个使用绝对定位（<code>position: absolute</code>）的用例，它们实际上并不需要。</p>\n<h3 id=\"Designing-Beautiful-Shadows-in-CSS\"><a href=\"#Designing-Beautiful-Shadows-in-CSS\" class=\"headerlink\" title=\"Designing Beautiful Shadows in CSS\"></a><a href=\"https://www.joshwcomeau.com/css/designing-shadows/\">Designing Beautiful Shadows in CSS</a></h3><p>In this tutorial, we’ll learn how to transform typical box-shadows into beautiful, life-like ones:</p>\n<h3 id=\"2021年你可能不知道的-CSS-特性\"><a href=\"#2021年你可能不知道的-CSS-特性\" class=\"headerlink\" title=\"2021年你可能不知道的 CSS 特性\"></a><a href=\"https://zhuanlan.zhihu.com/p/376238191\">2021年你可能不知道的 CSS 特性</a></h3><p>来自大漠，虽然聊的是“新特性”，但其中有些特性并不怎么“新”，或许已在你的项目中，或许已接触过，只是不太了解而以。接下来，就和大家一起来简单地回顾一下这些特性，希望大家能喜欢，也希望对大家平时工作有所帮助。</p>\n<h3 id=\"CSS-实现多行文本“展开收起”\"><a href=\"#CSS-实现多行文本“展开收起”\" class=\"headerlink\" title=\"CSS 实现多行文本“展开收起”\"></a><a href=\"https://zhuanlan.zhihu.com/p/373359523\">CSS 实现多行文本“展开收起”</a></h3><p>多行文本展开收起是一个很常见的交互，实现这一类布局和交互难点主要有以下几点</p>\n<ul>\n<li>位于多行文本右下角的“展开收起”按钮</li>\n<li>“展开”和“收起”两种状态的切换</li>\n<li>当文本不超过指定行数时，不显示“展开收起”按钮</li>\n</ul>\n<h3 id=\"一文详解-CSS-in-JS\"><a href=\"#一文详解-CSS-in-JS\" class=\"headerlink\" title=\"一文详解 CSS-in-JS\"></a><a href=\"https://mp.weixin.qq.com/s/v0IB2mZHrF0l2ks5pVsO1g\">一文详解 CSS-in-JS</a></h3><p>CSS 做为 Web 的样式表来呈现丰富多彩的 Web 应用已经不再是唯一的选择了，我们或许应该多考虑其他的扩展性和移植性尝试未来的 CSS-in-JS。</p>\n<h3 id=\"Getting-started-with-CSS-Font-Loading\"><a href=\"#Getting-started-with-CSS-Font-Loading\" class=\"headerlink\" title=\"Getting started with CSS Font Loading\"></a><a href=\"https://medium.com/@matuzo/getting-started-with-css-font-loading-e24e7ffaa791\">Getting started with CSS Font Loading</a></h3><p>I was in the mood to learn something new and so I decided to take a look at the <a href=\"https://drafts.csswg.org/css-font-loading/\">CSS Font Loading API</a>.</p>\n<h3 id=\"使用CSS-Flexbox-构建可靠实用的网站-Header\"><a href=\"#使用CSS-Flexbox-构建可靠实用的网站-Header\" class=\"headerlink\" title=\"使用CSS Flexbox 构建可靠实用的网站 Header\"></a><a href=\"https://segmentfault.com/a/1190000023908399\">使用CSS Flexbox 构建可靠实用的网站 Header</a></h3><p>在 CSS3 没有普及的时候，创建一个网站 header 是一项既可怕又困难的任务 ?。那时，Flexbox 还是个新东西，我们不得不使用老方法，比如 float和clearfix技术。今天，情况完全不同了，Flexbox 得到了广泛的支持，大大的减少了我们的开发工作，同时也为我们提供了更多的可能性。</p>\n<p>有人可能会说，现在 CSS3 这么普及，制作一个网站 header 不是很容易么 ?？ 并非如此，因为有一些有趣的挑战需要解决,在本文中我们会介绍其中的几种。</p>\n<h3 id=\"Ten-modern-layouts-in-one-line-of-CSS\"><a href=\"#Ten-modern-layouts-in-one-line-of-CSS\" class=\"headerlink\" title=\"Ten modern layouts in one line of CSS\"></a><a href=\"https://web.dev/one-line-layouts/\">Ten modern layouts in one line of CSS</a></h3><p>This post highlights a few powerful lines of CSS that do some serious heavy lifting and help you build robust modern layouts.</p>\n<h3 id=\"移动端UI一致性解决方案\"><a href=\"#移动端UI一致性解决方案\" class=\"headerlink\" title=\"移动端UI一致性解决方案\"></a><a href=\"https://mp.weixin.qq.com/s/oq7ylltdRIdJuSlL7EIiNA\">移动端UI一致性解决方案</a></h3><p>外卖UI一致性项目是外卖UI设计团队与研发团队共建的项目，目的是改善用户端体验的一致性，提升多技术方案间组件的通用性和复用率，降低整体视觉改版带来的研发成本。外卖技术团队通过在实践中不断总结经验，开发了一套完整的UI一致性解决方案，目前已经取得了一些成果，本文系实践经验分享。</p>\n<h3 id=\"Line-Clampin’-Truncating-Multiple-Line-Text\"><a href=\"#Line-Clampin’-Truncating-Multiple-Line-Text\" class=\"headerlink\" title=\"Line Clampin’ (Truncating Multiple Line Text)\"></a><a href=\"https://css-tricks.com/line-clampin/\">Line Clampin’ (Truncating Multiple Line Text)</a></h3><p>作者总结了多行文本省略的各种解决方案，最后给出了“最佳实践”</p>\n<h3 id=\"Full-Bleed-Layout-Using-CSS-Grid\"><a href=\"#Full-Bleed-Layout-Using-CSS-Grid\" class=\"headerlink\" title=\"Full-Bleed Layout Using CSS Grid\"></a><a href=\"https://www.joshwcomeau.com/css/full-bleed/\">Full-Bleed Layout Using CSS Grid</a></h3><p>如何使用 CSS Grid 实现一个现在非常常见的布局：</p>\n<div align='center'><img src='/images/hexo_post_715.png' alt=''/></div>\n\n\n<h3 id=\"10-Ways-to-Hide-Elements-in-CSS\"><a href=\"#10-Ways-to-Hide-Elements-in-CSS\" class=\"headerlink\" title=\"10 Ways to Hide Elements in CSS\"></a><a href=\"https://www.sitepoint.com/hide-elements-in-css/\">10 Ways to Hide Elements in CSS</a></h3><p>There are multiple ways to hide an element in CSS, but they differ in the way they affect accessibility, layout, animation, performance, and event handling.</p>\n<h3 id=\"How-Do-You-Remove-Unused-CSS-From-a-Site\"><a href=\"#How-Do-You-Remove-Unused-CSS-From-a-Site\" class=\"headerlink\" title=\"How Do You Remove Unused CSS From a Site?\"></a><a href=\"https://css-tricks.com/how-do-you-remove-unused-css-from-a-site/\">How Do You Remove Unused CSS From a Site?</a></h3><p>有时候你用到一个库，但是这个库会默认加载所有样式，但其实你用到的只有很小一部分，那这时候应该如何把没有用到的删除呢？</p>\n<h3 id=\"Everything-You-Need-To-Know-About-CSS-Margins\"><a href=\"#Everything-You-Need-To-Know-About-CSS-Margins\" class=\"headerlink\" title=\"Everything You Need To Know About CSS Margins\"></a><a href=\"https://www.smashingmagazine.com/2019/07/margins-in-css/\">Everything You Need To Know About CSS Margins</a></h3><p>You now know most of what there is to know about margins! In short:</p>\n<ul>\n<li>Margin collapsing is a thing. Understanding why it happens and when it doesn’t will help you solve any problems it may cause.</li>\n<li>Setting margins in one direction only solves many margin related headaches.</li>\n<li>As with anything in CSS, share with your team the decisions you make, and comment your code.</li>\n<li>Thinking about block and inline dimensions rather than the physical top, right, bottom and left will help you as the web moves towards being writing mode agnostic.</li>\n</ul>\n<h3 id=\"【建议收藏】css晦涩难懂的点都在这啦\"><a href=\"#【建议收藏】css晦涩难懂的点都在这啦\" class=\"headerlink\" title=\"【建议收藏】css晦涩难懂的点都在这啦\"></a><a href=\"https://juejin.im/post/6888102016007176200\">【建议收藏】css晦涩难懂的点都在这啦</a></h3><p>作者整理了下 CSS 比较晦涩难懂的点，在文章的最后也会有一些面试中常问的 CSS 相关面试题，看完全文面试就不用慌了，附目录：</p>\n<div align='center'><img src='/images/hexo_post_652.png' alt='' /></div>\n\n<h3 id=\"Some-more-CSS-comics\"><a href=\"#Some-more-CSS-comics\" class=\"headerlink\" title=\"Some more CSS comics\"></a><a href=\"https://jvns.ca/blog/2020/08/10/some-more-css-comics/\">Some more CSS comics</a></h3><p>作者通过几篇漫画非常有趣地调侃了 CSS 中经常遇到的一些问题，比如居中、兼容性、语法、flex 布局等等，篇幅较短，但是漫画画的很有意思。</p>\n<h3 id=\"Hello-CSS系列\"><a href=\"#Hello-CSS系列\" class=\"headerlink\" title=\"Hello CSS系列\"></a><a href=\"https://juejin.im/post/5cdc33ac51882515cc7e4b50\">Hello CSS系列</a></h3><p>【Hello CSS】是以CSS基础概念为主题的系列文章，旨在帮助大家更深刻地了解并且提高CSS在各位开发者心目中的地位。</p>\n<h3 id=\"可能是最全的前端动效库汇总\"><a href=\"#可能是最全的前端动效库汇总\" class=\"headerlink\" title=\"可能是最全的前端动效库汇总\"></a><a href=\"https://juejin.im/post/5cc089eae51d456e7d189f9d\">可能是最全的前端动效库汇总</a></h3><p>作者对当前前端领域的动效库进行了大而全的总结，涉及到的动效库多达几十种，同时按照Star数进行了排序</p>\n<h3 id=\"写-CSS-的姿势\"><a href=\"#写-CSS-的姿势\" class=\"headerlink\" title=\"写 CSS 的姿势\"></a><a href=\"https://www.w3cplus.com/css/css-evolution.html\">写 CSS 的姿势</a></h3><p>作者-大漠，内容很丰富，放在第一位是有原因的。。</p>\n<h3 id=\"CSS-实现长宽比的几种方案\"><a href=\"#CSS-实现长宽比的几种方案\" class=\"headerlink\" title=\"CSS 实现长宽比的几种方案\"></a><a href=\"https://www.w3cplus.com/css/aspect-ratio.html\">CSS 实现长宽比的几种方案</a></h3><p>作者是传说中的大漠孤秋，介绍了单纯用CSS实现定比例长宽图形的几种方案</p>\n<h3 id=\"实用的-CSS-—-贝塞尔曲线-cubic-bezier\"><a href=\"#实用的-CSS-—-贝塞尔曲线-cubic-bezier\" class=\"headerlink\" title=\"实用的 CSS — 贝塞尔曲线(cubic-bezier)\"></a><a href=\"http://joveyzheng.com/2016/03/16/css-cubic-bezier/\">实用的 CSS — 贝塞尔曲线(cubic-bezier)</a></h3><p>贝塞尔曲线在 CSS 动画中应用较广，了解一下对于 CSS 动画效果会有更深的理解</p>\n<h3 id=\"探究-CSS-解析原理\"><a href=\"#探究-CSS-解析原理\" class=\"headerlink\" title=\"探究 CSS 解析原理\"></a><a href=\"http://jartto.wang/2017/11/13/Exploring-the-principle-of-CSS-parsing/index.html\">探究 CSS 解析原理</a></h3><p>作者对浏览器的渲染过程和 CSS 的解析原理进行了详细解释，代码很多，干货满满</p>\n<h3 id=\"改变用户体验的滚动新特性\"><a href=\"#改变用户体验的滚动新特性\" class=\"headerlink\" title=\"改变用户体验的滚动新特性\"></a><a href=\"https://www.w3cplus.com/css/new-scroll-features-that-change-the-user-experience.html\">改变用户体验的滚动新特性</a></h3><p>作者是大漠，他在文中介绍了时至今日，CSS 中为浏览器滚动提供的相关新特性究竟能给用户带来哪些新的体验。图片和代码较多，慎用流量</p>\n<h3 id=\"说说CSS学习中的瓶颈\"><a href=\"#说说CSS学习中的瓶颈\" class=\"headerlink\" title=\"说说CSS学习中的瓶颈\"></a><a href=\"https://www.zhangxinxu.com/wordpress/2012/07/bottleneck-css-study/\">说说CSS学习中的瓶颈</a></h3><p>张鑫旭 2012 年的文章，虽然年代比较久远了，但是至今看来还是颇受启发，如果你有“CSS好难”、“为什么CSS那么多属性”、“怎么让它垂直居中啊”等疑问，推荐你看这篇文章。</p>\n<h3 id=\"「前端那些事儿」③-CSS-布局方案\"><a href=\"#「前端那些事儿」③-CSS-布局方案\" class=\"headerlink\" title=\"「前端那些事儿」③ CSS 布局方案\"></a><a href=\"https://juejin.im/post/5bd805e6f265da0acd2107d7\">「前端那些事儿」③ CSS 布局方案</a></h3><p>作者几乎罗列了日常工作中遇到的所有类型的布局，并附上了详细的代码，其中包括：居中布局、多列布局、并排等分，单排对齐靠左布局和圣杯布局&amp;双飞翼布局等。源码传送门：<a href=\"https://github.com/willspace/css-layout/tree/master/demo-1\">https://github.com/willspace/css-layout/tree/master/demo-1</a></p>\n<h3 id=\"深入了解-CSS3-新特性\"><a href=\"#深入了解-CSS3-新特性\" class=\"headerlink\" title=\"深入了解 CSS3 新特性\"></a><a href=\"https://www.ibm.com/developerworks/cn/web/1202_zhouxiang_css3/\">深入了解 CSS3 新特性</a></h3><p>这篇文章介绍了 Web 开发中关于 CSS3 的一些内容，由浅入深的逐步引出 CSS3 的各种相关属性。基于各个 CSS3 属性的原理，通过实际的源代码介绍各个 CSS3 新特性的特点，使用方式以及使用中需要注意的地方</p>\n<h3 id=\"You-need-to-know-css\"><a href=\"#You-need-to-know-css\" class=\"headerlink\" title=\"You need to know css\"></a><a href=\"https://lhammer.cn/You-need-to-know-css/#/\">You need to know css</a></h3><p>作者把自己的收获和工作中常用的一些 CSS 小样式总结成了这份文档，包含了 43 个 CSS 的小样式。</p>\n<h3 id=\"06期：前端布局基础概述\"><a href=\"#06期：前端布局基础概述\" class=\"headerlink\" title=\"06期：前端布局基础概述\"></a><a href=\"https://mp.weixin.qq.com/s/-LcNZWFFty2lWuND6uuNNA\">06期：前端布局基础概述</a></h3><p>作者找到了W3C组织对初始化包含块的官方定义，为了让刚入前端圈的同学少走一些弯路，于是系统地分享一下，同时掺杂了作者本人在前端布局基础方面积累的经验。（因为是系统概述，所以篇幅会比较长，希望各位读者有心理准备）</p>\n<h3 id=\"在-css-中什么是好的注释？\"><a href=\"#在-css-中什么是好的注释？\" class=\"headerlink\" title=\"在 css 中什么是好的注释？\"></a><a href=\"https://mp.weixin.qq.com/s/963TnTMNAXstdIPYCTsrqQ\">在 css 中什么是好的注释？</a></h3><blockquote>\n<p>注释就意味着代码无法自说明 —— Robert C. Martin</p>\n</blockquote>\n<p>Martin在文中详细讨论了代码注释，他的意思是，这些注释是注定会过时的。程序执行时会忽视注释，所以无法保证这些说明注释会准确的描述代码作用。所以最好的方式是让代码自说明，如此，按照代码逻辑，程序员和程序获取到的信息是一致的。读完这篇文章后，我们就知道该怎么写注释了。</p>\n","categories":[{"name":"推荐","path":"api/categories/推荐.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]}