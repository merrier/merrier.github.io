{"title":"读书笔记系列（3）——精彩绝伦的CSS","slug":"读书笔记系列（3）——精彩绝伦的CSS","date":"2017-04-06T08:13:16.000Z","updated":"2020-04-10T01:59:34.622Z","comments":true,"path":"api/articles/读书笔记系列（3）——精彩绝伦的CSS.json","excerpt":null,"covers":["/images/hexo_post_309.png","/images/hexo_post_310.png","/images/hexo_post_311.png","/images/hexo_post_312.png","/images/hexo_post_313.png","/images/hexo_post_314.png","/images/hexo_post_315.png"],"content":"<h2 id=\"1-特殊性\"><a href=\"#1-特殊性\" class=\"headerlink\" title=\"1. 特殊性\"></a>1. 特殊性</h2><p>特殊性是一个选择器“特殊程度”的数字表示，有 3 样东西经常被用来确定选择器的特殊性：</p>\n<ul>\n<li>每个元素描述符贡献 0，0，0，1；</li>\n<li>每个类、伪类或者属性描述符贡献 0，0，1，0；</li>\n<li>每个 ID 描述符贡献 0，1，0，0.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>权重</th>\n<th>描述符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>div ul ul li</td>\n<td>0,0,0,4</td>\n<td>4个元素描述符</td>\n</tr>\n<tr>\n<td>div.aside ul li</td>\n<td>0,0,1,3</td>\n<td>1个类描述符，3个元素描述符</td>\n</tr>\n<tr>\n<td>a:hover</td>\n<td>0,0,1,1</td>\n<td>1个伪类描述符，1个元素描述符</td>\n</tr>\n<tr>\n<td>div.navlinks a:hover</td>\n<td>0,0,2,2</td>\n<td>1个伪类描述符，1个类描述符，2个元素描述符</td>\n</tr>\n<tr>\n<td>#title em</td>\n<td>0,1,0,1</td>\n<td>1个ID描述符，1个元素描述符</td>\n</tr>\n<tr>\n<td>h1#title em</td>\n<td>0,1,0,2</td>\n<td>1个ID描述符，2个元素描述符</td>\n</tr>\n</tbody>\n</table>\n<p>当特殊性相等时后声明的规则会胜出。特殊性标识符第一位的 0 是用于行内样式的，且仅用于行内样式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-id\">#header</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: purple;  <span class=\"comment\">/* 0，1，0，0 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"header\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background: blue;\"</span>&gt;</span>  /* 1，0，0，0 */</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-重要性\"><a href=\"#2-重要性\" class=\"headerlink\" title=\"2. 重要性\"></a>2. 重要性</h2><p>任何标记为重要的声明都需要有自己的 <code>!important</code><br>任何重要的声明都会覆盖非重要的声明</p>\n<h2 id=\"3-通用选择\"><a href=\"#3-通用选择\" class=\"headerlink\" title=\"3. 通用选择\"></a>3. 通用选择</h2><p><code>*</code> 作用是选择文档中的全部元素并对其应用样式<br><code>div *</code> 作用是选择这个 div 中的全部子元素</p>\n<h2 id=\"4-简单的属性选择\"><a href=\"#4-简单的属性选择\" class=\"headerlink\" title=\"4. 简单的属性选择\"></a>4. 简单的属性选择</h2><p><code>a[href]</code> 会选择所有含有 href 属性的 a 元素<br><code>a[href=&quot;http://w3.org/&quot;]</code> 选择指向某个特定地址的全部超链接</p>\n<h2 id=\"5-部分属性值选择\"><a href=\"#5-部分属性值选择\" class=\"headerlink\" title=\"5. 部分属性值选择\"></a>5. 部分属性值选择</h2><p><code>a[href*=&quot;w3.org&quot;]</code> 属性值中包含该字符序列，应该区分属性值的大小写。</p>\n<p><code>img[src*=&quot;mainlogo.png&quot;]</code> 它会选择任何指向 mainlogo.png 文件的图像（img）元素，或者是 src 属性值中包含 mainlogo.png 这些字符的图像元素。因此，它将同时选择：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/img/2010/mainlogo.png.gif\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"ConHugoCo Inc.\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/img/2010/mainlogo.pngdir/big.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"ConHugoCo Inc.\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"6-更多部分属性值选择\"><a href=\"#6-更多部分属性值选择\" class=\"headerlink\" title=\"6. 更多部分属性值选择\"></a>6. 更多部分属性值选择</h2><p>a[href^=”http”] 选取任何 href 属性值是以 http 开头的链接元素<br>a[href$=”.pdf”] 选择 href 属性值是以 .pdf 结尾的链接元素</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>选取对象</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>a[href^=”https”]</td>\n<td>安全服务器链接</td>\n</tr>\n<tr>\n<td>a[href^=”mailto”]</td>\n<td>电子邮件联系链接</td>\n</tr>\n<tr>\n<td>a[href^=”aim”]</td>\n<td>AOL即时通信服务链接</td>\n</tr>\n<tr>\n<td>a[href^=”.doc”]</td>\n<td>微软Word文档</td>\n</tr>\n<tr>\n<td>a[href^=”.xls”]</td>\n<td>微软Excel文档</td>\n</tr>\n<tr>\n<td>a[href^=”.zip”]</td>\n<td>压缩文档</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"7-兄弟选择\"><a href=\"#7-兄弟选择\" class=\"headerlink\" title=\"7. 兄弟选择\"></a>7. 兄弟选择</h2><p>h2 + p 紧跟在 h2 后的 p 元素<br>h1 ~ ul 位于 h1 元素后面且与之共享父元素的 ul 元素，不包括直接相邻的兄弟元素</p>\n<h2 id=\"8-调整字体值的顺序\"><a href=\"#8-调整字体值的顺序\" class=\"headerlink\" title=\"8. 调整字体值的顺序\"></a>8. 调整字体值的顺序</h2><blockquote>\n<p>font: <code>&lt;font-size&gt; &lt;font-family&gt;</code>;</p>\n</blockquote>\n<p>必须同时包含这两个值并且按照既定的顺序进行书写。如果颠倒了顺序，或者漏掉了其中的一个，则任何现代浏览器都会完全忽略这条声明。此外，如果在声明中包含了其他关键字，则它们全部都得放在这两个必备的值前面。</p>\n<h2 id=\"9-玩转行高\"><a href=\"#9-玩转行高\" class=\"headerlink\" title=\"9. 玩转行高\"></a>9. 玩转行高</h2><blockquote>\n<p>font: 100%/2.5 Helvetica， sans-serif;</p>\n</blockquote>\n<p>为 font 声明添加行高值得操作总是可选的，但是如果已经包含了行高值，则它的放置位置就是固定的了，必须紧跟在字号后面加一个斜杠再加上行高值才行。</p>\n<h2 id=\"10-无单位的行高值\"><a href=\"#10-无单位的行高值\" class=\"headerlink\" title=\"10. 无单位的行高值\"></a>10. 无单位的行高值</h2><p>无单位的行高值表示后代元素所使用的一个换算系数（比如一个乘数）<br>所有继承了行高值为 1 的元素会把这个值同它们自身的字号计算值相乘。声明了 font-size: 10px 的列表项元素会有一个 10px 的计算后的行高值。</p>\n<h2 id=\"11-抑制元素的可见性\"><a href=\"#11-抑制元素的可见性\" class=\"headerlink\" title=\"11. 抑制元素的可见性\"></a>11. 抑制元素的可见性</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">span&#123; visibility：hidden； &#125;  /* 被设置成 visibility: hidden 的元素仍然参与页面布局 */</span><br></pre></td></tr></table></figure>\n<h2 id=\"12-将元素移出屏幕\"><a href=\"#12-将元素移出屏幕\" class=\"headerlink\" title=\"12. 将元素移出屏幕\"></a>12. 将元素移出屏幕</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.hide</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: -<span class=\"number\">10000em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: -<span class=\"number\">10000em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\">**已经从页面上移除，但是屏幕阅读器也能识别**</span><br><span class=\"line\"></span><br><span class=\"line\">## 13. 图像替换</span><br><span class=\"line\"></span><br><span class=\"line\">使用负的文本缩进把文本移到元素的左侧</span><br><span class=\"line\"></span><br><span class=\"line\">```<span class=\"selector-tag\">css</span></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">140px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-indent</span>: -<span class=\"number\">9999px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(page-hader.gif);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们没有移动元素框的情况下将元素的文本内容移动到了屏幕之外。</p>\n<h2 id=\"14-打印样式\"><a href=\"#14-打印样式\" class=\"headerlink\" title=\"14. 打印样式\"></a>14. 打印样式</h2><p>有 3 种方式可以将打印样式关联到页面：</p>\n<ul>\n<li><code>&lt;style type=&quot;text/css&quot; media=&quot;print&quot;&gt;...&lt;/style&gt;</code></li>\n<li><code>&lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; media=&quot;print&quot; href=&quot;print.css&quot;&gt;</code></li>\n<li><code>@import url(print.css) print</code>;</li>\n</ul>\n<p>几乎所有人都会使用 link 的方式，这是因为在每个页面中都嵌入打印样式表的效率非常低。</p>\n<h2 id=\"15-凸排列表\"><a href=\"#15-凸排列表\" class=\"headerlink\" title=\"15. 凸排列表\"></a>15. 凸排列表</h2><p>使列表项的第一行悬挂在左侧，并使其他行保持在原位的一种技术。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_309.png\" alt=\"\" width=\"700\"></div>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">ul</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-indent</span>: -<span class=\"number\">2em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>list-style: none 这条规则很重要，如果没有这个的话，每个列表项的第一行就不会被凸排，并且文本会跟列表标记重合。因此，不要把凸排和列表标记混着用。</p>\n<h2 id=\"16-为列表添加标记\"><a href=\"#16-为列表添加标记\" class=\"headerlink\" title=\"16. 为列表添加标记\"></a>16. 为列表添加标记</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">list-sytle-image</span>: <span class=\"built_in\">url</span>(star.gif);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>潜在的缺点是你完全无法掌控图像的放置位置。可以将每个列表项的内容用一个元素包裹一下，这个元素可以是 div 或者 span。就可以定制列表标记的样式。</p>\n<h2 id=\"17-生成列表标记\"><a href=\"#17-生成列表标记\" class=\"headerlink\" title=\"17. 生成列表标记\"></a>17. 生成列表标记</h2><p>通过混合凸排和生成内容来实现的。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"built_in\">url</span>(star.gif);</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-indent</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"18-用轮廓代替边框\"><a href=\"#18-用轮廓代替边框\" class=\"headerlink\" title=\"18. 用轮廓代替边框\"></a>18. 用轮廓代替边框</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span>&#123; <span class=\"attribute\">outline</span>: <span class=\"number\">1px</span> dashed red; &#125;</span><br></pre></td></tr></table></figure>\n<p>边框是参与布局的，而轮廓并不参与。轮廓必然是环绕着元素的，并且在元素的四周永远保持一致。你不能只设置左轮廓或者上轮廓。<br>轮廓只有两种情况：环绕元素四周的简单轮廓，或者干脆没有轮廓。元素是可以同时具有边框和轮廓的。在这种情况下，轮廓会绘制在边框之外，所有轮廓的内边缘会紧挨着边框的外边缘。如果元素具有外边距的话，则轮廓将绘制在外边距所在区域之上，但是外边距并不会被轮廓改变或者替换掉。</p>\n<h2 id=\"19-框冲切\"><a href=\"#19-框冲切\" class=\"headerlink\" title=\"19. 框冲切\"></a>19. 框冲切</h2><p>是一种可以在视觉上将元素框的一部分移除的技术。它仅在单色或固定图像背景上起作用。框冲切的最简单形式就是把一个框放在另一个框的角落里，并确保它的背景与周围的内容一致，而不是与它的父元素一致。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_310.png\" alt=\"\" width=\"600\"></div>\n\n<h2 id=\"20-CSS-精灵\"><a href=\"#20-CSS-精灵\" class=\"headerlink\" title=\"20. CSS 精灵\"></a>20. CSS 精灵</h2><p>CSS 精灵(CSS sprite) 是一种可以实现快速悬停效果的技术，现在已经演变成了通过将装饰性的图片合并并下载，从而降低服务器负载的技术。CSS 精灵最基本的例子就是包含两种状态的图标，即一个挨着链接的正常显示版本，一个当链接被悬停时的”点亮”版本。</p>\n<h2 id=\"21-滑动门\"><a href=\"#21-滑动门\" class=\"headerlink\" title=\"21. 滑动门\"></a>21. 滑动门</h2><p>滑动门是一种可以使文本导航链接变成花哨的选项卡的技术。然而，通常的做法都只适用于效果而不试用于选项卡。</p>\n<h2 id=\"22-CSS-视差\"><a href=\"#22-CSS-视差\" class=\"headerlink\" title=\"22. CSS 视差\"></a>22. CSS 视差</h2><p>CSS 视差是一种很精巧的技术，它能让我们了解基于百分比的背景图像定位可以那么简单而直接地创造出意想不到的效果。首先，考虑一下百分比定位是怎么实现的。假设你把一个背景图像的位置设置为 50% 50%，那么它的中心将与背景区域的中心对齐。类似地，如果设置为 100% 100%，那么它的右下角就会和背景区域的右下角对齐。这就意味着背景图像位置的百分比值实际上被使用了两次。第一次用于找到背景区域中所定义的点，第二次用于找到图像本身中定义的点，然后再把这两个点对齐。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(ice-1.png) -<span class=\"number\">75%</span> <span class=\"number\">0</span> repeat-x;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-id\">#main</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(ice-2.png) <span class=\"number\">75%</span> <span class=\"number\">0</span> repeat-x;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过这样的设置，当浏览器窗口变宽时图片看起来就会使朝着远离窗口中心的方向移动的，这会产生类似”放大”的效果。而当窗口变窄时，图片会朝着窗口的中心移动，类似”缩小”的效果。</p>\n<h2 id=\"23-图像的框\"><a href=\"#23-图像的框\" class=\"headerlink\" title=\"23. 图像的框\"></a>23. 图像的框</h2><p>有些关于图像的东西，大多数人至今都没有意识到：它们与其他元素拥有相同的盒模型，这意味着你可以对图像元素应用诸如背景和内边距等样式。你可以为图像设置背景图像，做出一些有趣的组合效果：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_311.png\" alt=\"\" width=\"700\"></div>\n\n<p>内边距也可以很简单地应用在图像上。事实上，通过背景色、边框以及内边距的组合，可以使图像看上去具有深浅不一的双层边框。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_312.png\" alt=\"\" width=\"700\"></div>\n\n<p>再加上轮廓的话，你就会得到类似三层边框的效果了。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_313.png\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"24-受限的图像\"><a href=\"#24-受限的图像\" class=\"headerlink\" title=\"24. 受限的图像\"></a>24. 受限的图像</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">img</span>&#123; <span class=\"attribute\">max-width</span>:<span class=\"number\">100%</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>这条简单的规则会保证图像不会比包含它们的元素更宽，不过在父元素比这些图像宽的情况下，它们会保持原始尺寸。你可以通过把图像在其父元素中居中来进行强化，像这样：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下图展示了将同一个图像放在 3 个不同宽度父元素中的例子，其中两个父元素比图像还窄，一个比图像宽(父元素的边缘已通过边框标出)。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_314.png\" alt=\"\" width=\"400\"></div>\n\n<p>这很明显会使你的图像任由浏览器的缩放操作摆布，因为它们会缩小图像。</p>\n<h2 id=\"25-表头、主体和脚注\"><a href=\"#25-表头、主体和脚注\" class=\"headerlink\" title=\"25. 表头、主体和脚注\"></a>25. 表头、主体和脚注</h2><p>HTML 为表格定义了 3 个元素用于对行进行分组，它们是 thead(表头)，tbody(表格主体) 和 tfoot(脚注)。毫不奇怪，这些元素分别代表了表格的表头，主体部分以及脚注部分。</p>\n<h2 id=\"26-行标题\"><a href=\"#26-行标题\" class=\"headerlink\" title=\"26. 行标题\"></a>26. 行标题</h2><p>有一个 HTML 属性在当初设计的时候就是用来让你指定一个 th 元素是列标题还是行标题的。表格主体中的每一行都以 th 元素开头，那些就是行标题。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>Pageviews<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>Visitors<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"row\"</span>&gt;</span>January 2010<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1367234<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>326578<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"row\"</span>&gt;</span>February 2010<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1491262<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>349091<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>为 th 元素恰当地添加已赋值的 scope(作用域)属性，相当于明确地告诉浏览器 th 元素与它周围单元格的关系。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_315.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"27-多背景\"><a href=\"#27-多背景\" class=\"headerlink\" title=\"27. 多背景\"></a>27. 多背景</h2><p>CSS3 中真正时髦的东西之一，就是它对于给定元素支持多个背景图像。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(bg01.png) top left no-repeat,</span><br><span class=\"line\">              <span class=\"built_in\">url</span>(bg02.png) top right no-repeat,</span><br><span class=\"line\">              <span class=\"built_in\">url</span>(bg03.png) bottom right no-repeat,</span><br><span class=\"line\">              <span class=\"built_in\">url</span>(bg04.png) bottom left no-repeat;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>多背景的应用顺序是从“最高”到“最低”的，即以你观看页面的视角来看，是从最靠你的到离你最远的顺序应用。如果你把颜色放到第一个背景上，它就会位于其他背景的“上面”。这也意味着，如果你想让某种图案背景在所有背景的最后方，那么就需要把它放在最后一个并且确保把任何背景颜色的值也移到这个值中。</p>\n<h2 id=\"28-二维变换\"><a href=\"#28-二维变换\" class=\"headerlink\" title=\"28. 二维变换\"></a>28. 二维变换</h2><p>可以通过 <code>transform-origin</code> 改变旋转或缩放的原点</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">transform-origin</span>: <span class=\"selector-tag\">bottom</span> <span class=\"selector-tag\">left</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">transform-origin</span>: 75% 0;</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"1-特殊性\"><a href=\"#1-特殊性\" class=\"headerlink\" title=\"1. 特殊性\"></a>1. 特殊性</h2><p>特殊性是一个选择器“特殊程度”的数字表示，有 3 样东西经常被用来确定选择器的特殊性：</p>\n<ul>\n<li>每个元素描述符贡献 0，0，0，1；</li>\n<li>每个类、伪类或者属性描述符贡献 0，0，1，0；</li>\n<li>每个 ID 描述符贡献 0，1，0，0.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>权重</th>\n<th>描述符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>div ul ul li</td>\n<td>0,0,0,4</td>\n<td>4个元素描述符</td>\n</tr>\n<tr>\n<td>div.aside ul li</td>\n<td>0,0,1,3</td>\n<td>1个类描述符，3个元素描述符</td>\n</tr>\n<tr>\n<td>a:hover</td>\n<td>0,0,1,1</td>\n<td>1个伪类描述符，1个元素描述符</td>\n</tr>\n<tr>\n<td>div.navlinks a:hover</td>\n<td>0,0,2,2</td>\n<td>1个伪类描述符，1个类描述符，2个元素描述符</td>\n</tr>\n<tr>\n<td>#title em</td>\n<td>0,1,0,1</td>\n<td>1个ID描述符，1个元素描述符</td>\n</tr>\n<tr>\n<td>h1#title em</td>\n<td>0,1,0,2</td>\n<td>1个ID描述符，2个元素描述符</td>\n</tr>\n</tbody>\n</table>\n<p>当特殊性相等时后声明的规则会胜出。特殊性标识符第一位的 0 是用于行内样式的，且仅用于行内样式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-id\">#header</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: purple;  <span class=\"comment\">/* 0，1，0，0 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"header\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"background: blue;\"</span>&gt;</span>  /* 1，0，0，0 */</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-重要性\"><a href=\"#2-重要性\" class=\"headerlink\" title=\"2. 重要性\"></a>2. 重要性</h2><p>任何标记为重要的声明都需要有自己的 <code>!important</code><br>任何重要的声明都会覆盖非重要的声明</p>\n<h2 id=\"3-通用选择\"><a href=\"#3-通用选择\" class=\"headerlink\" title=\"3. 通用选择\"></a>3. 通用选择</h2><p><code>*</code> 作用是选择文档中的全部元素并对其应用样式<br><code>div *</code> 作用是选择这个 div 中的全部子元素</p>\n<h2 id=\"4-简单的属性选择\"><a href=\"#4-简单的属性选择\" class=\"headerlink\" title=\"4. 简单的属性选择\"></a>4. 简单的属性选择</h2><p><code>a[href]</code> 会选择所有含有 href 属性的 a 元素<br><code>a[href=&quot;http://w3.org/&quot;]</code> 选择指向某个特定地址的全部超链接</p>\n<h2 id=\"5-部分属性值选择\"><a href=\"#5-部分属性值选择\" class=\"headerlink\" title=\"5. 部分属性值选择\"></a>5. 部分属性值选择</h2><p><code>a[href*=&quot;w3.org&quot;]</code> 属性值中包含该字符序列，应该区分属性值的大小写。</p>\n<p><code>img[src*=&quot;mainlogo.png&quot;]</code> 它会选择任何指向 mainlogo.png 文件的图像（img）元素，或者是 src 属性值中包含 mainlogo.png 这些字符的图像元素。因此，它将同时选择：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/img/2010/mainlogo.png.gif\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"ConHugoCo Inc.\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/img/2010/mainlogo.pngdir/big.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"ConHugoCo Inc.\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"6-更多部分属性值选择\"><a href=\"#6-更多部分属性值选择\" class=\"headerlink\" title=\"6. 更多部分属性值选择\"></a>6. 更多部分属性值选择</h2><p>a[href^=”http”] 选取任何 href 属性值是以 http 开头的链接元素<br>a[href$=”.pdf”] 选择 href 属性值是以 .pdf 结尾的链接元素</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>选取对象</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>a[href^=”https”]</td>\n<td>安全服务器链接</td>\n</tr>\n<tr>\n<td>a[href^=”mailto”]</td>\n<td>电子邮件联系链接</td>\n</tr>\n<tr>\n<td>a[href^=”aim”]</td>\n<td>AOL即时通信服务链接</td>\n</tr>\n<tr>\n<td>a[href^=”.doc”]</td>\n<td>微软Word文档</td>\n</tr>\n<tr>\n<td>a[href^=”.xls”]</td>\n<td>微软Excel文档</td>\n</tr>\n<tr>\n<td>a[href^=”.zip”]</td>\n<td>压缩文档</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"7-兄弟选择\"><a href=\"#7-兄弟选择\" class=\"headerlink\" title=\"7. 兄弟选择\"></a>7. 兄弟选择</h2><p>h2 + p 紧跟在 h2 后的 p 元素<br>h1 ~ ul 位于 h1 元素后面且与之共享父元素的 ul 元素，不包括直接相邻的兄弟元素</p>\n<h2 id=\"8-调整字体值的顺序\"><a href=\"#8-调整字体值的顺序\" class=\"headerlink\" title=\"8. 调整字体值的顺序\"></a>8. 调整字体值的顺序</h2><blockquote>\n<p>font: <code>&lt;font-size&gt; &lt;font-family&gt;</code>;</p>\n</blockquote>\n<p>必须同时包含这两个值并且按照既定的顺序进行书写。如果颠倒了顺序，或者漏掉了其中的一个，则任何现代浏览器都会完全忽略这条声明。此外，如果在声明中包含了其他关键字，则它们全部都得放在这两个必备的值前面。</p>\n<h2 id=\"9-玩转行高\"><a href=\"#9-玩转行高\" class=\"headerlink\" title=\"9. 玩转行高\"></a>9. 玩转行高</h2><blockquote>\n<p>font: 100%/2.5 Helvetica， sans-serif;</p>\n</blockquote>\n<p>为 font 声明添加行高值得操作总是可选的，但是如果已经包含了行高值，则它的放置位置就是固定的了，必须紧跟在字号后面加一个斜杠再加上行高值才行。</p>\n<h2 id=\"10-无单位的行高值\"><a href=\"#10-无单位的行高值\" class=\"headerlink\" title=\"10. 无单位的行高值\"></a>10. 无单位的行高值</h2><p>无单位的行高值表示后代元素所使用的一个换算系数（比如一个乘数）<br>所有继承了行高值为 1 的元素会把这个值同它们自身的字号计算值相乘。声明了 font-size: 10px 的列表项元素会有一个 10px 的计算后的行高值。</p>\n<h2 id=\"11-抑制元素的可见性\"><a href=\"#11-抑制元素的可见性\" class=\"headerlink\" title=\"11. 抑制元素的可见性\"></a>11. 抑制元素的可见性</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">span&#123; visibility：hidden； &#125;  /* 被设置成 visibility: hidden 的元素仍然参与页面布局 */</span><br></pre></td></tr></table></figure>\n<h2 id=\"12-将元素移出屏幕\"><a href=\"#12-将元素移出屏幕\" class=\"headerlink\" title=\"12. 将元素移出屏幕\"></a>12. 将元素移出屏幕</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.hide</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: -<span class=\"number\">10000em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: -<span class=\"number\">10000em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\">**已经从页面上移除，但是屏幕阅读器也能识别**</span><br><span class=\"line\"></span><br><span class=\"line\">## 13. 图像替换</span><br><span class=\"line\"></span><br><span class=\"line\">使用负的文本缩进把文本移到元素的左侧</span><br><span class=\"line\"></span><br><span class=\"line\">```<span class=\"selector-tag\">css</span></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">140px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-indent</span>: -<span class=\"number\">9999px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(page-hader.gif);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们没有移动元素框的情况下将元素的文本内容移动到了屏幕之外。</p>\n<h2 id=\"14-打印样式\"><a href=\"#14-打印样式\" class=\"headerlink\" title=\"14. 打印样式\"></a>14. 打印样式</h2><p>有 3 种方式可以将打印样式关联到页面：</p>\n<ul>\n<li><code>&lt;style type=&quot;text/css&quot; media=&quot;print&quot;&gt;...&lt;/style&gt;</code></li>\n<li><code>&lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; media=&quot;print&quot; href=&quot;print.css&quot;&gt;</code></li>\n<li><code>@import url(print.css) print</code>;</li>\n</ul>\n<p>几乎所有人都会使用 link 的方式，这是因为在每个页面中都嵌入打印样式表的效率非常低。</p>\n<h2 id=\"15-凸排列表\"><a href=\"#15-凸排列表\" class=\"headerlink\" title=\"15. 凸排列表\"></a>15. 凸排列表</h2><p>使列表项的第一行悬挂在左侧，并使其他行保持在原位的一种技术。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_309.png\" alt=\"\" width=\"700\"></div>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">ul</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-indent</span>: -<span class=\"number\">2em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>list-style: none 这条规则很重要，如果没有这个的话，每个列表项的第一行就不会被凸排，并且文本会跟列表标记重合。因此，不要把凸排和列表标记混着用。</p>\n<h2 id=\"16-为列表添加标记\"><a href=\"#16-为列表添加标记\" class=\"headerlink\" title=\"16. 为列表添加标记\"></a>16. 为列表添加标记</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">list-sytle-image</span>: <span class=\"built_in\">url</span>(star.gif);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>潜在的缺点是你完全无法掌控图像的放置位置。可以将每个列表项的内容用一个元素包裹一下，这个元素可以是 div 或者 span。就可以定制列表标记的样式。</p>\n<h2 id=\"17-生成列表标记\"><a href=\"#17-生成列表标记\" class=\"headerlink\" title=\"17. 生成列表标记\"></a>17. 生成列表标记</h2><p>通过混合凸排和生成内容来实现的。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"built_in\">url</span>(star.gif);</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-indent</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"18-用轮廓代替边框\"><a href=\"#18-用轮廓代替边框\" class=\"headerlink\" title=\"18. 用轮廓代替边框\"></a>18. 用轮廓代替边框</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span>&#123; <span class=\"attribute\">outline</span>: <span class=\"number\">1px</span> dashed red; &#125;</span><br></pre></td></tr></table></figure>\n<p>边框是参与布局的，而轮廓并不参与。轮廓必然是环绕着元素的，并且在元素的四周永远保持一致。你不能只设置左轮廓或者上轮廓。<br>轮廓只有两种情况：环绕元素四周的简单轮廓，或者干脆没有轮廓。元素是可以同时具有边框和轮廓的。在这种情况下，轮廓会绘制在边框之外，所有轮廓的内边缘会紧挨着边框的外边缘。如果元素具有外边距的话，则轮廓将绘制在外边距所在区域之上，但是外边距并不会被轮廓改变或者替换掉。</p>\n<h2 id=\"19-框冲切\"><a href=\"#19-框冲切\" class=\"headerlink\" title=\"19. 框冲切\"></a>19. 框冲切</h2><p>是一种可以在视觉上将元素框的一部分移除的技术。它仅在单色或固定图像背景上起作用。框冲切的最简单形式就是把一个框放在另一个框的角落里，并确保它的背景与周围的内容一致，而不是与它的父元素一致。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_310.png\" alt=\"\" width=\"600\"></div>\n\n<h2 id=\"20-CSS-精灵\"><a href=\"#20-CSS-精灵\" class=\"headerlink\" title=\"20. CSS 精灵\"></a>20. CSS 精灵</h2><p>CSS 精灵(CSS sprite) 是一种可以实现快速悬停效果的技术，现在已经演变成了通过将装饰性的图片合并并下载，从而降低服务器负载的技术。CSS 精灵最基本的例子就是包含两种状态的图标，即一个挨着链接的正常显示版本，一个当链接被悬停时的”点亮”版本。</p>\n<h2 id=\"21-滑动门\"><a href=\"#21-滑动门\" class=\"headerlink\" title=\"21. 滑动门\"></a>21. 滑动门</h2><p>滑动门是一种可以使文本导航链接变成花哨的选项卡的技术。然而，通常的做法都只适用于效果而不试用于选项卡。</p>\n<h2 id=\"22-CSS-视差\"><a href=\"#22-CSS-视差\" class=\"headerlink\" title=\"22. CSS 视差\"></a>22. CSS 视差</h2><p>CSS 视差是一种很精巧的技术，它能让我们了解基于百分比的背景图像定位可以那么简单而直接地创造出意想不到的效果。首先，考虑一下百分比定位是怎么实现的。假设你把一个背景图像的位置设置为 50% 50%，那么它的中心将与背景区域的中心对齐。类似地，如果设置为 100% 100%，那么它的右下角就会和背景区域的右下角对齐。这就意味着背景图像位置的百分比值实际上被使用了两次。第一次用于找到背景区域中所定义的点，第二次用于找到图像本身中定义的点，然后再把这两个点对齐。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(ice-1.png) -<span class=\"number\">75%</span> <span class=\"number\">0</span> repeat-x;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-id\">#main</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(ice-2.png) <span class=\"number\">75%</span> <span class=\"number\">0</span> repeat-x;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过这样的设置，当浏览器窗口变宽时图片看起来就会使朝着远离窗口中心的方向移动的，这会产生类似”放大”的效果。而当窗口变窄时，图片会朝着窗口的中心移动，类似”缩小”的效果。</p>\n<h2 id=\"23-图像的框\"><a href=\"#23-图像的框\" class=\"headerlink\" title=\"23. 图像的框\"></a>23. 图像的框</h2><p>有些关于图像的东西，大多数人至今都没有意识到：它们与其他元素拥有相同的盒模型，这意味着你可以对图像元素应用诸如背景和内边距等样式。你可以为图像设置背景图像，做出一些有趣的组合效果：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_311.png\" alt=\"\" width=\"700\"></div>\n\n<p>内边距也可以很简单地应用在图像上。事实上，通过背景色、边框以及内边距的组合，可以使图像看上去具有深浅不一的双层边框。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_312.png\" alt=\"\" width=\"700\"></div>\n\n<p>再加上轮廓的话，你就会得到类似三层边框的效果了。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_313.png\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"24-受限的图像\"><a href=\"#24-受限的图像\" class=\"headerlink\" title=\"24. 受限的图像\"></a>24. 受限的图像</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">img</span>&#123; <span class=\"attribute\">max-width</span>:<span class=\"number\">100%</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>这条简单的规则会保证图像不会比包含它们的元素更宽，不过在父元素比这些图像宽的情况下，它们会保持原始尺寸。你可以通过把图像在其父元素中居中来进行强化，像这样：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下图展示了将同一个图像放在 3 个不同宽度父元素中的例子，其中两个父元素比图像还窄，一个比图像宽(父元素的边缘已通过边框标出)。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_314.png\" alt=\"\" width=\"400\"></div>\n\n<p>这很明显会使你的图像任由浏览器的缩放操作摆布，因为它们会缩小图像。</p>\n<h2 id=\"25-表头、主体和脚注\"><a href=\"#25-表头、主体和脚注\" class=\"headerlink\" title=\"25. 表头、主体和脚注\"></a>25. 表头、主体和脚注</h2><p>HTML 为表格定义了 3 个元素用于对行进行分组，它们是 thead(表头)，tbody(表格主体) 和 tfoot(脚注)。毫不奇怪，这些元素分别代表了表格的表头，主体部分以及脚注部分。</p>\n<h2 id=\"26-行标题\"><a href=\"#26-行标题\" class=\"headerlink\" title=\"26. 行标题\"></a>26. 行标题</h2><p>有一个 HTML 属性在当初设计的时候就是用来让你指定一个 th 元素是列标题还是行标题的。表格主体中的每一行都以 th 元素开头，那些就是行标题。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>Pageviews<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>Visitors<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"row\"</span>&gt;</span>January 2010<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1367234<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>326578<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"row\"</span>&gt;</span>February 2010<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>1491262<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>349091<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>为 th 元素恰当地添加已赋值的 scope(作用域)属性，相当于明确地告诉浏览器 th 元素与它周围单元格的关系。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_315.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"27-多背景\"><a href=\"#27-多背景\" class=\"headerlink\" title=\"27. 多背景\"></a>27. 多背景</h2><p>CSS3 中真正时髦的东西之一，就是它对于给定元素支持多个背景图像。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(bg01.png) top left no-repeat,</span><br><span class=\"line\">              <span class=\"built_in\">url</span>(bg02.png) top right no-repeat,</span><br><span class=\"line\">              <span class=\"built_in\">url</span>(bg03.png) bottom right no-repeat,</span><br><span class=\"line\">              <span class=\"built_in\">url</span>(bg04.png) bottom left no-repeat;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>多背景的应用顺序是从“最高”到“最低”的，即以你观看页面的视角来看，是从最靠你的到离你最远的顺序应用。如果你把颜色放到第一个背景上，它就会位于其他背景的“上面”。这也意味着，如果你想让某种图案背景在所有背景的最后方，那么就需要把它放在最后一个并且确保把任何背景颜色的值也移到这个值中。</p>\n<h2 id=\"28-二维变换\"><a href=\"#28-二维变换\" class=\"headerlink\" title=\"28. 二维变换\"></a>28. 二维变换</h2><p>可以通过 <code>transform-origin</code> 改变旋转或缩放的原点</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">transform-origin</span>: <span class=\"selector-tag\">bottom</span> <span class=\"selector-tag\">left</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">transform-origin</span>: 75% 0;</span><br></pre></td></tr></table></figure>","categories":[{"name":"CSS","path":"api/categories/CSS.json"}],"tags":[{"name":"笔记","path":"api/tags/笔记.json"},{"name":"CSS","path":"api/tags/CSS.json"}]}