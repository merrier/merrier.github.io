{"title":"Leetcode的JS实现——Easy篇（上）","slug":"Leetcode的JS实现——Easy篇（上）","date":"2017-03-31T17:24:05.000Z","updated":"2025-01-03T12:32:52.475Z","comments":true,"path":"api/articles/Leetcode的JS实现——Easy篇（上）.json","excerpt":null,"covers":null,"content":"<p>由于要找实习，所以最近几周一直在刷 leetcode（打算先把 easy 刷完，大概一天 10 道左右）；而作为一个前端码农，也就只能用 JS 实现算法了，但是众所周知，JS 在算法实现方面是真的不如其他知名语言（java、python、c++），所以绝大多数题都没有 JS 的标准答案，这让我刷 leetcode 的过程变得异常艰难；为了方便和我一样用 JS 刷 leetcode 的小伙伴，打算写一篇纯干货（代码）的文章，对如何用 JS 实现 leetcode 算法题进行总结。（鉴于我水平有限和 JS 本身的局限性，有好多题目我虽然看到了，但是最终没有用 JS 实现，如果你知道某些题目的 JS 实现或有更优解法，请通过网站中的联系方式联系我，O(∩_∩)O谢谢）</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>leetcode 地址：<a href=\"https://leetcode.com/problemset/algorithms/，本文章不会贴出题目，可以点击标题链接查看原题目\">https://leetcode.com/problemset/algorithms/，本文章不会贴出题目，可以点击标题链接查看原题目</a></p>\n<p>排序方式：按照\b本难度中题目的 accepted 统计</p>\n<h2 id=\"JS代码实现\"><a href=\"#JS代码实现\" class=\"headerlink\" title=\"JS代码实现\"></a>JS代码实现</h2><h3 id=\"461-Hamming-distance\"><a href=\"#461-Hamming-distance\" class=\"headerlink\" title=\"461-Hamming distance\"></a><a href=\"https://leetcode.com/problems/hamming-distance/#/description\">461-Hamming distance</a></h3><h4 id=\"方法一：利用-replace-方法\"><a href=\"#方法一：利用-replace-方法\" class=\"headerlink\" title=\"方法一：利用 replace() 方法\"></a>方法一：利用 replace() 方法</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">x</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">y</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hammingDistance = <span class=\"keyword\">function</span>(<span class=\"params\">x, y</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (x^y).<span class=\"title function_\">toString</span>(<span class=\"number\">2</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/0/g</span>,<span class=\"string\">&quot;&quot;</span>).<span class=\"property\">length</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：利用异或\"><a href=\"#方法二：利用异或\" class=\"headerlink\" title=\"方法二：利用异或\"></a>方法二：利用异或</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">x</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">y</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hammingDistance = <span class=\"keyword\">function</span>(<span class=\"params\">x, y</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> xor = x ^ y, count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">32</span>;i++) count += (xor &gt;&gt; i) &amp; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"476-Number-Complement\"><a href=\"#476-Number-Complement\" class=\"headerlink\" title=\"476-Number Complement\"></a><a href=\"https://leetcode.com/problems/number-complement/#/description\">476-Number Complement</a></h3><h4 id=\"方法一：利用二进制\"><a href=\"#方法一：利用二进制\" class=\"headerlink\" title=\"方法一：利用二进制\"></a>方法一：利用二进制</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">num</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findComplement = <span class=\"keyword\">function</span>(<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num^(<span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">2</span>,(num.<span class=\"title function_\">toString</span>(<span class=\"number\">2</span>).<span class=\"property\">length</span>))-<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：利用位运算中的移位\"><a href=\"#方法二：利用位运算中的移位\" class=\"headerlink\" title=\"方法二：利用位运算中的移位\"></a>方法二：利用位运算中的移位</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">num</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findComplement = <span class=\"keyword\">function</span>(<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> mask = num;</span><br><span class=\"line\">    mask |= mask &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    mask |= mask &gt;&gt; <span class=\"number\">2</span>;</span><br><span class=\"line\">    mask |= mask &gt;&gt; <span class=\"number\">4</span>;</span><br><span class=\"line\">    mask |= mask &gt;&gt; <span class=\"number\">8</span>;</span><br><span class=\"line\">    mask |= mask &gt;&gt; <span class=\"number\">16</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num ^ mask;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"500-Keyboard-Row\"><a href=\"#500-Keyboard-Row\" class=\"headerlink\" title=\"500-Keyboard Row\"></a><a href=\"https://leetcode.com/problems/keyboard-row/#/description\">500-Keyboard Row</a></h3><p>暂无</p>\n<h3 id=\"412-Fizz-Buzz\"><a href=\"#412-Fizz-Buzz\" class=\"headerlink\" title=\"412-Fizz Buzz\"></a><a href=\"https://leetcode.com/problems/fizz-buzz/#/description\">412-Fizz Buzz</a></h3><h4 id=\"方法一：各种-if\"><a href=\"#方法一：各种-if\" class=\"headerlink\" title=\"方法一：各种 if\"></a>方法一：各种 if</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fizzBuzz = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>;i&lt;n+<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i%<span class=\"number\">15</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            arr[i-<span class=\"number\">1</span>] = <span class=\"string\">&quot;FizzBuzz&quot;</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i%<span class=\"number\">5</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            arr[i-<span class=\"number\">1</span>] = <span class=\"string\">&quot;Buzz&quot;</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i%<span class=\"number\">3</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            arr[i-<span class=\"number\">1</span>] = <span class=\"string\">&quot;Fizz&quot;</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            arr[i-<span class=\"number\">1</span>] = <span class=\"string\">&quot;&quot;</span> + i</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"344-Reverse-String\"><a href=\"#344-Reverse-String\" class=\"headerlink\" title=\"344-Reverse String\"></a><a href=\"https://leetcode.com/problems/reverse-string/#/description\">344-Reverse String</a></h3><h4 id=\"方法一：从后往前遍历\"><a href=\"#方法一：从后往前遍历\" class=\"headerlink\" title=\"方法一：从后往前遍历\"></a>方法一：从后往前遍历</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reverseString = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>,n=s.<span class=\"property\">length</span>;i&lt;n+<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">        str += s[n-i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：递归\"><a href=\"#方法二：递归\" class=\"headerlink\" title=\"方法二：递归\"></a>方法二：递归</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reverseString = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> length = s.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (length &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> leftStr = s.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, length / <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> rightStr = s.<span class=\"title function_\">substring</span>(length / <span class=\"number\">2</span>, length);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">reverseString</span>(rightStr) + <span class=\"title function_\">reverseString</span>(leftStr);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"496-Next-Greater-Element-I\"><a href=\"#496-Next-Greater-Element-I\" class=\"headerlink\" title=\"496-Next Greater Element I\"></a><a href=\"https://leetcode.com/problems/next-greater-element-i/#/description\">496-Next Greater Element I</a></h3><p>暂无</p>\n<h3 id=\"463-Island-Perimeter\"><a href=\"#463-Island-Perimeter\" class=\"headerlink\" title=\"463-Island Perimeter\"></a><a href=\"https://leetcode.com/problems/island-perimeter/#/description\">463-Island Perimeter</a></h3><h4 id=\"方法一：每块陆地都加-4，遇到有相邻陆地时减-2\"><a href=\"#方法一：每块陆地都加-4，遇到有相邻陆地时减-2\" class=\"headerlink\" title=\"方法一：每块陆地都加 4，遇到有相邻陆地时减 2\"></a>方法一：每块陆地都加 4，遇到有相邻陆地时减 2</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">grid</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> islandPerimeter = <span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=grid.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>,m=grid[<span class=\"number\">0</span>].<span class=\"property\">length</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(grid[i][j] ==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                result +=<span class=\"number\">4</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i&gt;<span class=\"number\">0</span> &amp;&amp; grid[i-<span class=\"number\">1</span>][j] == <span class=\"number\">1</span>)&#123;result -=<span class=\"number\">2</span>&#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j&gt;<span class=\"number\">0</span> &amp;&amp; grid[i][j-<span class=\"number\">1</span>] ==<span class=\"number\">1</span> )&#123;result -=<span class=\"number\">2</span>&#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"292-Nim-Game\"><a href=\"#292-Nim-Game\" class=\"headerlink\" title=\"292-Nim Game\"></a><a href=\"https://leetcode.com/problems/nim-game/#/description\">292-Nim Game</a></h3><h4 id=\"方法一：只要数字能被-4-整除就赢不了\"><a href=\"#方法一：只要数字能被-4-整除就赢不了\" class=\"headerlink\" title=\"方法一：只要数字能被 4 整除就赢不了\"></a>方法一：只要数字能被 4 整除就赢不了</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> canWinNim = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !!(n%<span class=\"number\">4</span>)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"485-Max-Consecutive-Ones\"><a href=\"#485-Max-Consecutive-Ones\" class=\"headerlink\" title=\"485-Max Consecutive Ones\"></a><a href=\"https://leetcode.com/problems/max-consecutive-ones/#/description\">485-Max Consecutive Ones</a></h3><h4 id=\"方法一：看到-0-时就将-max-置为-0，否则-max-加-1\"><a href=\"#方法一：看到-0-时就将-max-置为-0，否则-max-加-1\" class=\"headerlink\" title=\"方法一：看到 0 时就将 max 置为 0，否则 max 加 1\"></a>方法一：看到 0 时就将 max 置为 0，否则 max 加 1</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findMaxConsecutiveOnes = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i&lt;nums.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        result = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(result,num =(nums[i]==<span class=\"number\">0</span>) ? <span class=\"number\">0</span>: num+<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"136-Single-Number\"><a href=\"#136-Single-Number\" class=\"headerlink\" title=\"136-Single Number\"></a><a href=\"https://leetcode.com/problems/single-number/#/description\">136-Single Number</a></h3><h4 id=\"方法一：利用位运算中的异或（异或运算可交换位置，且相同数字异或结果为-0）\"><a href=\"#方法一：利用位运算中的异或（异或运算可交换位置，且相同数字异或结果为-0）\" class=\"headerlink\" title=\"方法一：利用位运算中的异或（异或运算可交换位置，且相同数字异或结果为 0）\"></a>方法一：利用位运算中的异或（异或运算可交换位置，且相同数字异或结果为 0）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> singleNumber = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=nums.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        result ^= nums[i]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"448-Find-All-Numbers-Disappeared-in-an-Array\"><a href=\"#448-Find-All-Numbers-Disappeared-in-an-Array\" class=\"headerlink\" title=\"448-Find All Numbers Disappeared in an Array\"></a><a href=\"https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/#/description\">448-Find All Numbers Disappeared in an Array</a></h3><h4 id=\"方法一：利用哈希表将看到的数字变为负数\"><a href=\"#方法一：利用哈希表将看到的数字变为负数\" class=\"headerlink\" title=\"方法一：利用哈希表将看到的数字变为负数\"></a>方法一：利用哈希表将看到的数字变为负数</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findDisappearedNumbers = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> n= nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> j = <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(nums[i]) -<span class=\"number\">1</span>;</span><br><span class=\"line\">        nums[j] = -<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(nums[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> k=<span class=\"number\">0</span>; k&lt;n;k++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[k]&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            result.<span class=\"title function_\">push</span>(k+<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result; </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"520-Detect-Capital\"><a href=\"#520-Detect-Capital\" class=\"headerlink\" title=\"520-Detect Capital\"></a><a href=\"https://leetcode.com/problems/detect-capital/#/description\">520-Detect Capital</a></h3><h4 id=\"方法一：巧用-indexOf\"><a href=\"#方法一：巧用-indexOf\" class=\"headerlink\" title=\"方法一：巧用 indexOf\"></a>方法一：巧用 indexOf</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">word</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> detectCapitalUse = <span class=\"keyword\">function</span>(<span class=\"params\">word</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !(word.<span class=\"title function_\">indexOf</span>(word.<span class=\"title function_\">toUpperCase</span>()) &amp;&amp; word.<span class=\"title function_\">indexOf</span>(word.<span class=\"title function_\">toLowerCase</span>()) &amp;&amp; word.<span class=\"title function_\">indexOf</span>(word.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>,<span class=\"number\">1</span>).<span class=\"title function_\">toUpperCase</span>() + word.<span class=\"title function_\">substring</span>(<span class=\"number\">1</span>).<span class=\"title function_\">toLowerCase</span>()))</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：正则\"><a href=\"#方法二：正则\" class=\"headerlink\" title=\"方法二：正则\"></a>方法二：正则</h4><p>暂无</p>\n<h3 id=\"104-Maximum-Depth-of-Binary-Tree\"><a href=\"#104-Maximum-Depth-of-Binary-Tree\" class=\"headerlink\" title=\"104-Maximum Depth of Binary Tree\"></a><a href=\"https://leetcode.com/problems/maximum-depth-of-binary-tree/#/description\">104-Maximum Depth of Binary Tree</a></h3><h4 id=\"方法一：递归，其实很容易发现规律\"><a href=\"#方法一：递归，其实很容易发现规律\" class=\"headerlink\" title=\"方法一：递归，其实很容易发现规律\"></a>方法一：递归，其实很容易发现规律</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">TreeNode</span>&#125; <span class=\"variable\">root</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxDepth = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> root === <span class=\"literal\">null</span> ? <span class=\"number\">0</span> : <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(<span class=\"title function_\">maxDepth</span>(root.<span class=\"property\">left</span>), <span class=\"title function_\">maxDepth</span>(root.<span class=\"property\">right</span>)) + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"389-Find-the-Difference\"><a href=\"#389-Find-the-Difference\" class=\"headerlink\" title=\"389-Find the Difference\"></a><a href=\"https://leetcode.com/problems/find-the-difference/#/description\">389-Find the Difference</a></h3><h4 id=\"方法一：依然是-replace\"><a href=\"#方法一：依然是-replace\" class=\"headerlink\" title=\"方法一：依然是 replace()\"></a>方法一：依然是 replace()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">t</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">character</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findTheDifference = <span class=\"keyword\">function</span>(<span class=\"params\">s, t</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=s.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        t = t.<span class=\"title function_\">replace</span>(s[i],<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> t;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：位运算\"><a href=\"#方法二：位运算\" class=\"headerlink\" title=\"方法二：位运算\"></a>方法二：位运算</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">t</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">character</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findTheDifference = <span class=\"keyword\">function</span>(<span class=\"params\">s, t</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> n = t.<span class=\"property\">length</span>,c = t.<span class=\"title function_\">charCodeAt</span>(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">\t\tc ^= s.<span class=\"title function_\">charCodeAt</span>(i);</span><br><span class=\"line\">\t\tc ^= t.<span class=\"title function_\">charCodeAt</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(c);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"371-Sum-of-Two-Integers\"><a href=\"#371-Sum-of-Two-Integers\" class=\"headerlink\" title=\"371-Sum of Two Integers\"></a><a href=\"https://leetcode.com/problems/sum-of-two-integers/#/description\">371-Sum of Two Integers</a></h3><h4 id=\"方法一：位运算\"><a href=\"#方法一：位运算\" class=\"headerlink\" title=\"方法一：位运算\"></a>方法一：位运算</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">a</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">b</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> getSum = <span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b==<span class=\"number\">0</span>? <span class=\"attr\">a</span>:<span class=\"title function_\">getSum</span>(a^b, (a&amp;b)&lt;&lt;<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"226-Invert-Binary-Tree\"><a href=\"#226-Invert-Binary-Tree\" class=\"headerlink\" title=\"226-Invert Binary Tree\"></a><a href=\"https://leetcode.com/problems/invert-binary-tree/#/description\">226-Invert Binary Tree</a></h3><h4 id=\"方法一：二叉树基本上都是递归，只不过这次规律很容易发现\"><a href=\"#方法一：二叉树基本上都是递归，只不过这次规律很容易发现\" class=\"headerlink\" title=\"方法一：二叉树基本上都是递归，只不过这次规律很容易发现\"></a>方法一：二叉树基本上都是递归，只不过这次规律很容易发现</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">TreeNode</span>&#125; <span class=\"variable\">root</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">TreeNode</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> invertTree = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!root)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> left = root.<span class=\"property\">left</span>,</span><br><span class=\"line\">        right = root.<span class=\"property\">right</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">    root.<span class=\"property\">left</span> = <span class=\"title function_\">invertTree</span>(right);</span><br><span class=\"line\">    root.<span class=\"property\">right</span> = <span class=\"title function_\">invertTree</span>(left);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"492-Construct-the-Rectangle\"><a href=\"#492-Construct-the-Rectangle\" class=\"headerlink\" title=\"492-Construct the Rectangle\"></a><a href=\"https://leetcode.com/problems/construct-the-rectangle\">492-Construct the Rectangle</a></h3><h4 id=\"方法一：越和正方形相似越好，所以需要先求根值确定大致范围\"><a href=\"#方法一：越和正方形相似越好，所以需要先求根值确定大致范围\" class=\"headerlink\" title=\"方法一：越和正方形相似越好，所以需要先求根值确定大致范围\"></a>方法一：越和正方形相似越好，所以需要先求根值确定大致范围</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">area</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> constructRectangle = <span class=\"keyword\">function</span>(<span class=\"params\">area</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> w = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">sqrt</span>(area));</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (area % w !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t    w--;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> [area/w,w];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"283-Move-Zeroes\"><a href=\"#283-Move-Zeroes\" class=\"headerlink\" title=\"283-Move Zeroes\"></a><a href=\"https://leetcode.com/problems/move-zeroes\">283-Move Zeroes</a></h3><h4 id=\"方法一：碰到-0-就先去掉再-push-进数组\"><a href=\"#方法一：碰到-0-就先去掉再-push-进数组\" class=\"headerlink\" title=\"方法一：碰到 0 就先去掉再 push 进数组\"></a>方法一：碰到 0 就先去掉再 push 进数组</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify nums in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> moveZeroes = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,m=<span class=\"number\">0</span>,n=nums.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[m] === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            nums.<span class=\"title function_\">splice</span>(m,<span class=\"number\">1</span>);</span><br><span class=\"line\">            nums.<span class=\"title function_\">push</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            m++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：类似于冒泡\"><a href=\"#方法二：类似于冒泡\" class=\"headerlink\" title=\"方法二：类似于冒泡\"></a>方法二：类似于冒泡</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify nums in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> moveZeroes = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[i] !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> temp = nums[j];</span><br><span class=\"line\">            nums[j] = nums[i];</span><br><span class=\"line\">            nums[i] = temp;</span><br><span class=\"line\">            j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法三：用一个变量记录当前多少个元素不为-0\"><a href=\"#方法三：用一个变量记录当前多少个元素不为-0\" class=\"headerlink\" title=\"方法三：用一个变量记录当前多少个元素不为 0\"></a>方法三：用一个变量记录当前多少个元素不为 0</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify nums in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> moveZeroes = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums === <span class=\"literal\">null</span> || nums.<span class=\"property\">length</span> === <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;        </span><br><span class=\"line\">    <span class=\"keyword\">var</span> insertPos = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;nums.<span class=\"property\">length</span>;i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[i] !== <span class=\"number\">0</span>) nums[insertPos++] = nums[i];</span><br><span class=\"line\">    &#125;        </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (insertPos &lt; nums.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        nums[insertPos++] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"530-Minimum-Absolute-Difference-in-BST\"><a href=\"#530-Minimum-Absolute-Difference-in-BST\" class=\"headerlink\" title=\"530-Minimum Absolute Difference in BST\"></a><a href=\"https://leetcode.com/problems/minimum-absolute-difference-in-bst\">530-Minimum Absolute Difference in BST</a></h3><p>暂无</p>\n<h3 id=\"506-Relative-Ranks\"><a href=\"#506-Relative-Ranks\" class=\"headerlink\" title=\"506-Relative Ranks\"></a><a href=\"https://leetcode.com/problems/relative-ranks\">506-Relative Ranks</a></h3><p>暂无</p>\n<h3 id=\"167-Two-Sum-II-Input-array-is-sorted\"><a href=\"#167-Two-Sum-II-Input-array-is-sorted\" class=\"headerlink\" title=\"167-Two Sum II - Input array is sorted\"></a><a href=\"https://leetcode.com/problems/two-sum-ii-input-array-is-sorted\">167-Two Sum II - Input array is sorted</a></h3><h4 id=\"方法一：两个指针\"><a href=\"#方法一：两个指针\" class=\"headerlink\" title=\"方法一：两个指针\"></a>方法一：两个指针</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">numbers</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"keyword\">function</span>(<span class=\"params\">numbers, target</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (numbers === <span class=\"literal\">null</span> || numbers.<span class=\"property\">length</span> &lt; <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> left = <span class=\"number\">0</span>, right = numbers.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (left &lt; right) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> v = numbers[left] + numbers[right];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (v == target) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>[left+<span class=\"number\">1</span>,right+<span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (v &gt; target) &#123;</span><br><span class=\"line\">            right --;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            left ++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：二分查找\"><a href=\"#方法二：二分查找\" class=\"headerlink\" title=\"方法二：二分查找\"></a>方法二：二分查找</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">numbers</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"keyword\">function</span>(<span class=\"params\">numbers, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numbers.<span class=\"property\">length</span>&lt;<span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;numbers.<span class=\"property\">length</span>-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> start=i+<span class=\"number\">1</span>, end=numbers.<span class=\"property\">length</span>-<span class=\"number\">1</span>, gap=target-numbers[i];</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(start &lt;= end) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> m = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(start+(end-start)/<span class=\"number\">2</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(numbers[m] == gap) <span class=\"keyword\">return</span> [i+<span class=\"number\">1</span>,m+<span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(numbers[m] &gt; gap) end=m-<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> start=m+<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"455-Assign-Cookies\"><a href=\"#455-Assign-Cookies\" class=\"headerlink\" title=\"455-Assign Cookies\"></a><a href=\"https://leetcode.com/problems/assign-cookies\">455-Assign Cookies</a></h3><h4 id=\"方法一：Just-assign-the-cookies-starting-from-the-child-with-less-greediness-to-maximize-the-number-of-happy-children\"><a href=\"#方法一：Just-assign-the-cookies-starting-from-the-child-with-less-greediness-to-maximize-the-number-of-happy-children\" class=\"headerlink\" title=\"方法一：Just assign the cookies starting from the child with less greediness to maximize the number of happy children .\"></a>方法一：Just assign the cookies starting from the child with less greediness to maximize the number of happy children .</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">g</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findContentChildren = <span class=\"keyword\">function</span>(<span class=\"params\">g, s</span>) &#123;</span><br><span class=\"line\">    g.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b&#125;);</span><br><span class=\"line\">    s.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,m=g.<span class=\"property\">length</span>,n=s.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;n&amp;&amp;i&lt;m;j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(g[i]&lt;=s[j])&#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"453-Minimum-Moves-to-Equal-Array-Elements\"><a href=\"#453-Minimum-Moves-to-Equal-Array-Elements\" class=\"headerlink\" title=\"453-Minimum Moves to Equal Array Elements\"></a><a href=\"https://leetcode.com/problems/minimum-moves-to-equal-array-elements\">453-Minimum Moves to Equal Array Elements</a></h3><h4 id=\"方法一：每次让-n-1-个元素-1，其实可以理解为每次让-1-个元素减-1，知道都等于数组中的最小元素为止\"><a href=\"#方法一：每次让-n-1-个元素-1，其实可以理解为每次让-1-个元素减-1，知道都等于数组中的最小元素为止\" class=\"headerlink\" title=\"方法一：每次让 n-1 个元素 +1，其实可以理解为每次让 1 个元素减 1，知道都等于数组中的最小元素为止\"></a>方法一：每次让 n-1 个元素 +1，其实可以理解为每次让 1 个元素减 1，知道都等于数组中的最小元素为止</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> minMoves = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> min = <span class=\"title class_\">Math</span>.<span class=\"property\">min</span>.<span class=\"title function_\">apply</span>(<span class=\"literal\">null</span>, nums),n=nums.<span class=\"property\">length</span>,result=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        result += nums[i] -min;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"383-Ransom-Note\"><a href=\"#383-Ransom-Note\" class=\"headerlink\" title=\"383-Ransom Note\"></a><a href=\"https://leetcode.com/problems/ransom-note\">383-Ransom Note</a></h3><h4 id=\"方法一：用一个数组作为字典表（其实应该是哈希表，在-JS-中就是数组）\"><a href=\"#方法一：用一个数组作为字典表（其实应该是哈希表，在-JS-中就是数组）\" class=\"headerlink\" title=\"方法一：用一个数组作为字典表（其实应该是哈希表，在 JS 中就是数组）\"></a>方法一：用一个数组作为字典表（其实应该是哈希表，在 JS 中就是数组）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">ransomNote</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">magazine</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> canConstruct = <span class=\"keyword\">function</span>(<span class=\"params\">ransomNote, magazine</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> n = ransomNote.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> s = ransomNote[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(magazine.<span class=\"title function_\">indexOf</span>(s) == -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            magazine = magazine.<span class=\"title function_\">replace</span>(s,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !!(magazine.<span class=\"property\">length</span> + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"404-Sum-of-Left-Leaves\"><a href=\"#404-Sum-of-Left-Leaves\" class=\"headerlink\" title=\"404-Sum of Left Leaves\"></a><a href=\"https://leetcode.com/problems/sum-of-left-leaves\">404-Sum of Left Leaves</a></h3><h4 id=\"方法一：将叶子节点区分出来就可以了\"><a href=\"#方法一：将叶子节点区分出来就可以了\" class=\"headerlink\" title=\"方法一：将叶子节点区分出来就可以了\"></a>方法一：将叶子节点区分出来就可以了</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">TreeNode</span>&#125; <span class=\"variable\">root</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sumOfLeftLeaves = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root === <span class=\"literal\">null</span>) &#123;<span class=\"keyword\">return</span> <span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root.<span class=\"property\">left</span> !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root.<span class=\"property\">left</span>.<span class=\"property\">left</span> === <span class=\"literal\">null</span> &amp;&amp; root.<span class=\"property\">left</span>.<span class=\"property\">right</span> === <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            ans += root.<span class=\"property\">left</span>.<span class=\"property\">val</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            ans += <span class=\"title function_\">sumOfLeftLeaves</span>(root.<span class=\"property\">left</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ans += <span class=\"title function_\">sumOfLeftLeaves</span>(root.<span class=\"property\">right</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"349-Intersection-of-Two-Arrays\"><a href=\"#349-Intersection-of-Two-Arrays\" class=\"headerlink\" title=\"349-Intersection of Two Arrays\"></a><a href=\"https://leetcode.com/problems/intersection-of-two-arrays\">349-Intersection of Two Arrays</a></h3><h4 id=\"方法一：两个指针进行遍历（哈希表，复杂度为-O-n-）\"><a href=\"#方法一：两个指针进行遍历（哈希表，复杂度为-O-n-）\" class=\"headerlink\" title=\"方法一：两个指针进行遍历（哈希表，复杂度为 O(n)）\"></a>方法一：两个指针进行遍历（哈希表，复杂度为 O(n)）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> intersection = <span class=\"keyword\">function</span>(<span class=\"params\">nums1, nums2</span>) &#123;</span><br><span class=\"line\">        nums1.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b&#125;);</span><br><span class=\"line\">        nums2.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b&#125;);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,</span><br><span class=\"line\">            j = <span class=\"number\">0</span>,</span><br><span class=\"line\">            result = [];</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt; nums1.<span class=\"property\">length</span> &amp;&amp; j &lt; nums2.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums1[i] &lt; nums2[j]) &#123;</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums1[i] &gt; nums2[j]) &#123;</span><br><span class=\"line\">                j++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(result.<span class=\"title function_\">indexOf</span>(nums1[i]) == -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                    result.<span class=\"title function_\">push</span>(nums1[i]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">                j++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b&#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：二分查找（复杂度为-O-nlgn-）\"><a href=\"#方法二：二分查找（复杂度为-O-nlgn-）\" class=\"headerlink\" title=\"方法二：二分查找（复杂度为 O(nlgn)）\"></a>方法二：二分查找（复杂度为 O(nlgn)）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> intersection = <span class=\"keyword\">function</span>(<span class=\"params\">nums1, nums2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = [];</span><br><span class=\"line\">    nums2.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b;&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;nums1.<span class=\"property\">length</span>;i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">binarySearch</span>(nums2, nums1[i]) &amp;&amp; result.<span class=\"title function_\">indexOf</span>(nums1[i]) == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            result.<span class=\"title function_\">push</span>(nums1[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> binarySearch = <span class=\"keyword\">function</span>(<span class=\"params\">nums,target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> low = <span class=\"number\">0</span>,high = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (low &lt;= high) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(low + (high - low) / <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[mid] == target) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[mid] &gt; target) &#123;</span><br><span class=\"line\">            high = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            low = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"122-Best-Time-to-Buy-and-Sell-Stock-II\"><a href=\"#122-Best-Time-to-Buy-and-Sell-Stock-II\" class=\"headerlink\" title=\"122-Best Time to Buy and Sell Stock II\"></a><a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii\">122-Best Time to Buy and Sell Stock II</a></h3><h4 id=\"方法一：只要第二天价格比第一天价格高，就卖掉\"><a href=\"#方法一：只要第二天价格比第一天价格高，就卖掉\" class=\"headerlink\" title=\"方法一：只要第二天价格比第一天价格高，就卖掉\"></a>方法一：只要第二天价格比第一天价格高，就卖掉</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span>(<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result=<span class=\"number\">0</span>,n=prices.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;n-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(prices[i]&lt;prices[i+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            result += prices[i+<span class=\"number\">1</span>] - prices[i];</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"387-First-Unique-Character-in-a-String\"><a href=\"#387-First-Unique-Character-in-a-String\" class=\"headerlink\" title=\"387-First Unique Character in a String\"></a><a href=\"https://leetcode.com/problems/first-unique-character-in-a-string\">387-First Unique Character in a String</a></h3><h4 id=\"方法一：用一个数组记录字符出现的位置及次数（哈希表）\"><a href=\"#方法一：用一个数组记录字符出现的位置及次数（哈希表）\" class=\"headerlink\" title=\"方法一：用一个数组记录字符出现的位置及次数（哈希表）\"></a>方法一：用一个数组记录字符出现的位置及次数（哈希表）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> firstUniqChar = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> freq = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">26</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;a&#x27;</span>.<span class=\"title function_\">charCodeAt</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i ++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (freq [s[i].<span class=\"title function_\">charCodeAt</span>() - a] === <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">            freq [s[i].<span class=\"title function_\">charCodeAt</span>() - a] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            freq [s[i].<span class=\"title function_\">charCodeAt</span>() - a]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> k = <span class=\"number\">0</span>; k &lt; s.<span class=\"property\">length</span>; k ++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(freq [s[k].<span class=\"title function_\">charCodeAt</span>() - a] == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> k;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"171-Excel-Sheet-Column-Number\"><a href=\"#171-Excel-Sheet-Column-Number\" class=\"headerlink\" title=\"171-Excel Sheet Column Number\"></a><a href=\"https://leetcode.com/problems/excel-sheet-column-number\">171-Excel Sheet Column Number</a></h3><h4 id=\"方法一：很容易发现规律，类似二进制转换成-10-进制\"><a href=\"#方法一：很容易发现规律，类似二进制转换成-10-进制\" class=\"headerlink\" title=\"方法一：很容易发现规律，类似二进制转换成 10 进制\"></a>方法一：很容易发现规律，类似二进制转换成 10 进制</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> titleToNumber = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=s.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        result += <span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">26</span>,n-i-<span class=\"number\">1</span>)*(s[i].<span class=\"title function_\">charCodeAt</span>() - <span class=\"number\">64</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"504-Base-7\"><a href=\"#504-Base-7\" class=\"headerlink\" title=\"504-Base 7\"></a><a href=\"https://leetcode.com/problems/base-7\">504-Base 7</a></h3><h4 id=\"方法一：递归取余，很经典的一道题和解法，用的比较多\"><a href=\"#方法一：递归取余，很经典的一道题和解法，用的比较多\" class=\"headerlink\" title=\"方法一：递归取余，很经典的一道题和解法，用的比较多\"></a>方法一：递归取余，很经典的一道题和解法，用的比较多</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">num</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> convertToBase7 = <span class=\"keyword\">function</span>(<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num&gt;=<span class=\"number\">0</span> ? <span class=\"string\">&quot;&quot;</span> + (num&gt;=<span class=\"number\">7</span> ? <span class=\"title function_\">convertToBase7</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(num/<span class=\"number\">7</span>)) + <span class=\"string\">&quot;&quot;</span> + num%<span class=\"number\">7</span> : num) : <span class=\"string\">&#x27;-&#x27;</span>+<span class=\"title function_\">convertToBase7</span>(-num);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"237-Delete-Node-in-a-Linked-List\"><a href=\"#237-Delete-Node-in-a-Linked-List\" class=\"headerlink\" title=\"237-Delete Node in a Linked List\"></a><a href=\"https://leetcode.com/problems/delete-node-in-a-linked-list\">237-Delete Node in a Linked List</a></h3><h4 id=\"方法一：很智障的一道题\"><a href=\"#方法一：很智障的一道题\" class=\"headerlink\" title=\"方法一：很智障的一道题\"></a>方法一：很智障的一道题</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">ListNode</span>&#125; <span class=\"variable\">node</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify node in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> deleteNode = <span class=\"keyword\">function</span>(<span class=\"params\">node</span>) &#123;</span><br><span class=\"line\">    node.<span class=\"property\">val</span> = node.<span class=\"property\">next</span>.<span class=\"property\">val</span>;</span><br><span class=\"line\">    node.<span class=\"property\">next</span> = node.<span class=\"property\">next</span>.<span class=\"property\">next</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"100-Same-Tree\"><a href=\"#100-Same-Tree\" class=\"headerlink\" title=\"100-Same Tree\"></a><a href=\"https://leetcode.com/problems/same-tree\">100-Same Tree</a></h3><h4 id=\"方法一：递归，相等的依据除了值相等之外还有不能为-null\"><a href=\"#方法一：递归，相等的依据除了值相等之外还有不能为-null\" class=\"headerlink\" title=\"方法一：递归，相等的依据除了值相等之外还有不能为 null\"></a>方法一：递归，相等的依据除了值相等之外还有不能为 null</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">TreeNode</span>&#125; <span class=\"variable\">p</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">TreeNode</span>&#125; <span class=\"variable\">q</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> isSameTree = <span class=\"keyword\">function</span>(<span class=\"params\">p, q</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (p === <span class=\"literal\">null</span> &amp;&amp; q === <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p !== <span class=\"literal\">null</span> &amp;&amp; q !== <span class=\"literal\">null</span> &amp;&amp; p.<span class=\"property\">val</span> == q.<span class=\"property\">val</span> &amp;&amp; <span class=\"title function_\">isSameTree</span>(p.<span class=\"property\">left</span>, q.<span class=\"property\">left</span>) &amp;&amp; <span class=\"title function_\">isSameTree</span>(p.<span class=\"property\">right</span>, q.<span class=\"property\">right</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"169-Maiority-Element\"><a href=\"#169-Maiority-Element\" class=\"headerlink\" title=\"169-Maiority Element\"></a><a href=\"https://leetcode.com/problems/majority-element\">169-Maiority Element</a></h3><h4 id=\"方法一：每找出两个不同的-element，就成对删除即-count–，最终剩下的一定就是所求的（O-n-）\"><a href=\"#方法一：每找出两个不同的-element，就成对删除即-count–，最终剩下的一定就是所求的（O-n-）\" class=\"headerlink\" title=\"方法一：每找出两个不同的 element，就成对删除即 count–，最终剩下的一定就是所求的（O(n)）\"></a>方法一：每找出两个不同的 element，就成对删除即 count–，最终剩下的一定就是所求的（O(n)）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> majorityElement = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> major=nums[<span class=\"number\">0</span>], count = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>,n=nums.<span class=\"property\">length</span>; i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(count===<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                count++;</span><br><span class=\"line\">                major=nums[i];</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(major==nums[i])&#123;</span><br><span class=\"line\">                count++;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> count--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> major;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：哈希表\"><a href=\"#方法二：哈希表\" class=\"headerlink\" title=\"方法二：哈希表\"></a>方法二：哈希表</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> majorityElement = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> counts = [],n = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(counts[nums[i]] === <span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">            counts[nums[i]] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(counts[nums[i]] + <span class=\"number\">1</span>&gt; <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(n / <span class=\"number\">2</span>)) &#123; <span class=\"keyword\">return</span> nums[i];&#125;</span><br><span class=\"line\">            counts[nums[i]]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法三：Since-the-majority-element-appears-more-than-n-2-times-the-n-2-th-element-in-the-sorted-nums-must-be-the-majority-element\"><a href=\"#方法三：Since-the-majority-element-appears-more-than-n-2-times-the-n-2-th-element-in-the-sorted-nums-must-be-the-majority-element\" class=\"headerlink\" title=\"方法三：Since the majority element appears more than n / 2 times, the n / 2-th element in the sorted nums must be the majority element.\"></a>方法三：Since the majority element appears more than <code>n / 2</code> times, the <code>n / 2</code>-th element in the sorted <code>nums</code> must be the majority element.</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> majorityElement = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    nums.<span class=\"title function_\">sort</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(nums.<span class=\"property\">length</span>/<span class=\"number\">2</span>)];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法四：随机挑选一个元素，然后看它是否是多数元素\"><a href=\"#方法四：随机挑选一个元素，然后看它是否是多数元素\" class=\"headerlink\" title=\"方法四：随机挑选一个元素，然后看它是否是多数元素\"></a>方法四：随机挑选一个元素，然后看它是否是多数元素</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> majorityElement = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> n = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> idx = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()*n),candidate = nums[idx],counts = <span class=\"number\">0</span>; </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[i] == candidate) &#123;counts++;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (counts &gt; n / <span class=\"number\">2</span>) <span class=\"keyword\">return</span> candidate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法五：摩尔投票算法\"><a href=\"#方法五：摩尔投票算法\" class=\"headerlink\" title=\"方法五：摩尔投票算法\"></a>方法五：<a href=\"https://www.zhihu.com/question/44213758?sort=created\">摩尔投票算法</a></h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> majorityElement = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> major, counts = <span class=\"number\">0</span>, n = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!counts) &#123;</span><br><span class=\"line\">            major = nums[i];</span><br><span class=\"line\">            counts = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> counts += (nums[i] == major) ? <span class=\"number\">1</span> : -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> major;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法六：位运算，The-key-lies-in-how-to-count-the-number-of-1‘s-on-a-specific-bit-Specifically-you-need-a-mask-with-a-1-on-the-i-the-bit-and-0-otherwise-to-get-the-i-th-bit-of-each-element-in-nums\"><a href=\"#方法六：位运算，The-key-lies-in-how-to-count-the-number-of-1‘s-on-a-specific-bit-Specifically-you-need-a-mask-with-a-1-on-the-i-the-bit-and-0-otherwise-to-get-the-i-th-bit-of-each-element-in-nums\" class=\"headerlink\" title=\"方法六：位运算，The key lies in how to count the number of 1‘s on a specific bit. Specifically, you need a mask with a 1 on the i-the bit and 0 otherwise to get the i-th bit of each element in nums\"></a>方法六：位运算，The key lies in how to count the number of <code>1</code>‘s on a specific bit. Specifically, you need a <code>mask</code> with a <code>1</code> on the <code>i</code>-the bit and <code>0</code> otherwise to get the <code>i</code>-th bit of each element in <code>nums</code></h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> majorityElement = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> major = <span class=\"number\">0</span>, n = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, mask = <span class=\"number\">1</span>; i &lt; <span class=\"number\">32</span>; i++, mask &lt;&lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> bitCounts = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[j] &amp; mask) bitCounts++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (bitCounts &gt; n / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                major |= mask;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> major;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"242-Valid-Anagram\"><a href=\"#242-Valid-Anagram\" class=\"headerlink\" title=\"242-Valid Anagram\"></a><a href=\"https://leetcode.com/problems/valid-anagram\">242-Valid Anagram</a></h3><h4 id=\"方法一：用一个数组作为桶，s-中的字符用来加-1，t-中的字符用来减-1；如果最后桶中没有元素就返回-true\"><a href=\"#方法一：用一个数组作为桶，s-中的字符用来加-1，t-中的字符用来减-1；如果最后桶中没有元素就返回-true\" class=\"headerlink\" title=\"方法一：用一个数组作为桶，s 中的字符用来加 1，t 中的字符用来减 1；如果最后桶中没有元素就返回 true\"></a>方法一：用一个数组作为桶，s 中的字符用来加 1，t 中的字符用来减 1；如果最后桶中没有元素就返回 true</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">t</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> isAnagram = <span class=\"keyword\">function</span>(<span class=\"params\">s, t</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s===<span class=\"string\">&quot;&quot;</span>&amp;&amp;t===<span class=\"string\">&quot;&quot;</span>)&#123;<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> alphabet = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">26</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;alphabet.<span class=\"property\">length</span>;m++)&#123;</span><br><span class=\"line\">            alphabet[m] =<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            alphabet[s[i].<span class=\"title function_\">charCodeAt</span>() - <span class=\"number\">97</span>]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; t.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            alphabet[t[j].<span class=\"title function_\">charCodeAt</span>() - <span class=\"number\">97</span>]--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> k=<span class=\"number\">0</span>;k&lt;alphabet.<span class=\"property\">length</span>;k++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (alphabet[k]!== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"409-Longest-Palindrome\"><a href=\"#409-Longest-Palindrome\" class=\"headerlink\" title=\"409-Longest Palindrome\"></a><a href=\"https://leetcode.com/problems/longest-palindrome\">409-Longest Palindrome</a></h3><h4 id=\"方法一：将数组中的元素分为偶数和奇数两种情况，因为回文字符串的字符个数有这两种情况\"><a href=\"#方法一：将数组中的元素分为偶数和奇数两种情况，因为回文字符串的字符个数有这两种情况\" class=\"headerlink\" title=\"方法一：将数组中的元素分为偶数和奇数两种情况，因为回文字符串的字符个数有这两种情况\"></a>方法一：将数组中的元素分为偶数和奇数两种情况，因为回文字符串的字符个数有这两种情况</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longestPalindrome = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> even = <span class=\"number\">0</span>,odd = <span class=\"number\">0</span>,arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=s.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> c = s[i].<span class=\"title function_\">charCodeAt</span>() - <span class=\"number\">65</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[c] === <span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">            arr[c] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            arr[c]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[c]%<span class=\"number\">2</span> === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            even += <span class=\"number\">2</span>;</span><br><span class=\"line\">            odd--;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            odd++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> even + (odd===<span class=\"number\">0</span>? <span class=\"number\">0</span> :<span class=\"number\">1</span>); </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"541-Reverse-String-II\"><a href=\"#541-Reverse-String-II\" class=\"headerlink\" title=\"541-Reverse String II\"></a><a href=\"https://leetcode.com/problems/reverse-string-ii\">541-Reverse String II</a></h3><p>暂无</p>\n<h3 id=\"401-Binary-Watch\"><a href=\"#401-Binary-Watch\" class=\"headerlink\" title=\"401-Binary Watch\"></a><a href=\"https://leetcode.com/problems/binary-watch\">401-Binary Watch</a></h3><h4 id=\"方法一：从结果出发，满足条件时-push-进数组\"><a href=\"#方法一：从结果出发，满足条件时-push-进数组\" class=\"headerlink\" title=\"方法一：从结果出发，满足条件时 push 进数组\"></a>方法一：从结果出发，满足条件时 push 进数组</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">num</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> readBinaryWatch = <span class=\"keyword\">function</span>(<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> h=<span class=\"number\">0</span>;h&lt;<span class=\"number\">12</span>;h++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;<span class=\"number\">60</span>;m++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((h.<span class=\"title function_\">toString</span>(<span class=\"number\">2</span>) + m.<span class=\"title function_\">toString</span>(<span class=\"number\">2</span>)).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/0/g</span>,<span class=\"string\">&quot;&quot;</span>).<span class=\"property\">length</span> == num)&#123;</span><br><span class=\"line\">                m = m&gt;<span class=\"number\">9</span> ? m : <span class=\"string\">&quot;0&quot;</span> + m;</span><br><span class=\"line\">                item = h + <span class=\"string\">&quot;:&quot;</span> + m;</span><br><span class=\"line\">                result.<span class=\"title function_\">push</span>(item);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"217-Contains-Duplicate\"><a href=\"#217-Contains-Duplicate\" class=\"headerlink\" title=\"217-Contains Duplicate\"></a><a href=\"https://leetcode.com/problems/contains-duplicate\">217-Contains Duplicate</a></h3><h4 id=\"方法一：哈希表\"><a href=\"#方法一：哈希表\" class=\"headerlink\" title=\"方法一：哈希表\"></a>方法一：哈希表</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> containsDuplicate = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(nums.<span class=\"property\">length</span>===<span class=\"number\">0</span>)&#123;<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> opt = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=nums.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(opt[nums[i]])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            opt[nums[i]] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：先将数组排序，然后只需要比较相邻元素\"><a href=\"#方法二：先将数组排序，然后只需要比较相邻元素\" class=\"headerlink\" title=\"方法二：先将数组排序，然后只需要比较相邻元素\"></a>方法二：先将数组排序，然后只需要比较相邻元素</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> containsDuplicate = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    nums.<span class=\"title function_\">sort</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> ind = <span class=\"number\">1</span>; ind &lt; nums.<span class=\"property\">length</span>; ind++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[ind] == nums[ind - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"13-Roman-to-Integer\"><a href=\"#13-Roman-to-Integer\" class=\"headerlink\" title=\"13-Roman to Integer\"></a><a href=\"https://leetcode.com/problems/roman-to-integer\">13-Roman to Integer</a></h3><h4 id=\"方法一：知道罗马数字的规则之后就好写了\"><a href=\"#方法一：知道罗马数字的规则之后就好写了\" class=\"headerlink\" title=\"方法一：知道罗马数字的规则之后就好写了\"></a>方法一：知道罗马数字的规则之后就好写了</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> romanToInt = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> opt = &#123;<span class=\"string\">&#x27;M&#x27;</span>: <span class=\"number\">1000</span>,<span class=\"string\">&#x27;D&#x27;</span>: <span class=\"number\">500</span> ,<span class=\"string\">&#x27;C&#x27;</span>: <span class=\"number\">100</span>,<span class=\"string\">&#x27;L&#x27;</span>: <span class=\"number\">50</span>,<span class=\"string\">&#x27;X&#x27;</span>: <span class=\"number\">10</span>,<span class=\"string\">&#x27;V&#x27;</span>: <span class=\"number\">5</span>,<span class=\"string\">&#x27;I&#x27;</span>: <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        z = <span class=\"number\">0</span>,</span><br><span class=\"line\">        n=s.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;n-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(opt[s[i]] &lt; opt[s[i+<span class=\"number\">1</span>]])&#123;</span><br><span class=\"line\">            z -= opt[s[i]];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            z += opt[s[i]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> z + opt[s[n-<span class=\"number\">1</span>]];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"206-Reverse-Linked-List\"><a href=\"#206-Reverse-Linked-List\" class=\"headerlink\" title=\"206-Reverse Linked List\"></a><a href=\"https://leetcode.com/problems/reverse-linked-list\">206-Reverse Linked List</a></h3><h4 id=\"方法一：反转的条件就是-head-next-next-head-和-head-next-null\"><a href=\"#方法一：反转的条件就是-head-next-next-head-和-head-next-null\" class=\"headerlink\" title=\"方法一：反转的条件就是 head.next.next = head 和 head.next = null\"></a>方法一：反转的条件就是 head.next.next = head 和 head.next = null</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">ListNode</span>&#125; <span class=\"variable\">head</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">ListNode</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reverseList = <span class=\"keyword\">function</span>(<span class=\"params\">head</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!head || !(head.<span class=\"property\">next</span>)) &#123;<span class=\"keyword\">return</span> head;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> node = <span class=\"title function_\">reverseList</span>(head.<span class=\"property\">next</span>);</span><br><span class=\"line\">    head.<span class=\"property\">next</span>.<span class=\"property\">next</span> = head;</span><br><span class=\"line\">    head.<span class=\"property\">next</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> node; </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"350-Intersection-of-Two-Arrays-II\"><a href=\"#350-Intersection-of-Two-Arrays-II\" class=\"headerlink\" title=\"350-Intersection of Two Arrays II\"></a><a href=\"https://leetcode.com/problems/intersection-of-two-arrays-ii\">350-Intersection of Two Arrays II</a></h3><h4 id=\"方法一：先对-nums1-遍历，生成哈希表，然后对-nums2-遍历\"><a href=\"#方法一：先对-nums1-遍历，生成哈希表，然后对-nums2-遍历\" class=\"headerlink\" title=\"方法一：先对 nums1 遍历，生成哈希表，然后对 nums2 遍历\"></a>方法一：先对 nums1 遍历，生成哈希表，然后对 nums2 遍历</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> intersect = <span class=\"keyword\">function</span>(<span class=\"params\">nums1, nums2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = [],result=[];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=nums1.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> numi = arr[nums1[i]];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(numi)&#123;</span><br><span class=\"line\">            arr[nums1[i]]++;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            arr[nums1[i]] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>,m=nums2.<span class=\"property\">length</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> numj = arr[nums2[j]];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(numj)&#123;</span><br><span class=\"line\">            result.<span class=\"title function_\">push</span>(nums2[j]);</span><br><span class=\"line\">            arr[nums2[j]]--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：先进行排序，然后用两个指针遍历\"><a href=\"#方法二：先进行排序，然后用两个指针遍历\" class=\"headerlink\" title=\"方法二：先进行排序，然后用两个指针遍历\"></a>方法二：先进行排序，然后用两个指针遍历</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> intersect = <span class=\"keyword\">function</span>(<span class=\"params\">nums1, nums2</span>) &#123;</span><br><span class=\"line\">    nums1.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b;&#125;);</span><br><span class=\"line\">    nums2.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b;&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> n1 = nums1.<span class=\"property\">length</span>, n2 = nums2.<span class=\"property\">length</span>,i1 = <span class=\"number\">0</span>, i2 = <span class=\"number\">0</span>,res = [];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i1 &lt; n1 &amp;&amp; i2 &lt; n2)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums1[i1] == nums2[i2]) &#123;</span><br><span class=\"line\">            res.<span class=\"title function_\">push</span>(nums1[i1]);</span><br><span class=\"line\">            i1++;</span><br><span class=\"line\">            i2++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(nums1[i1] &gt; nums2[i2])&#123;</span><br><span class=\"line\">            i2++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            i1++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"268-Missing-Number\"><a href=\"#268-Missing-Number\" class=\"headerlink\" title=\"268-Missing Number\"></a><a href=\"https://leetcode.com/problems/missing-number\">268-Missing Number</a></h3><h4 id=\"方法一：因为有且只有一个数字丢失，所以可以先排序再遍历，根据索引值和数值的关系判断\"><a href=\"#方法一：因为有且只有一个数字丢失，所以可以先排序再遍历，根据索引值和数值的关系判断\" class=\"headerlink\" title=\"方法一：因为有且只有一个数字丢失，所以可以先排序再遍历，根据索引值和数值的关系判断\"></a>方法一：因为有且只有一个数字丢失，所以可以先排序再遍历，根据索引值和数值的关系判断</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> missingNumber = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> sort = nums.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a-b;</span><br><span class=\"line\">    &#125;),n=nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sort[i] != i)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：位运算，利用异或\"><a href=\"#方法二：位运算，利用异或\" class=\"headerlink\" title=\"方法二：位运算，利用异或\"></a>方法二：位运算，利用异或</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> missingNumber = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> xor = <span class=\"number\">0</span>, i = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">\t\txor = xor ^ i ^ nums[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> xor ^ i;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法三：因为数值范围确定，所以可以先求和，再减去数组中的元素，剩下的数字就是丢失数字\"><a href=\"#方法三：因为数值范围确定，所以可以先求和，再减去数组中的元素，剩下的数字就是丢失数字\" class=\"headerlink\" title=\"方法三：因为数值范围确定，所以可以先求和，再减去数组中的元素，剩下的数字就是丢失数字\"></a>方法三：因为数值范围确定，所以可以先求和，再减去数组中的元素，剩下的数字就是丢失数字</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> missingNumber = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = nums.<span class=\"property\">length</span>,sum = (<span class=\"number\">0</span>+len)*(len+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;len; i++)&#123;</span><br><span class=\"line\">        sum-=nums[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法四：二分查找\"><a href=\"#方法四：二分查找\" class=\"headerlink\" title=\"方法四：二分查找\"></a>方法四：二分查找</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> missingNumber = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    nums.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b;&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> left = <span class=\"number\">0</span>, right = nums.<span class=\"property\">length</span>, mid= <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((left + right)/<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(left&lt;right)&#123;</span><br><span class=\"line\">        mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((left + right)/<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[mid]&gt;mid) &#123;right = mid;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> left = mid+<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> left;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"447-Number-of-Boomerangs\"><a href=\"#447-Number-of-Boomerangs\" class=\"headerlink\" title=\"447-Number of Boomerangs\"></a><a href=\"https://leetcode.com/problems/number-of-boomerangs\">447-Number of Boomerangs</a></h3><p>暂无</p>\n<h3 id=\"543-Diameter-of-Binary-Tree\"><a href=\"#543-Diameter-of-Binary-Tree\" class=\"headerlink\" title=\"543-Diameter of Binary Tree\"></a><a href=\"https://leetcode.com/problems/diameter-of-binary-tree\">543-Diameter of Binary Tree</a></h3><p>暂无</p>\n<h3 id=\"415-Add-Strings\"><a href=\"#415-Add-Strings\" class=\"headerlink\" title=\"415-Add Strings\"></a><a href=\"https://leetcode.com/problems/add-strings\">415-Add Strings</a></h3><h4 id=\"方法一：遍历，用一个变量记录当前位进位情况\"><a href=\"#方法一：遍历，用一个变量记录当前位进位情况\" class=\"headerlink\" title=\"方法一：遍历，用一个变量记录当前位进位情况\"></a>方法一：遍历，用一个变量记录当前位进位情况</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">num1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">num2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> addStrings = <span class=\"keyword\">function</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> carry=<span class=\"number\">0</span>,str = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=num1.<span class=\"property\">length</span>-<span class=\"number\">1</span>,j=num2.<span class=\"property\">length</span>-<span class=\"number\">1</span>;i&gt;=<span class=\"number\">0</span>||j&gt;=<span class=\"number\">0</span>||carry==<span class=\"number\">1</span>;i--,j--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> n1 = num1[i] ? num1[i] - <span class=\"string\">&#x27;0&#x27;</span> : <span class=\"number\">0</span>,</span><br><span class=\"line\">            n2 = num2[j] ? num2[j] - <span class=\"string\">&#x27;0&#x27;</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> sum = (n1 + n2 + carry)%<span class=\"number\">10</span>;</span><br><span class=\"line\">            carry = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((n1 + n2 + carry)/<span class=\"number\">10</span>);</span><br><span class=\"line\">        str = sum + str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"108-Convert-Sorted-Array-to-Binary-Search-Tree\"><a href=\"#108-Convert-Sorted-Array-to-Binary-Search-Tree\" class=\"headerlink\" title=\"108-Convert Sorted Array to Binary Search Tree\"></a><a href=\"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree\">108-Convert Sorted Array to Binary Search Tree</a></h3><p>暂无</p>\n<h3 id=\"405-Convert-a-Number-to-Hexadecimal\"><a href=\"#405-Convert-a-Number-to-Hexadecimal\" class=\"headerlink\" title=\"405-Convert a Number to Hexadecimal\"></a><a href=\"https://leetcode.com/problems/convert-a-number-to-hexadecimal\">405-Convert a Number to Hexadecimal</a></h3><p>暂无</p>\n","more":"<p>由于要找实习，所以最近几周一直在刷 leetcode（打算先把 easy 刷完，大概一天 10 道左右）；而作为一个前端码农，也就只能用 JS 实现算法了，但是众所周知，JS 在算法实现方面是真的不如其他知名语言（java、python、c++），所以绝大多数题都没有 JS 的标准答案，这让我刷 leetcode 的过程变得异常艰难；为了方便和我一样用 JS 刷 leetcode 的小伙伴，打算写一篇纯干货（代码）的文章，对如何用 JS 实现 leetcode 算法题进行总结。（鉴于我水平有限和 JS 本身的局限性，有好多题目我虽然看到了，但是最终没有用 JS 实现，如果你知道某些题目的 JS 实现或有更优解法，请通过网站中的联系方式联系我，O(∩_∩)O谢谢）</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>leetcode 地址：<a href=\"https://leetcode.com/problemset/algorithms/，本文章不会贴出题目，可以点击标题链接查看原题目\">https://leetcode.com/problemset/algorithms/，本文章不会贴出题目，可以点击标题链接查看原题目</a></p>\n<p>排序方式：按照\b本难度中题目的 accepted 统计</p>\n<h2 id=\"JS代码实现\"><a href=\"#JS代码实现\" class=\"headerlink\" title=\"JS代码实现\"></a>JS代码实现</h2><h3 id=\"461-Hamming-distance\"><a href=\"#461-Hamming-distance\" class=\"headerlink\" title=\"461-Hamming distance\"></a><a href=\"https://leetcode.com/problems/hamming-distance/#/description\">461-Hamming distance</a></h3><h4 id=\"方法一：利用-replace-方法\"><a href=\"#方法一：利用-replace-方法\" class=\"headerlink\" title=\"方法一：利用 replace() 方法\"></a>方法一：利用 replace() 方法</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">x</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">y</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hammingDistance = <span class=\"keyword\">function</span>(<span class=\"params\">x, y</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (x^y).<span class=\"title function_\">toString</span>(<span class=\"number\">2</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/0/g</span>,<span class=\"string\">&quot;&quot;</span>).<span class=\"property\">length</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：利用异或\"><a href=\"#方法二：利用异或\" class=\"headerlink\" title=\"方法二：利用异或\"></a>方法二：利用异或</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">x</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">y</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hammingDistance = <span class=\"keyword\">function</span>(<span class=\"params\">x, y</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> xor = x ^ y, count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">32</span>;i++) count += (xor &gt;&gt; i) &amp; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"476-Number-Complement\"><a href=\"#476-Number-Complement\" class=\"headerlink\" title=\"476-Number Complement\"></a><a href=\"https://leetcode.com/problems/number-complement/#/description\">476-Number Complement</a></h3><h4 id=\"方法一：利用二进制\"><a href=\"#方法一：利用二进制\" class=\"headerlink\" title=\"方法一：利用二进制\"></a>方法一：利用二进制</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">num</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findComplement = <span class=\"keyword\">function</span>(<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num^(<span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">2</span>,(num.<span class=\"title function_\">toString</span>(<span class=\"number\">2</span>).<span class=\"property\">length</span>))-<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：利用位运算中的移位\"><a href=\"#方法二：利用位运算中的移位\" class=\"headerlink\" title=\"方法二：利用位运算中的移位\"></a>方法二：利用位运算中的移位</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">num</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findComplement = <span class=\"keyword\">function</span>(<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> mask = num;</span><br><span class=\"line\">    mask |= mask &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    mask |= mask &gt;&gt; <span class=\"number\">2</span>;</span><br><span class=\"line\">    mask |= mask &gt;&gt; <span class=\"number\">4</span>;</span><br><span class=\"line\">    mask |= mask &gt;&gt; <span class=\"number\">8</span>;</span><br><span class=\"line\">    mask |= mask &gt;&gt; <span class=\"number\">16</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num ^ mask;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"500-Keyboard-Row\"><a href=\"#500-Keyboard-Row\" class=\"headerlink\" title=\"500-Keyboard Row\"></a><a href=\"https://leetcode.com/problems/keyboard-row/#/description\">500-Keyboard Row</a></h3><p>暂无</p>\n<h3 id=\"412-Fizz-Buzz\"><a href=\"#412-Fizz-Buzz\" class=\"headerlink\" title=\"412-Fizz Buzz\"></a><a href=\"https://leetcode.com/problems/fizz-buzz/#/description\">412-Fizz Buzz</a></h3><h4 id=\"方法一：各种-if\"><a href=\"#方法一：各种-if\" class=\"headerlink\" title=\"方法一：各种 if\"></a>方法一：各种 if</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fizzBuzz = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>;i&lt;n+<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i%<span class=\"number\">15</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            arr[i-<span class=\"number\">1</span>] = <span class=\"string\">&quot;FizzBuzz&quot;</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i%<span class=\"number\">5</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            arr[i-<span class=\"number\">1</span>] = <span class=\"string\">&quot;Buzz&quot;</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i%<span class=\"number\">3</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            arr[i-<span class=\"number\">1</span>] = <span class=\"string\">&quot;Fizz&quot;</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            arr[i-<span class=\"number\">1</span>] = <span class=\"string\">&quot;&quot;</span> + i</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"344-Reverse-String\"><a href=\"#344-Reverse-String\" class=\"headerlink\" title=\"344-Reverse String\"></a><a href=\"https://leetcode.com/problems/reverse-string/#/description\">344-Reverse String</a></h3><h4 id=\"方法一：从后往前遍历\"><a href=\"#方法一：从后往前遍历\" class=\"headerlink\" title=\"方法一：从后往前遍历\"></a>方法一：从后往前遍历</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reverseString = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>,n=s.<span class=\"property\">length</span>;i&lt;n+<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">        str += s[n-i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：递归\"><a href=\"#方法二：递归\" class=\"headerlink\" title=\"方法二：递归\"></a>方法二：递归</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reverseString = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> length = s.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (length &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> leftStr = s.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, length / <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> rightStr = s.<span class=\"title function_\">substring</span>(length / <span class=\"number\">2</span>, length);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">reverseString</span>(rightStr) + <span class=\"title function_\">reverseString</span>(leftStr);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"496-Next-Greater-Element-I\"><a href=\"#496-Next-Greater-Element-I\" class=\"headerlink\" title=\"496-Next Greater Element I\"></a><a href=\"https://leetcode.com/problems/next-greater-element-i/#/description\">496-Next Greater Element I</a></h3><p>暂无</p>\n<h3 id=\"463-Island-Perimeter\"><a href=\"#463-Island-Perimeter\" class=\"headerlink\" title=\"463-Island Perimeter\"></a><a href=\"https://leetcode.com/problems/island-perimeter/#/description\">463-Island Perimeter</a></h3><h4 id=\"方法一：每块陆地都加-4，遇到有相邻陆地时减-2\"><a href=\"#方法一：每块陆地都加-4，遇到有相邻陆地时减-2\" class=\"headerlink\" title=\"方法一：每块陆地都加 4，遇到有相邻陆地时减 2\"></a>方法一：每块陆地都加 4，遇到有相邻陆地时减 2</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">grid</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> islandPerimeter = <span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=grid.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>,m=grid[<span class=\"number\">0</span>].<span class=\"property\">length</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(grid[i][j] ==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                result +=<span class=\"number\">4</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i&gt;<span class=\"number\">0</span> &amp;&amp; grid[i-<span class=\"number\">1</span>][j] == <span class=\"number\">1</span>)&#123;result -=<span class=\"number\">2</span>&#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j&gt;<span class=\"number\">0</span> &amp;&amp; grid[i][j-<span class=\"number\">1</span>] ==<span class=\"number\">1</span> )&#123;result -=<span class=\"number\">2</span>&#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"292-Nim-Game\"><a href=\"#292-Nim-Game\" class=\"headerlink\" title=\"292-Nim Game\"></a><a href=\"https://leetcode.com/problems/nim-game/#/description\">292-Nim Game</a></h3><h4 id=\"方法一：只要数字能被-4-整除就赢不了\"><a href=\"#方法一：只要数字能被-4-整除就赢不了\" class=\"headerlink\" title=\"方法一：只要数字能被 4 整除就赢不了\"></a>方法一：只要数字能被 4 整除就赢不了</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> canWinNim = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !!(n%<span class=\"number\">4</span>)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"485-Max-Consecutive-Ones\"><a href=\"#485-Max-Consecutive-Ones\" class=\"headerlink\" title=\"485-Max Consecutive Ones\"></a><a href=\"https://leetcode.com/problems/max-consecutive-ones/#/description\">485-Max Consecutive Ones</a></h3><h4 id=\"方法一：看到-0-时就将-max-置为-0，否则-max-加-1\"><a href=\"#方法一：看到-0-时就将-max-置为-0，否则-max-加-1\" class=\"headerlink\" title=\"方法一：看到 0 时就将 max 置为 0，否则 max 加 1\"></a>方法一：看到 0 时就将 max 置为 0，否则 max 加 1</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findMaxConsecutiveOnes = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i&lt;nums.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        result = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(result,num =(nums[i]==<span class=\"number\">0</span>) ? <span class=\"number\">0</span>: num+<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"136-Single-Number\"><a href=\"#136-Single-Number\" class=\"headerlink\" title=\"136-Single Number\"></a><a href=\"https://leetcode.com/problems/single-number/#/description\">136-Single Number</a></h3><h4 id=\"方法一：利用位运算中的异或（异或运算可交换位置，且相同数字异或结果为-0）\"><a href=\"#方法一：利用位运算中的异或（异或运算可交换位置，且相同数字异或结果为-0）\" class=\"headerlink\" title=\"方法一：利用位运算中的异或（异或运算可交换位置，且相同数字异或结果为 0）\"></a>方法一：利用位运算中的异或（异或运算可交换位置，且相同数字异或结果为 0）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> singleNumber = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=nums.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        result ^= nums[i]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"448-Find-All-Numbers-Disappeared-in-an-Array\"><a href=\"#448-Find-All-Numbers-Disappeared-in-an-Array\" class=\"headerlink\" title=\"448-Find All Numbers Disappeared in an Array\"></a><a href=\"https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/#/description\">448-Find All Numbers Disappeared in an Array</a></h3><h4 id=\"方法一：利用哈希表将看到的数字变为负数\"><a href=\"#方法一：利用哈希表将看到的数字变为负数\" class=\"headerlink\" title=\"方法一：利用哈希表将看到的数字变为负数\"></a>方法一：利用哈希表将看到的数字变为负数</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findDisappearedNumbers = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> n= nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> j = <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(nums[i]) -<span class=\"number\">1</span>;</span><br><span class=\"line\">        nums[j] = -<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(nums[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> k=<span class=\"number\">0</span>; k&lt;n;k++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[k]&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            result.<span class=\"title function_\">push</span>(k+<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result; </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"520-Detect-Capital\"><a href=\"#520-Detect-Capital\" class=\"headerlink\" title=\"520-Detect Capital\"></a><a href=\"https://leetcode.com/problems/detect-capital/#/description\">520-Detect Capital</a></h3><h4 id=\"方法一：巧用-indexOf\"><a href=\"#方法一：巧用-indexOf\" class=\"headerlink\" title=\"方法一：巧用 indexOf\"></a>方法一：巧用 indexOf</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">word</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> detectCapitalUse = <span class=\"keyword\">function</span>(<span class=\"params\">word</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !(word.<span class=\"title function_\">indexOf</span>(word.<span class=\"title function_\">toUpperCase</span>()) &amp;&amp; word.<span class=\"title function_\">indexOf</span>(word.<span class=\"title function_\">toLowerCase</span>()) &amp;&amp; word.<span class=\"title function_\">indexOf</span>(word.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>,<span class=\"number\">1</span>).<span class=\"title function_\">toUpperCase</span>() + word.<span class=\"title function_\">substring</span>(<span class=\"number\">1</span>).<span class=\"title function_\">toLowerCase</span>()))</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：正则\"><a href=\"#方法二：正则\" class=\"headerlink\" title=\"方法二：正则\"></a>方法二：正则</h4><p>暂无</p>\n<h3 id=\"104-Maximum-Depth-of-Binary-Tree\"><a href=\"#104-Maximum-Depth-of-Binary-Tree\" class=\"headerlink\" title=\"104-Maximum Depth of Binary Tree\"></a><a href=\"https://leetcode.com/problems/maximum-depth-of-binary-tree/#/description\">104-Maximum Depth of Binary Tree</a></h3><h4 id=\"方法一：递归，其实很容易发现规律\"><a href=\"#方法一：递归，其实很容易发现规律\" class=\"headerlink\" title=\"方法一：递归，其实很容易发现规律\"></a>方法一：递归，其实很容易发现规律</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">TreeNode</span>&#125; <span class=\"variable\">root</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxDepth = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> root === <span class=\"literal\">null</span> ? <span class=\"number\">0</span> : <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(<span class=\"title function_\">maxDepth</span>(root.<span class=\"property\">left</span>), <span class=\"title function_\">maxDepth</span>(root.<span class=\"property\">right</span>)) + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"389-Find-the-Difference\"><a href=\"#389-Find-the-Difference\" class=\"headerlink\" title=\"389-Find the Difference\"></a><a href=\"https://leetcode.com/problems/find-the-difference/#/description\">389-Find the Difference</a></h3><h4 id=\"方法一：依然是-replace\"><a href=\"#方法一：依然是-replace\" class=\"headerlink\" title=\"方法一：依然是 replace()\"></a>方法一：依然是 replace()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">t</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">character</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findTheDifference = <span class=\"keyword\">function</span>(<span class=\"params\">s, t</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=s.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        t = t.<span class=\"title function_\">replace</span>(s[i],<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> t;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：位运算\"><a href=\"#方法二：位运算\" class=\"headerlink\" title=\"方法二：位运算\"></a>方法二：位运算</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">t</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">character</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findTheDifference = <span class=\"keyword\">function</span>(<span class=\"params\">s, t</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> n = t.<span class=\"property\">length</span>,c = t.<span class=\"title function_\">charCodeAt</span>(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">\t\tc ^= s.<span class=\"title function_\">charCodeAt</span>(i);</span><br><span class=\"line\">\t\tc ^= t.<span class=\"title function_\">charCodeAt</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"title class_\">String</span>.<span class=\"title function_\">fromCharCode</span>(c);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"371-Sum-of-Two-Integers\"><a href=\"#371-Sum-of-Two-Integers\" class=\"headerlink\" title=\"371-Sum of Two Integers\"></a><a href=\"https://leetcode.com/problems/sum-of-two-integers/#/description\">371-Sum of Two Integers</a></h3><h4 id=\"方法一：位运算\"><a href=\"#方法一：位运算\" class=\"headerlink\" title=\"方法一：位运算\"></a>方法一：位运算</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">a</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">b</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> getSum = <span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b==<span class=\"number\">0</span>? <span class=\"attr\">a</span>:<span class=\"title function_\">getSum</span>(a^b, (a&amp;b)&lt;&lt;<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"226-Invert-Binary-Tree\"><a href=\"#226-Invert-Binary-Tree\" class=\"headerlink\" title=\"226-Invert Binary Tree\"></a><a href=\"https://leetcode.com/problems/invert-binary-tree/#/description\">226-Invert Binary Tree</a></h3><h4 id=\"方法一：二叉树基本上都是递归，只不过这次规律很容易发现\"><a href=\"#方法一：二叉树基本上都是递归，只不过这次规律很容易发现\" class=\"headerlink\" title=\"方法一：二叉树基本上都是递归，只不过这次规律很容易发现\"></a>方法一：二叉树基本上都是递归，只不过这次规律很容易发现</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">TreeNode</span>&#125; <span class=\"variable\">root</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">TreeNode</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> invertTree = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!root)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> left = root.<span class=\"property\">left</span>,</span><br><span class=\"line\">        right = root.<span class=\"property\">right</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">    root.<span class=\"property\">left</span> = <span class=\"title function_\">invertTree</span>(right);</span><br><span class=\"line\">    root.<span class=\"property\">right</span> = <span class=\"title function_\">invertTree</span>(left);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"492-Construct-the-Rectangle\"><a href=\"#492-Construct-the-Rectangle\" class=\"headerlink\" title=\"492-Construct the Rectangle\"></a><a href=\"https://leetcode.com/problems/construct-the-rectangle\">492-Construct the Rectangle</a></h3><h4 id=\"方法一：越和正方形相似越好，所以需要先求根值确定大致范围\"><a href=\"#方法一：越和正方形相似越好，所以需要先求根值确定大致范围\" class=\"headerlink\" title=\"方法一：越和正方形相似越好，所以需要先求根值确定大致范围\"></a>方法一：越和正方形相似越好，所以需要先求根值确定大致范围</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">area</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> constructRectangle = <span class=\"keyword\">function</span>(<span class=\"params\">area</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> w = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">sqrt</span>(area));</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (area % w !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t    w--;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> [area/w,w];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"283-Move-Zeroes\"><a href=\"#283-Move-Zeroes\" class=\"headerlink\" title=\"283-Move Zeroes\"></a><a href=\"https://leetcode.com/problems/move-zeroes\">283-Move Zeroes</a></h3><h4 id=\"方法一：碰到-0-就先去掉再-push-进数组\"><a href=\"#方法一：碰到-0-就先去掉再-push-进数组\" class=\"headerlink\" title=\"方法一：碰到 0 就先去掉再 push 进数组\"></a>方法一：碰到 0 就先去掉再 push 进数组</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify nums in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> moveZeroes = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,m=<span class=\"number\">0</span>,n=nums.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[m] === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            nums.<span class=\"title function_\">splice</span>(m,<span class=\"number\">1</span>);</span><br><span class=\"line\">            nums.<span class=\"title function_\">push</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            m++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：类似于冒泡\"><a href=\"#方法二：类似于冒泡\" class=\"headerlink\" title=\"方法二：类似于冒泡\"></a>方法二：类似于冒泡</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify nums in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> moveZeroes = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[i] !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> temp = nums[j];</span><br><span class=\"line\">            nums[j] = nums[i];</span><br><span class=\"line\">            nums[i] = temp;</span><br><span class=\"line\">            j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法三：用一个变量记录当前多少个元素不为-0\"><a href=\"#方法三：用一个变量记录当前多少个元素不为-0\" class=\"headerlink\" title=\"方法三：用一个变量记录当前多少个元素不为 0\"></a>方法三：用一个变量记录当前多少个元素不为 0</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify nums in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> moveZeroes = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums === <span class=\"literal\">null</span> || nums.<span class=\"property\">length</span> === <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;        </span><br><span class=\"line\">    <span class=\"keyword\">var</span> insertPos = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;nums.<span class=\"property\">length</span>;i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[i] !== <span class=\"number\">0</span>) nums[insertPos++] = nums[i];</span><br><span class=\"line\">    &#125;        </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (insertPos &lt; nums.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        nums[insertPos++] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"530-Minimum-Absolute-Difference-in-BST\"><a href=\"#530-Minimum-Absolute-Difference-in-BST\" class=\"headerlink\" title=\"530-Minimum Absolute Difference in BST\"></a><a href=\"https://leetcode.com/problems/minimum-absolute-difference-in-bst\">530-Minimum Absolute Difference in BST</a></h3><p>暂无</p>\n<h3 id=\"506-Relative-Ranks\"><a href=\"#506-Relative-Ranks\" class=\"headerlink\" title=\"506-Relative Ranks\"></a><a href=\"https://leetcode.com/problems/relative-ranks\">506-Relative Ranks</a></h3><p>暂无</p>\n<h3 id=\"167-Two-Sum-II-Input-array-is-sorted\"><a href=\"#167-Two-Sum-II-Input-array-is-sorted\" class=\"headerlink\" title=\"167-Two Sum II - Input array is sorted\"></a><a href=\"https://leetcode.com/problems/two-sum-ii-input-array-is-sorted\">167-Two Sum II - Input array is sorted</a></h3><h4 id=\"方法一：两个指针\"><a href=\"#方法一：两个指针\" class=\"headerlink\" title=\"方法一：两个指针\"></a>方法一：两个指针</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">numbers</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"keyword\">function</span>(<span class=\"params\">numbers, target</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (numbers === <span class=\"literal\">null</span> || numbers.<span class=\"property\">length</span> &lt; <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> left = <span class=\"number\">0</span>, right = numbers.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (left &lt; right) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> v = numbers[left] + numbers[right];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (v == target) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>[left+<span class=\"number\">1</span>,right+<span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (v &gt; target) &#123;</span><br><span class=\"line\">            right --;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            left ++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：二分查找\"><a href=\"#方法二：二分查找\" class=\"headerlink\" title=\"方法二：二分查找\"></a>方法二：二分查找</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">numbers</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">target</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"keyword\">function</span>(<span class=\"params\">numbers, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numbers.<span class=\"property\">length</span>&lt;<span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;numbers.<span class=\"property\">length</span>-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> start=i+<span class=\"number\">1</span>, end=numbers.<span class=\"property\">length</span>-<span class=\"number\">1</span>, gap=target-numbers[i];</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(start &lt;= end) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> m = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(start+(end-start)/<span class=\"number\">2</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(numbers[m] == gap) <span class=\"keyword\">return</span> [i+<span class=\"number\">1</span>,m+<span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(numbers[m] &gt; gap) end=m-<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> start=m+<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"455-Assign-Cookies\"><a href=\"#455-Assign-Cookies\" class=\"headerlink\" title=\"455-Assign Cookies\"></a><a href=\"https://leetcode.com/problems/assign-cookies\">455-Assign Cookies</a></h3><h4 id=\"方法一：Just-assign-the-cookies-starting-from-the-child-with-less-greediness-to-maximize-the-number-of-happy-children\"><a href=\"#方法一：Just-assign-the-cookies-starting-from-the-child-with-less-greediness-to-maximize-the-number-of-happy-children\" class=\"headerlink\" title=\"方法一：Just assign the cookies starting from the child with less greediness to maximize the number of happy children .\"></a>方法一：Just assign the cookies starting from the child with less greediness to maximize the number of happy children .</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">g</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> findContentChildren = <span class=\"keyword\">function</span>(<span class=\"params\">g, s</span>) &#123;</span><br><span class=\"line\">    g.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b&#125;);</span><br><span class=\"line\">    s.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,m=g.<span class=\"property\">length</span>,n=s.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;n&amp;&amp;i&lt;m;j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(g[i]&lt;=s[j])&#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"453-Minimum-Moves-to-Equal-Array-Elements\"><a href=\"#453-Minimum-Moves-to-Equal-Array-Elements\" class=\"headerlink\" title=\"453-Minimum Moves to Equal Array Elements\"></a><a href=\"https://leetcode.com/problems/minimum-moves-to-equal-array-elements\">453-Minimum Moves to Equal Array Elements</a></h3><h4 id=\"方法一：每次让-n-1-个元素-1，其实可以理解为每次让-1-个元素减-1，知道都等于数组中的最小元素为止\"><a href=\"#方法一：每次让-n-1-个元素-1，其实可以理解为每次让-1-个元素减-1，知道都等于数组中的最小元素为止\" class=\"headerlink\" title=\"方法一：每次让 n-1 个元素 +1，其实可以理解为每次让 1 个元素减 1，知道都等于数组中的最小元素为止\"></a>方法一：每次让 n-1 个元素 +1，其实可以理解为每次让 1 个元素减 1，知道都等于数组中的最小元素为止</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> minMoves = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> min = <span class=\"title class_\">Math</span>.<span class=\"property\">min</span>.<span class=\"title function_\">apply</span>(<span class=\"literal\">null</span>, nums),n=nums.<span class=\"property\">length</span>,result=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        result += nums[i] -min;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"383-Ransom-Note\"><a href=\"#383-Ransom-Note\" class=\"headerlink\" title=\"383-Ransom Note\"></a><a href=\"https://leetcode.com/problems/ransom-note\">383-Ransom Note</a></h3><h4 id=\"方法一：用一个数组作为字典表（其实应该是哈希表，在-JS-中就是数组）\"><a href=\"#方法一：用一个数组作为字典表（其实应该是哈希表，在-JS-中就是数组）\" class=\"headerlink\" title=\"方法一：用一个数组作为字典表（其实应该是哈希表，在 JS 中就是数组）\"></a>方法一：用一个数组作为字典表（其实应该是哈希表，在 JS 中就是数组）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">ransomNote</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">magazine</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> canConstruct = <span class=\"keyword\">function</span>(<span class=\"params\">ransomNote, magazine</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> n = ransomNote.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> s = ransomNote[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(magazine.<span class=\"title function_\">indexOf</span>(s) == -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            magazine = magazine.<span class=\"title function_\">replace</span>(s,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !!(magazine.<span class=\"property\">length</span> + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"404-Sum-of-Left-Leaves\"><a href=\"#404-Sum-of-Left-Leaves\" class=\"headerlink\" title=\"404-Sum of Left Leaves\"></a><a href=\"https://leetcode.com/problems/sum-of-left-leaves\">404-Sum of Left Leaves</a></h3><h4 id=\"方法一：将叶子节点区分出来就可以了\"><a href=\"#方法一：将叶子节点区分出来就可以了\" class=\"headerlink\" title=\"方法一：将叶子节点区分出来就可以了\"></a>方法一：将叶子节点区分出来就可以了</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">TreeNode</span>&#125; <span class=\"variable\">root</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sumOfLeftLeaves = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root === <span class=\"literal\">null</span>) &#123;<span class=\"keyword\">return</span> <span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(root.<span class=\"property\">left</span> !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root.<span class=\"property\">left</span>.<span class=\"property\">left</span> === <span class=\"literal\">null</span> &amp;&amp; root.<span class=\"property\">left</span>.<span class=\"property\">right</span> === <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            ans += root.<span class=\"property\">left</span>.<span class=\"property\">val</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            ans += <span class=\"title function_\">sumOfLeftLeaves</span>(root.<span class=\"property\">left</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ans += <span class=\"title function_\">sumOfLeftLeaves</span>(root.<span class=\"property\">right</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"349-Intersection-of-Two-Arrays\"><a href=\"#349-Intersection-of-Two-Arrays\" class=\"headerlink\" title=\"349-Intersection of Two Arrays\"></a><a href=\"https://leetcode.com/problems/intersection-of-two-arrays\">349-Intersection of Two Arrays</a></h3><h4 id=\"方法一：两个指针进行遍历（哈希表，复杂度为-O-n-）\"><a href=\"#方法一：两个指针进行遍历（哈希表，复杂度为-O-n-）\" class=\"headerlink\" title=\"方法一：两个指针进行遍历（哈希表，复杂度为 O(n)）\"></a>方法一：两个指针进行遍历（哈希表，复杂度为 O(n)）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> intersection = <span class=\"keyword\">function</span>(<span class=\"params\">nums1, nums2</span>) &#123;</span><br><span class=\"line\">        nums1.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b&#125;);</span><br><span class=\"line\">        nums2.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b&#125;);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,</span><br><span class=\"line\">            j = <span class=\"number\">0</span>,</span><br><span class=\"line\">            result = [];</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt; nums1.<span class=\"property\">length</span> &amp;&amp; j &lt; nums2.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums1[i] &lt; nums2[j]) &#123;</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums1[i] &gt; nums2[j]) &#123;</span><br><span class=\"line\">                j++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(result.<span class=\"title function_\">indexOf</span>(nums1[i]) == -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                    result.<span class=\"title function_\">push</span>(nums1[i]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">                j++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b&#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：二分查找（复杂度为-O-nlgn-）\"><a href=\"#方法二：二分查找（复杂度为-O-nlgn-）\" class=\"headerlink\" title=\"方法二：二分查找（复杂度为 O(nlgn)）\"></a>方法二：二分查找（复杂度为 O(nlgn)）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> intersection = <span class=\"keyword\">function</span>(<span class=\"params\">nums1, nums2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = [];</span><br><span class=\"line\">    nums2.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b;&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;nums1.<span class=\"property\">length</span>;i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">binarySearch</span>(nums2, nums1[i]) &amp;&amp; result.<span class=\"title function_\">indexOf</span>(nums1[i]) == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            result.<span class=\"title function_\">push</span>(nums1[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> binarySearch = <span class=\"keyword\">function</span>(<span class=\"params\">nums,target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> low = <span class=\"number\">0</span>,high = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (low &lt;= high) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(low + (high - low) / <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[mid] == target) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[mid] &gt; target) &#123;</span><br><span class=\"line\">            high = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            low = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"122-Best-Time-to-Buy-and-Sell-Stock-II\"><a href=\"#122-Best-Time-to-Buy-and-Sell-Stock-II\" class=\"headerlink\" title=\"122-Best Time to Buy and Sell Stock II\"></a><a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii\">122-Best Time to Buy and Sell Stock II</a></h3><h4 id=\"方法一：只要第二天价格比第一天价格高，就卖掉\"><a href=\"#方法一：只要第二天价格比第一天价格高，就卖掉\" class=\"headerlink\" title=\"方法一：只要第二天价格比第一天价格高，就卖掉\"></a>方法一：只要第二天价格比第一天价格高，就卖掉</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">prices</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span>(<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result=<span class=\"number\">0</span>,n=prices.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;n-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(prices[i]&lt;prices[i+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            result += prices[i+<span class=\"number\">1</span>] - prices[i];</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"387-First-Unique-Character-in-a-String\"><a href=\"#387-First-Unique-Character-in-a-String\" class=\"headerlink\" title=\"387-First Unique Character in a String\"></a><a href=\"https://leetcode.com/problems/first-unique-character-in-a-string\">387-First Unique Character in a String</a></h3><h4 id=\"方法一：用一个数组记录字符出现的位置及次数（哈希表）\"><a href=\"#方法一：用一个数组记录字符出现的位置及次数（哈希表）\" class=\"headerlink\" title=\"方法一：用一个数组记录字符出现的位置及次数（哈希表）\"></a>方法一：用一个数组记录字符出现的位置及次数（哈希表）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> firstUniqChar = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> freq = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">26</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"string\">&#x27;a&#x27;</span>.<span class=\"title function_\">charCodeAt</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i ++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (freq [s[i].<span class=\"title function_\">charCodeAt</span>() - a] === <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">            freq [s[i].<span class=\"title function_\">charCodeAt</span>() - a] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            freq [s[i].<span class=\"title function_\">charCodeAt</span>() - a]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> k = <span class=\"number\">0</span>; k &lt; s.<span class=\"property\">length</span>; k ++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(freq [s[k].<span class=\"title function_\">charCodeAt</span>() - a] == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> k;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"171-Excel-Sheet-Column-Number\"><a href=\"#171-Excel-Sheet-Column-Number\" class=\"headerlink\" title=\"171-Excel Sheet Column Number\"></a><a href=\"https://leetcode.com/problems/excel-sheet-column-number\">171-Excel Sheet Column Number</a></h3><h4 id=\"方法一：很容易发现规律，类似二进制转换成-10-进制\"><a href=\"#方法一：很容易发现规律，类似二进制转换成-10-进制\" class=\"headerlink\" title=\"方法一：很容易发现规律，类似二进制转换成 10 进制\"></a>方法一：很容易发现规律，类似二进制转换成 10 进制</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> titleToNumber = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=s.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        result += <span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">26</span>,n-i-<span class=\"number\">1</span>)*(s[i].<span class=\"title function_\">charCodeAt</span>() - <span class=\"number\">64</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"504-Base-7\"><a href=\"#504-Base-7\" class=\"headerlink\" title=\"504-Base 7\"></a><a href=\"https://leetcode.com/problems/base-7\">504-Base 7</a></h3><h4 id=\"方法一：递归取余，很经典的一道题和解法，用的比较多\"><a href=\"#方法一：递归取余，很经典的一道题和解法，用的比较多\" class=\"headerlink\" title=\"方法一：递归取余，很经典的一道题和解法，用的比较多\"></a>方法一：递归取余，很经典的一道题和解法，用的比较多</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">num</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> convertToBase7 = <span class=\"keyword\">function</span>(<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num&gt;=<span class=\"number\">0</span> ? <span class=\"string\">&quot;&quot;</span> + (num&gt;=<span class=\"number\">7</span> ? <span class=\"title function_\">convertToBase7</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(num/<span class=\"number\">7</span>)) + <span class=\"string\">&quot;&quot;</span> + num%<span class=\"number\">7</span> : num) : <span class=\"string\">&#x27;-&#x27;</span>+<span class=\"title function_\">convertToBase7</span>(-num);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"237-Delete-Node-in-a-Linked-List\"><a href=\"#237-Delete-Node-in-a-Linked-List\" class=\"headerlink\" title=\"237-Delete Node in a Linked List\"></a><a href=\"https://leetcode.com/problems/delete-node-in-a-linked-list\">237-Delete Node in a Linked List</a></h3><h4 id=\"方法一：很智障的一道题\"><a href=\"#方法一：很智障的一道题\" class=\"headerlink\" title=\"方法一：很智障的一道题\"></a>方法一：很智障的一道题</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">ListNode</span>&#125; <span class=\"variable\">node</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">void</span>&#125; Do not return anything, modify node in-place instead.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> deleteNode = <span class=\"keyword\">function</span>(<span class=\"params\">node</span>) &#123;</span><br><span class=\"line\">    node.<span class=\"property\">val</span> = node.<span class=\"property\">next</span>.<span class=\"property\">val</span>;</span><br><span class=\"line\">    node.<span class=\"property\">next</span> = node.<span class=\"property\">next</span>.<span class=\"property\">next</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"100-Same-Tree\"><a href=\"#100-Same-Tree\" class=\"headerlink\" title=\"100-Same Tree\"></a><a href=\"https://leetcode.com/problems/same-tree\">100-Same Tree</a></h3><h4 id=\"方法一：递归，相等的依据除了值相等之外还有不能为-null\"><a href=\"#方法一：递归，相等的依据除了值相等之外还有不能为-null\" class=\"headerlink\" title=\"方法一：递归，相等的依据除了值相等之外还有不能为 null\"></a>方法一：递归，相等的依据除了值相等之外还有不能为 null</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for a binary tree node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function TreeNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.left = this.right = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">TreeNode</span>&#125; <span class=\"variable\">p</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">TreeNode</span>&#125; <span class=\"variable\">q</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> isSameTree = <span class=\"keyword\">function</span>(<span class=\"params\">p, q</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (p === <span class=\"literal\">null</span> &amp;&amp; q === <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p !== <span class=\"literal\">null</span> &amp;&amp; q !== <span class=\"literal\">null</span> &amp;&amp; p.<span class=\"property\">val</span> == q.<span class=\"property\">val</span> &amp;&amp; <span class=\"title function_\">isSameTree</span>(p.<span class=\"property\">left</span>, q.<span class=\"property\">left</span>) &amp;&amp; <span class=\"title function_\">isSameTree</span>(p.<span class=\"property\">right</span>, q.<span class=\"property\">right</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"169-Maiority-Element\"><a href=\"#169-Maiority-Element\" class=\"headerlink\" title=\"169-Maiority Element\"></a><a href=\"https://leetcode.com/problems/majority-element\">169-Maiority Element</a></h3><h4 id=\"方法一：每找出两个不同的-element，就成对删除即-count–，最终剩下的一定就是所求的（O-n-）\"><a href=\"#方法一：每找出两个不同的-element，就成对删除即-count–，最终剩下的一定就是所求的（O-n-）\" class=\"headerlink\" title=\"方法一：每找出两个不同的 element，就成对删除即 count–，最终剩下的一定就是所求的（O(n)）\"></a>方法一：每找出两个不同的 element，就成对删除即 count–，最终剩下的一定就是所求的（O(n)）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> majorityElement = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> major=nums[<span class=\"number\">0</span>], count = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>,n=nums.<span class=\"property\">length</span>; i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(count===<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                count++;</span><br><span class=\"line\">                major=nums[i];</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(major==nums[i])&#123;</span><br><span class=\"line\">                count++;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> count--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> major;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：哈希表\"><a href=\"#方法二：哈希表\" class=\"headerlink\" title=\"方法二：哈希表\"></a>方法二：哈希表</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> majorityElement = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> counts = [],n = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(counts[nums[i]] === <span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">            counts[nums[i]] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(counts[nums[i]] + <span class=\"number\">1</span>&gt; <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(n / <span class=\"number\">2</span>)) &#123; <span class=\"keyword\">return</span> nums[i];&#125;</span><br><span class=\"line\">            counts[nums[i]]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法三：Since-the-majority-element-appears-more-than-n-2-times-the-n-2-th-element-in-the-sorted-nums-must-be-the-majority-element\"><a href=\"#方法三：Since-the-majority-element-appears-more-than-n-2-times-the-n-2-th-element-in-the-sorted-nums-must-be-the-majority-element\" class=\"headerlink\" title=\"方法三：Since the majority element appears more than n / 2 times, the n / 2-th element in the sorted nums must be the majority element.\"></a>方法三：Since the majority element appears more than <code>n / 2</code> times, the <code>n / 2</code>-th element in the sorted <code>nums</code> must be the majority element.</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> majorityElement = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    nums.<span class=\"title function_\">sort</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(nums.<span class=\"property\">length</span>/<span class=\"number\">2</span>)];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法四：随机挑选一个元素，然后看它是否是多数元素\"><a href=\"#方法四：随机挑选一个元素，然后看它是否是多数元素\" class=\"headerlink\" title=\"方法四：随机挑选一个元素，然后看它是否是多数元素\"></a>方法四：随机挑选一个元素，然后看它是否是多数元素</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> majorityElement = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> n = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> idx = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>()*n),candidate = nums[idx],counts = <span class=\"number\">0</span>; </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[i] == candidate) &#123;counts++;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (counts &gt; n / <span class=\"number\">2</span>) <span class=\"keyword\">return</span> candidate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法五：摩尔投票算法\"><a href=\"#方法五：摩尔投票算法\" class=\"headerlink\" title=\"方法五：摩尔投票算法\"></a>方法五：<a href=\"https://www.zhihu.com/question/44213758?sort=created\">摩尔投票算法</a></h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> majorityElement = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> major, counts = <span class=\"number\">0</span>, n = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!counts) &#123;</span><br><span class=\"line\">            major = nums[i];</span><br><span class=\"line\">            counts = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> counts += (nums[i] == major) ? <span class=\"number\">1</span> : -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> major;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法六：位运算，The-key-lies-in-how-to-count-the-number-of-1‘s-on-a-specific-bit-Specifically-you-need-a-mask-with-a-1-on-the-i-the-bit-and-0-otherwise-to-get-the-i-th-bit-of-each-element-in-nums\"><a href=\"#方法六：位运算，The-key-lies-in-how-to-count-the-number-of-1‘s-on-a-specific-bit-Specifically-you-need-a-mask-with-a-1-on-the-i-the-bit-and-0-otherwise-to-get-the-i-th-bit-of-each-element-in-nums\" class=\"headerlink\" title=\"方法六：位运算，The key lies in how to count the number of 1‘s on a specific bit. Specifically, you need a mask with a 1 on the i-the bit and 0 otherwise to get the i-th bit of each element in nums\"></a>方法六：位运算，The key lies in how to count the number of <code>1</code>‘s on a specific bit. Specifically, you need a <code>mask</code> with a <code>1</code> on the <code>i</code>-the bit and <code>0</code> otherwise to get the <code>i</code>-th bit of each element in <code>nums</code></h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> majorityElement = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> major = <span class=\"number\">0</span>, n = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, mask = <span class=\"number\">1</span>; i &lt; <span class=\"number\">32</span>; i++, mask &lt;&lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> bitCounts = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[j] &amp; mask) bitCounts++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (bitCounts &gt; n / <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                major |= mask;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> major;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"242-Valid-Anagram\"><a href=\"#242-Valid-Anagram\" class=\"headerlink\" title=\"242-Valid Anagram\"></a><a href=\"https://leetcode.com/problems/valid-anagram\">242-Valid Anagram</a></h3><h4 id=\"方法一：用一个数组作为桶，s-中的字符用来加-1，t-中的字符用来减-1；如果最后桶中没有元素就返回-true\"><a href=\"#方法一：用一个数组作为桶，s-中的字符用来加-1，t-中的字符用来减-1；如果最后桶中没有元素就返回-true\" class=\"headerlink\" title=\"方法一：用一个数组作为桶，s 中的字符用来加 1，t 中的字符用来减 1；如果最后桶中没有元素就返回 true\"></a>方法一：用一个数组作为桶，s 中的字符用来加 1，t 中的字符用来减 1；如果最后桶中没有元素就返回 true</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">t</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> isAnagram = <span class=\"keyword\">function</span>(<span class=\"params\">s, t</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s===<span class=\"string\">&quot;&quot;</span>&amp;&amp;t===<span class=\"string\">&quot;&quot;</span>)&#123;<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> alphabet = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">26</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;alphabet.<span class=\"property\">length</span>;m++)&#123;</span><br><span class=\"line\">            alphabet[m] =<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            alphabet[s[i].<span class=\"title function_\">charCodeAt</span>() - <span class=\"number\">97</span>]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; t.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            alphabet[t[j].<span class=\"title function_\">charCodeAt</span>() - <span class=\"number\">97</span>]--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> k=<span class=\"number\">0</span>;k&lt;alphabet.<span class=\"property\">length</span>;k++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (alphabet[k]!== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"409-Longest-Palindrome\"><a href=\"#409-Longest-Palindrome\" class=\"headerlink\" title=\"409-Longest Palindrome\"></a><a href=\"https://leetcode.com/problems/longest-palindrome\">409-Longest Palindrome</a></h3><h4 id=\"方法一：将数组中的元素分为偶数和奇数两种情况，因为回文字符串的字符个数有这两种情况\"><a href=\"#方法一：将数组中的元素分为偶数和奇数两种情况，因为回文字符串的字符个数有这两种情况\" class=\"headerlink\" title=\"方法一：将数组中的元素分为偶数和奇数两种情况，因为回文字符串的字符个数有这两种情况\"></a>方法一：将数组中的元素分为偶数和奇数两种情况，因为回文字符串的字符个数有这两种情况</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longestPalindrome = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> even = <span class=\"number\">0</span>,odd = <span class=\"number\">0</span>,arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=s.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> c = s[i].<span class=\"title function_\">charCodeAt</span>() - <span class=\"number\">65</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[c] === <span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">            arr[c] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            arr[c]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[c]%<span class=\"number\">2</span> === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            even += <span class=\"number\">2</span>;</span><br><span class=\"line\">            odd--;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            odd++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> even + (odd===<span class=\"number\">0</span>? <span class=\"number\">0</span> :<span class=\"number\">1</span>); </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"541-Reverse-String-II\"><a href=\"#541-Reverse-String-II\" class=\"headerlink\" title=\"541-Reverse String II\"></a><a href=\"https://leetcode.com/problems/reverse-string-ii\">541-Reverse String II</a></h3><p>暂无</p>\n<h3 id=\"401-Binary-Watch\"><a href=\"#401-Binary-Watch\" class=\"headerlink\" title=\"401-Binary Watch\"></a><a href=\"https://leetcode.com/problems/binary-watch\">401-Binary Watch</a></h3><h4 id=\"方法一：从结果出发，满足条件时-push-进数组\"><a href=\"#方法一：从结果出发，满足条件时-push-进数组\" class=\"headerlink\" title=\"方法一：从结果出发，满足条件时 push 进数组\"></a>方法一：从结果出发，满足条件时 push 进数组</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">num</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> readBinaryWatch = <span class=\"keyword\">function</span>(<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> h=<span class=\"number\">0</span>;h&lt;<span class=\"number\">12</span>;h++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;<span class=\"number\">60</span>;m++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((h.<span class=\"title function_\">toString</span>(<span class=\"number\">2</span>) + m.<span class=\"title function_\">toString</span>(<span class=\"number\">2</span>)).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/0/g</span>,<span class=\"string\">&quot;&quot;</span>).<span class=\"property\">length</span> == num)&#123;</span><br><span class=\"line\">                m = m&gt;<span class=\"number\">9</span> ? m : <span class=\"string\">&quot;0&quot;</span> + m;</span><br><span class=\"line\">                item = h + <span class=\"string\">&quot;:&quot;</span> + m;</span><br><span class=\"line\">                result.<span class=\"title function_\">push</span>(item);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"217-Contains-Duplicate\"><a href=\"#217-Contains-Duplicate\" class=\"headerlink\" title=\"217-Contains Duplicate\"></a><a href=\"https://leetcode.com/problems/contains-duplicate\">217-Contains Duplicate</a></h3><h4 id=\"方法一：哈希表\"><a href=\"#方法一：哈希表\" class=\"headerlink\" title=\"方法一：哈希表\"></a>方法一：哈希表</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> containsDuplicate = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(nums.<span class=\"property\">length</span>===<span class=\"number\">0</span>)&#123;<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> opt = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=nums.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(opt[nums[i]])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            opt[nums[i]] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：先将数组排序，然后只需要比较相邻元素\"><a href=\"#方法二：先将数组排序，然后只需要比较相邻元素\" class=\"headerlink\" title=\"方法二：先将数组排序，然后只需要比较相邻元素\"></a>方法二：先将数组排序，然后只需要比较相邻元素</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">boolean</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> containsDuplicate = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    nums.<span class=\"title function_\">sort</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> ind = <span class=\"number\">1</span>; ind &lt; nums.<span class=\"property\">length</span>; ind++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[ind] == nums[ind - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"13-Roman-to-Integer\"><a href=\"#13-Roman-to-Integer\" class=\"headerlink\" title=\"13-Roman to Integer\"></a><a href=\"https://leetcode.com/problems/roman-to-integer\">13-Roman to Integer</a></h3><h4 id=\"方法一：知道罗马数字的规则之后就好写了\"><a href=\"#方法一：知道罗马数字的规则之后就好写了\" class=\"headerlink\" title=\"方法一：知道罗马数字的规则之后就好写了\"></a>方法一：知道罗马数字的规则之后就好写了</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> romanToInt = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> opt = &#123;<span class=\"string\">&#x27;M&#x27;</span>: <span class=\"number\">1000</span>,<span class=\"string\">&#x27;D&#x27;</span>: <span class=\"number\">500</span> ,<span class=\"string\">&#x27;C&#x27;</span>: <span class=\"number\">100</span>,<span class=\"string\">&#x27;L&#x27;</span>: <span class=\"number\">50</span>,<span class=\"string\">&#x27;X&#x27;</span>: <span class=\"number\">10</span>,<span class=\"string\">&#x27;V&#x27;</span>: <span class=\"number\">5</span>,<span class=\"string\">&#x27;I&#x27;</span>: <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        z = <span class=\"number\">0</span>,</span><br><span class=\"line\">        n=s.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;n-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(opt[s[i]] &lt; opt[s[i+<span class=\"number\">1</span>]])&#123;</span><br><span class=\"line\">            z -= opt[s[i]];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            z += opt[s[i]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> z + opt[s[n-<span class=\"number\">1</span>]];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"206-Reverse-Linked-List\"><a href=\"#206-Reverse-Linked-List\" class=\"headerlink\" title=\"206-Reverse Linked List\"></a><a href=\"https://leetcode.com/problems/reverse-linked-list\">206-Reverse Linked List</a></h3><h4 id=\"方法一：反转的条件就是-head-next-next-head-和-head-next-null\"><a href=\"#方法一：反转的条件就是-head-next-next-head-和-head-next-null\" class=\"headerlink\" title=\"方法一：反转的条件就是 head.next.next = head 和 head.next = null\"></a>方法一：反转的条件就是 head.next.next = head 和 head.next = null</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"> * function ListNode(val) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.val = val;</span></span><br><span class=\"line\"><span class=\"comment\"> *     this.next = null;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">ListNode</span>&#125; <span class=\"variable\">head</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">ListNode</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reverseList = <span class=\"keyword\">function</span>(<span class=\"params\">head</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!head || !(head.<span class=\"property\">next</span>)) &#123;<span class=\"keyword\">return</span> head;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> node = <span class=\"title function_\">reverseList</span>(head.<span class=\"property\">next</span>);</span><br><span class=\"line\">    head.<span class=\"property\">next</span>.<span class=\"property\">next</span> = head;</span><br><span class=\"line\">    head.<span class=\"property\">next</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> node; </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"350-Intersection-of-Two-Arrays-II\"><a href=\"#350-Intersection-of-Two-Arrays-II\" class=\"headerlink\" title=\"350-Intersection of Two Arrays II\"></a><a href=\"https://leetcode.com/problems/intersection-of-two-arrays-ii\">350-Intersection of Two Arrays II</a></h3><h4 id=\"方法一：先对-nums1-遍历，生成哈希表，然后对-nums2-遍历\"><a href=\"#方法一：先对-nums1-遍历，生成哈希表，然后对-nums2-遍历\" class=\"headerlink\" title=\"方法一：先对 nums1 遍历，生成哈希表，然后对 nums2 遍历\"></a>方法一：先对 nums1 遍历，生成哈希表，然后对 nums2 遍历</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> intersect = <span class=\"keyword\">function</span>(<span class=\"params\">nums1, nums2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = [],result=[];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,n=nums1.<span class=\"property\">length</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> numi = arr[nums1[i]];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(numi)&#123;</span><br><span class=\"line\">            arr[nums1[i]]++;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            arr[nums1[i]] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>,m=nums2.<span class=\"property\">length</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> numj = arr[nums2[j]];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(numj)&#123;</span><br><span class=\"line\">            result.<span class=\"title function_\">push</span>(nums2[j]);</span><br><span class=\"line\">            arr[nums2[j]]--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：先进行排序，然后用两个指针遍历\"><a href=\"#方法二：先进行排序，然后用两个指针遍历\" class=\"headerlink\" title=\"方法二：先进行排序，然后用两个指针遍历\"></a>方法二：先进行排序，然后用两个指针遍历</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number[]</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> intersect = <span class=\"keyword\">function</span>(<span class=\"params\">nums1, nums2</span>) &#123;</span><br><span class=\"line\">    nums1.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b;&#125;);</span><br><span class=\"line\">    nums2.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b;&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> n1 = nums1.<span class=\"property\">length</span>, n2 = nums2.<span class=\"property\">length</span>,i1 = <span class=\"number\">0</span>, i2 = <span class=\"number\">0</span>,res = [];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i1 &lt; n1 &amp;&amp; i2 &lt; n2)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums1[i1] == nums2[i2]) &#123;</span><br><span class=\"line\">            res.<span class=\"title function_\">push</span>(nums1[i1]);</span><br><span class=\"line\">            i1++;</span><br><span class=\"line\">            i2++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(nums1[i1] &gt; nums2[i2])&#123;</span><br><span class=\"line\">            i2++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            i1++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"268-Missing-Number\"><a href=\"#268-Missing-Number\" class=\"headerlink\" title=\"268-Missing Number\"></a><a href=\"https://leetcode.com/problems/missing-number\">268-Missing Number</a></h3><h4 id=\"方法一：因为有且只有一个数字丢失，所以可以先排序再遍历，根据索引值和数值的关系判断\"><a href=\"#方法一：因为有且只有一个数字丢失，所以可以先排序再遍历，根据索引值和数值的关系判断\" class=\"headerlink\" title=\"方法一：因为有且只有一个数字丢失，所以可以先排序再遍历，根据索引值和数值的关系判断\"></a>方法一：因为有且只有一个数字丢失，所以可以先排序再遍历，根据索引值和数值的关系判断</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> missingNumber = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> sort = nums.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a-b;</span><br><span class=\"line\">    &#125;),n=nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sort[i] != i)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：位运算，利用异或\"><a href=\"#方法二：位运算，利用异或\" class=\"headerlink\" title=\"方法二：位运算，利用异或\"></a>方法二：位运算，利用异或</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> missingNumber = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> xor = <span class=\"number\">0</span>, i = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">\t\txor = xor ^ i ^ nums[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> xor ^ i;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法三：因为数值范围确定，所以可以先求和，再减去数组中的元素，剩下的数字就是丢失数字\"><a href=\"#方法三：因为数值范围确定，所以可以先求和，再减去数组中的元素，剩下的数字就是丢失数字\" class=\"headerlink\" title=\"方法三：因为数值范围确定，所以可以先求和，再减去数组中的元素，剩下的数字就是丢失数字\"></a>方法三：因为数值范围确定，所以可以先求和，再减去数组中的元素，剩下的数字就是丢失数字</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> missingNumber = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = nums.<span class=\"property\">length</span>,sum = (<span class=\"number\">0</span>+len)*(len+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;len; i++)&#123;</span><br><span class=\"line\">        sum-=nums[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法四：二分查找\"><a href=\"#方法四：二分查找\" class=\"headerlink\" title=\"方法四：二分查找\"></a>方法四：二分查找</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[]</span>&#125; <span class=\"variable\">nums</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> missingNumber = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    nums.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;<span class=\"keyword\">return</span> a-b;&#125;);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> left = <span class=\"number\">0</span>, right = nums.<span class=\"property\">length</span>, mid= <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((left + right)/<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(left&lt;right)&#123;</span><br><span class=\"line\">        mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((left + right)/<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[mid]&gt;mid) &#123;right = mid;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> left = mid+<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> left;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"447-Number-of-Boomerangs\"><a href=\"#447-Number-of-Boomerangs\" class=\"headerlink\" title=\"447-Number of Boomerangs\"></a><a href=\"https://leetcode.com/problems/number-of-boomerangs\">447-Number of Boomerangs</a></h3><p>暂无</p>\n<h3 id=\"543-Diameter-of-Binary-Tree\"><a href=\"#543-Diameter-of-Binary-Tree\" class=\"headerlink\" title=\"543-Diameter of Binary Tree\"></a><a href=\"https://leetcode.com/problems/diameter-of-binary-tree\">543-Diameter of Binary Tree</a></h3><p>暂无</p>\n<h3 id=\"415-Add-Strings\"><a href=\"#415-Add-Strings\" class=\"headerlink\" title=\"415-Add Strings\"></a><a href=\"https://leetcode.com/problems/add-strings\">415-Add Strings</a></h3><h4 id=\"方法一：遍历，用一个变量记录当前位进位情况\"><a href=\"#方法一：遍历，用一个变量记录当前位进位情况\" class=\"headerlink\" title=\"方法一：遍历，用一个变量记录当前位进位情况\"></a>方法一：遍历，用一个变量记录当前位进位情况</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">num1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">num2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> addStrings = <span class=\"keyword\">function</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> carry=<span class=\"number\">0</span>,str = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=num1.<span class=\"property\">length</span>-<span class=\"number\">1</span>,j=num2.<span class=\"property\">length</span>-<span class=\"number\">1</span>;i&gt;=<span class=\"number\">0</span>||j&gt;=<span class=\"number\">0</span>||carry==<span class=\"number\">1</span>;i--,j--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> n1 = num1[i] ? num1[i] - <span class=\"string\">&#x27;0&#x27;</span> : <span class=\"number\">0</span>,</span><br><span class=\"line\">            n2 = num2[j] ? num2[j] - <span class=\"string\">&#x27;0&#x27;</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> sum = (n1 + n2 + carry)%<span class=\"number\">10</span>;</span><br><span class=\"line\">            carry = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((n1 + n2 + carry)/<span class=\"number\">10</span>);</span><br><span class=\"line\">        str = sum + str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"108-Convert-Sorted-Array-to-Binary-Search-Tree\"><a href=\"#108-Convert-Sorted-Array-to-Binary-Search-Tree\" class=\"headerlink\" title=\"108-Convert Sorted Array to Binary Search Tree\"></a><a href=\"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree\">108-Convert Sorted Array to Binary Search Tree</a></h3><p>暂无</p>\n<h3 id=\"405-Convert-a-Number-to-Hexadecimal\"><a href=\"#405-Convert-a-Number-to-Hexadecimal\" class=\"headerlink\" title=\"405-Convert a Number to Hexadecimal\"></a><a href=\"https://leetcode.com/problems/convert-a-number-to-hexadecimal\">405-Convert a Number to Hexadecimal</a></h3><p>暂无</p>\n","categories":[{"name":"算法","path":"api/categories/算法.json"}],"tags":[{"name":"JS","path":"api/tags/JS.json"},{"name":"leetcode","path":"api/tags/leetcode.json"},{"name":"算法","path":"api/tags/算法.json"}]}