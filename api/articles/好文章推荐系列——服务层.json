{"title":"好文章推荐系列——服务层","slug":"好文章推荐系列——服务层","date":"2017-08-07T14:34:27.000Z","updated":"2025-01-03T12:32:52.482Z","comments":true,"path":"api/articles/好文章推荐系列——服务层.json","excerpt":null,"covers":null,"content":"<h3 id=\"分布式系统之服务发现（Service-Discovery）\"><a href=\"#分布式系统之服务发现（Service-Discovery）\" class=\"headerlink\" title=\"分布式系统之服务发现（Service Discovery）\"></a><a href=\"https://juejin.cn/post/6844903937653342216\">分布式系统之服务发现（Service Discovery）</a></h3><p>服务发现简单来讲就是通过服务名找到提供服务的实例地址和端口，主要用于解决如何获取服务实例地址问题。近年来随着容器技术的兴起，大量服务分散在系统各处，服务彼此之间调用都需要通过服务发现来实现。服务发现是分布式系统中不可或缺的关键组件，常用于构建服务发现解决方案的开源框架如Zookeeper、 Etcd、Consul。本文主要介绍如何基于Zookeeper、 Etcd、Consul构建服务发现方案并对其可能出现的问题进行讨论。</p>\n<h3 id=\"Node-js-最佳实践\"><a href=\"#Node-js-最佳实践\" class=\"headerlink\" title=\"Node.js 最佳实践\"></a><a href=\"https://github.com/goldbergyoni/nodebestpractices/blob/master/README.chinese.md\">Node.js 最佳实践</a></h3><ol>\n<li>当您读到这里，实际上您读了很多关于Node.js的优秀文章 - 这是对Node.js最佳实践中排名最高的内容的总结和分享</li>\n<li>这里是最大的汇集，且每周都在增长 - 当前，超过50个最佳实现，样式指南，架构建议已经呈现。每天都有新的issue和PR被创建，以使这本在线书籍不断更新。我们很乐于见到您能在这里做出贡献，不管是修复一些代码的错误，或是提出绝妙的新想法。请查看我们的milestones</li>\n<li>大部分的条目包含额外的信息 - 大部分的最佳实践条目的旁边，您将发现 🔗Read More 链接，它将呈现给您示例代码，博客引用和更多信息</li>\n</ol>\n<h3 id=\"从头开始，彻底理解服务端渲染原理-8千字汇总长文\"><a href=\"#从头开始，彻底理解服务端渲染原理-8千字汇总长文\" class=\"headerlink\" title=\"从头开始，彻底理解服务端渲染原理(8千字汇总长文)\"></a><a href=\"https://juejin.im/post/6844903881390964744\">从头开始，彻底理解服务端渲染原理(8千字汇总长文)</a></h3><p>非常详细的介绍了服务端渲染的原理以及需要注意的事项，还贴出了具体示例代码，感兴趣的话可以跟着示例实现一下</p>\n<h3 id=\"Node-定时器详解\"><a href=\"#Node-定时器详解\" class=\"headerlink\" title=\"Node 定时器详解\"></a><a href=\"http://www.ruanyifeng.com/blog/2018/02/node-event-loop.html\">Node 定时器详解</a></h3><p>作者：阮一峰，Node 的异步语法比浏览器更复杂，因为它可以跟内核对话，不得不搞了一个专门的库 <code>libuv</code> 做这件事。这个库负责各种回调函数的执行时间，毕竟异步任务最后还是要回到主线程，一个个排队执行。<br>至今为止，解释定时器最透彻的中文文章了</p>\n<h3 id=\"node-基础面试事件环？微任务、宏任务？一篇带你飞\"><a href=\"#node-基础面试事件环？微任务、宏任务？一篇带你飞\" class=\"headerlink\" title=\"node 基础面试事件环？微任务、宏任务？一篇带你飞\"></a><a href=\"https://juejin.im/post/5b35cdfa51882574c020d685\">node 基础面试事件环？微任务、宏任务？一篇带你飞</a></h3><p>这是一篇很干货的文章，作者介绍了 node 的应用场景以及特性，同时还顺带着介绍了同步/异步、阻塞/非阻塞、微任务/宏任务这些 node 面试中经常遇到的知识点，虽然篇幅不是很长，但是涵盖的范围比较广，对于刚入门前端的童鞋来说有比较大的难度，不过对于那些已使用 node 一段时间的童鞋来说是一篇不错的总结类文章。</p>\n<h3 id=\"Error-Handling-in-Node-js\"><a href=\"#Error-Handling-in-Node-js\" class=\"headerlink\" title=\"Error Handling in Node.js\"></a><a href=\"https://www.joyent.com/node-js/production/design/errors\">Error Handling in Node.js</a></h3><p>关于 NodeJS 中异常的种类，以及应该如何处理异常方面的设计文章，比较长，而且是英文的，但比较受益。（有没有大佬翻译一把？）</p>\n<h3 id=\"开发者需要了解的-nodejs-中-require-的机制\"><a href=\"#开发者需要了解的-nodejs-中-require-的机制\" class=\"headerlink\" title=\"开发者需要了解的 nodejs 中 require 的机制\"></a><a href=\"https://juejin.im/post/5bdea6b1518825170f50c485\">开发者需要了解的 nodejs 中 require 的机制</a></h3><p>对 nodejs 中的模块加载进行了详细的讲解，同时对 exports 和 module.exports 的区别和正确使用方式也进行了讲解，是一篇非常不错的 nodejs 模块方面的文章，该文为译文，原文地址：<a href=\"https://medium.freecodecamp.org/requiring-modules-in-node-js-everything-you-need-to-know-e7fbd119be8\">https://medium.freecodecamp.org/requiring-modules-in-node-js-everything-you-need-to-know-e7fbd119be8</a></p>\n<h3 id=\"CDN-技术详解\"><a href=\"#CDN-技术详解\" class=\"headerlink\" title=\"CDN 技术详解\"></a><a href=\"https://www.cnblogs.com/losbyday/p/5843960.html\">CDN 技术详解</a></h3><p>《CDN技术详解》绝对是带你进入 CDN 行业的那盏最亮的明灯。因此，虽然只是纯粹的重点抄录，作者还是把《CDN技术详解》中的精华总结成了这篇文章。</p>\n<h3 id=\"漫画-从搬家到容器技术-Docker-应用场景解析\"><a href=\"#漫画-从搬家到容器技术-Docker-应用场景解析\" class=\"headerlink\" title=\"漫画 | 从搬家到容器技术 Docker 应用场景解析\"></a><a href=\"https://mp.weixin.qq.com/s/wHEVltlOOAffWILB1hqFjg\">漫画 | 从搬家到容器技术 Docker 应用场景解析</a></h3><p>通过漫画的方式对 Docker 的原理和应用场景进行了比较详细的介绍和讲解</p>\n<h3 id=\"不仅仅是前端er——折腾服务器武装自己\"><a href=\"#不仅仅是前端er——折腾服务器武装自己\" class=\"headerlink\" title=\"不仅仅是前端er——折腾服务器武装自己\"></a><a href=\"https://segmentfault.com/a/1190000013242438\">不仅仅是前端er——折腾服务器武装自己</a></h3><p>作者从购买服务器和购买域名讲起，将搭建网站的详细过程进行了介绍，同时还包括 nginx 配置文件的修改以及持续部署的配置。</p>\n","more":"<h3 id=\"分布式系统之服务发现（Service-Discovery）\"><a href=\"#分布式系统之服务发现（Service-Discovery）\" class=\"headerlink\" title=\"分布式系统之服务发现（Service Discovery）\"></a><a href=\"https://juejin.cn/post/6844903937653342216\">分布式系统之服务发现（Service Discovery）</a></h3><p>服务发现简单来讲就是通过服务名找到提供服务的实例地址和端口，主要用于解决如何获取服务实例地址问题。近年来随着容器技术的兴起，大量服务分散在系统各处，服务彼此之间调用都需要通过服务发现来实现。服务发现是分布式系统中不可或缺的关键组件，常用于构建服务发现解决方案的开源框架如Zookeeper、 Etcd、Consul。本文主要介绍如何基于Zookeeper、 Etcd、Consul构建服务发现方案并对其可能出现的问题进行讨论。</p>\n<h3 id=\"Node-js-最佳实践\"><a href=\"#Node-js-最佳实践\" class=\"headerlink\" title=\"Node.js 最佳实践\"></a><a href=\"https://github.com/goldbergyoni/nodebestpractices/blob/master/README.chinese.md\">Node.js 最佳实践</a></h3><ol>\n<li>当您读到这里，实际上您读了很多关于Node.js的优秀文章 - 这是对Node.js最佳实践中排名最高的内容的总结和分享</li>\n<li>这里是最大的汇集，且每周都在增长 - 当前，超过50个最佳实现，样式指南，架构建议已经呈现。每天都有新的issue和PR被创建，以使这本在线书籍不断更新。我们很乐于见到您能在这里做出贡献，不管是修复一些代码的错误，或是提出绝妙的新想法。请查看我们的milestones</li>\n<li>大部分的条目包含额外的信息 - 大部分的最佳实践条目的旁边，您将发现 🔗Read More 链接，它将呈现给您示例代码，博客引用和更多信息</li>\n</ol>\n<h3 id=\"从头开始，彻底理解服务端渲染原理-8千字汇总长文\"><a href=\"#从头开始，彻底理解服务端渲染原理-8千字汇总长文\" class=\"headerlink\" title=\"从头开始，彻底理解服务端渲染原理(8千字汇总长文)\"></a><a href=\"https://juejin.im/post/6844903881390964744\">从头开始，彻底理解服务端渲染原理(8千字汇总长文)</a></h3><p>非常详细的介绍了服务端渲染的原理以及需要注意的事项，还贴出了具体示例代码，感兴趣的话可以跟着示例实现一下</p>\n<h3 id=\"Node-定时器详解\"><a href=\"#Node-定时器详解\" class=\"headerlink\" title=\"Node 定时器详解\"></a><a href=\"http://www.ruanyifeng.com/blog/2018/02/node-event-loop.html\">Node 定时器详解</a></h3><p>作者：阮一峰，Node 的异步语法比浏览器更复杂，因为它可以跟内核对话，不得不搞了一个专门的库 <code>libuv</code> 做这件事。这个库负责各种回调函数的执行时间，毕竟异步任务最后还是要回到主线程，一个个排队执行。<br>至今为止，解释定时器最透彻的中文文章了</p>\n<h3 id=\"node-基础面试事件环？微任务、宏任务？一篇带你飞\"><a href=\"#node-基础面试事件环？微任务、宏任务？一篇带你飞\" class=\"headerlink\" title=\"node 基础面试事件环？微任务、宏任务？一篇带你飞\"></a><a href=\"https://juejin.im/post/5b35cdfa51882574c020d685\">node 基础面试事件环？微任务、宏任务？一篇带你飞</a></h3><p>这是一篇很干货的文章，作者介绍了 node 的应用场景以及特性，同时还顺带着介绍了同步/异步、阻塞/非阻塞、微任务/宏任务这些 node 面试中经常遇到的知识点，虽然篇幅不是很长，但是涵盖的范围比较广，对于刚入门前端的童鞋来说有比较大的难度，不过对于那些已使用 node 一段时间的童鞋来说是一篇不错的总结类文章。</p>\n<h3 id=\"Error-Handling-in-Node-js\"><a href=\"#Error-Handling-in-Node-js\" class=\"headerlink\" title=\"Error Handling in Node.js\"></a><a href=\"https://www.joyent.com/node-js/production/design/errors\">Error Handling in Node.js</a></h3><p>关于 NodeJS 中异常的种类，以及应该如何处理异常方面的设计文章，比较长，而且是英文的，但比较受益。（有没有大佬翻译一把？）</p>\n<h3 id=\"开发者需要了解的-nodejs-中-require-的机制\"><a href=\"#开发者需要了解的-nodejs-中-require-的机制\" class=\"headerlink\" title=\"开发者需要了解的 nodejs 中 require 的机制\"></a><a href=\"https://juejin.im/post/5bdea6b1518825170f50c485\">开发者需要了解的 nodejs 中 require 的机制</a></h3><p>对 nodejs 中的模块加载进行了详细的讲解，同时对 exports 和 module.exports 的区别和正确使用方式也进行了讲解，是一篇非常不错的 nodejs 模块方面的文章，该文为译文，原文地址：<a href=\"https://medium.freecodecamp.org/requiring-modules-in-node-js-everything-you-need-to-know-e7fbd119be8\">https://medium.freecodecamp.org/requiring-modules-in-node-js-everything-you-need-to-know-e7fbd119be8</a></p>\n<h3 id=\"CDN-技术详解\"><a href=\"#CDN-技术详解\" class=\"headerlink\" title=\"CDN 技术详解\"></a><a href=\"https://www.cnblogs.com/losbyday/p/5843960.html\">CDN 技术详解</a></h3><p>《CDN技术详解》绝对是带你进入 CDN 行业的那盏最亮的明灯。因此，虽然只是纯粹的重点抄录，作者还是把《CDN技术详解》中的精华总结成了这篇文章。</p>\n<h3 id=\"漫画-从搬家到容器技术-Docker-应用场景解析\"><a href=\"#漫画-从搬家到容器技术-Docker-应用场景解析\" class=\"headerlink\" title=\"漫画 | 从搬家到容器技术 Docker 应用场景解析\"></a><a href=\"https://mp.weixin.qq.com/s/wHEVltlOOAffWILB1hqFjg\">漫画 | 从搬家到容器技术 Docker 应用场景解析</a></h3><p>通过漫画的方式对 Docker 的原理和应用场景进行了比较详细的介绍和讲解</p>\n<h3 id=\"不仅仅是前端er——折腾服务器武装自己\"><a href=\"#不仅仅是前端er——折腾服务器武装自己\" class=\"headerlink\" title=\"不仅仅是前端er——折腾服务器武装自己\"></a><a href=\"https://segmentfault.com/a/1190000013242438\">不仅仅是前端er——折腾服务器武装自己</a></h3><p>作者从购买服务器和购买域名讲起，将搭建网站的详细过程进行了介绍，同时还包括 nginx 配置文件的修改以及持续部署的配置。</p>\n","categories":[{"name":"推荐","path":"api/categories/推荐.json"}],"tags":[{"name":"服务端","path":"api/tags/服务端.json"},{"name":"NodeJS","path":"api/tags/NodeJS.json"}]}