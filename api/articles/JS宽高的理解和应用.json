{"title":"JS宽高的理解和应用","slug":"JS宽高的理解和应用","date":"2017-05-01T14:49:51.000Z","updated":"2019-12-10T04:36:22.998Z","comments":true,"path":"api/articles/JS宽高的理解和应用.json","excerpt":null,"covers":["/images/hexo_post_31.png","/images/hexo_post_24.png","/images/hexo_post_28.png","/images/hexo_post_32.png","/images/hexo_post_25.png","/images/hexo_post_29.png","/images/hexo_post_27.png","/images/hexo_post_26.png","/images/hexo_post_23.png","/images/hexo_post_30.png"],"content":"<h2 id=\"window-和-document\"><a href=\"#window-和-document\" class=\"headerlink\" title=\"window 和 document\"></a>window 和 document</h2><p><strong>document 是 window 对象的一部分</strong>：document.body -&gt; window.document.body，浏览器的 HTML 文档称为 document 对象<br><strong>window.location === document.location</strong>：window 对象的 location 属性引用的是 location 对象，表示该窗口中当前显示文档的 URL，document 对象的 location 属性也是引用了 location 对象</p>\n<h2 id=\"window-screen\"><a href=\"#window-screen\" class=\"headerlink\" title=\"window.screen\"></a>window.screen</h2><p>window.screen 包含有关用户屏幕的信息，它包括：</p>\n<ul>\n<li><code>window.screen.width</code></li>\n<li><code>window.screen.height</code></li>\n<li><code>window.screen.availHeight</code></li>\n<li><code>window.screen.availWidth</code></li>\n<li><code>window.screenTop</code></li>\n<li><code>window.screenLeft</code></li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_31.png\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"与-window-相关的宽高\"><a href=\"#与-window-相关的宽高\" class=\"headerlink\" title=\"与 window 相关的宽高\"></a>与 window 相关的宽高</h2><ul>\n<li><code>window.innerWidth</code> 内部的宽度</li>\n<li><code>window.innerHeight</code> 内部的高度</li>\n<li><code>window.outWidth</code> 外部的宽度</li>\n<li><code>window.outHeight</code> 外部的高度</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_24.png\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"与-document-相关的宽高\"><a href=\"#与-document-相关的宽高\" class=\"headerlink\" title=\"与 document 相关的宽高\"></a>与 document 相关的宽高</h2><h3 id=\"与-client-相关的宽高\"><a href=\"#与-client-相关的宽高\" class=\"headerlink\" title=\"与 client 相关的宽高\"></a>与 client 相关的宽高</h3><ul>\n<li><code>document.body.clientWidth</code> 元素宽度（可视内容区+内边距）</li>\n<li><code>document.body.clientHeight</code> 元素高度（可视内容区+内边距）</li>\n</ul>\n<p>该属性指的是元素的可视部分宽度和高度，即 <code>padding+content</code></p>\n<ul>\n<li>如果没有滚动条，即为元素设定的宽度和高度</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123; </span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">20px</span> solid <span class=\"number\">#000</span>; </span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#eee</span>; </span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">350px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: scroll; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body.clientWidth);  <span class=\"comment\">// 350+padding(80) = 430</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body.clientHeight);  <span class=\"comment\">// 500 + padding(80) = 580</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果出现滚动条，滚动条会遮盖元素的宽高，那么该属性就是其本来宽高减去滚动条的宽高</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#exp2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>:red;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>:auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> test = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"exp2\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(test.clientHeight); <span class=\"comment\">// 200</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(test.clientWidth); <span class=\"comment\">//</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>document.body.clientLeft</code></li>\n<li><code>document.body.clientTop</code></li>\n</ul>\n<p>这两个返回的是元素周围边框的厚度，如果不指定一个边框或者不定位该元素，它的值就是 0</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123; </span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">20px</span> solid <span class=\"number\">#000</span>; </span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#eee</span>; </span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">350px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: scroll; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body.clientLeft);  <span class=\"comment\">// 20</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body.clientTop);  <span class=\"comment\">// 20</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h3><ul>\n<li>无 <code>padding</code> 无滚动 ：<code>clientWidth</code> = 盒子的 <code>width</code></li>\n<li>有 <code>padding</code> 无滚动 ：<code>clientWidth</code> = 盒子的 <code>width</code> + 盒子的 <code>padding * 2</code></li>\n<li>有 <code>padding</code> 有滚动 ：<code>clientWidth</code> = 盒子和 <code>width</code> + 盒子的 <code>padding * 2</code> - 滚动轴宽度</li>\n<li><code>clientTop = border-top</code></li>\n<li><code>clientLeft = border-left</code></li>\n</ul>\n<h3 id=\"与-offset-相关的宽高\"><a href=\"#与-offset-相关的宽高\" class=\"headerlink\" title=\"与 offset 相关的宽高\"></a>与 offset 相关的宽高</h3><ul>\n<li><strong>document.body.offsetWidth（元素的border + padding + content的宽度）</strong></li>\n<li><strong>document.body.offsetHeight（元素的border + padding + content的高度）</strong></li>\n</ul>\n<p>该属性和其内部的内容是否超出元素大小无关，只和本来设定的 border 以及 width 和 height 有关</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123; </span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">20px</span> solid <span class=\"number\">#000</span>; </span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#eee</span>; </span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">350px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: scroll; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body.offsetWidth);  <span class=\"comment\">// 470 = padding\\*2 + 350 + border\\*2</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body.offsetHeight);  <span class=\"comment\">// 620 = padding\\*2 + 500 + border\\*2</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>document.offsetLeft</strong></li>\n<li><strong>document.offsetTop</strong></li>\n</ul>\n<p>了解这两个属性我们必须先了解它，什么是 <code>offsetParent</code></p>\n<ul>\n<li>如果当前元素的父级元素没有进行 <code>CSS</code> 定位（<code>position</code> 为 <code>absolute</code> 或 <code>relative</code>）,<code>offsetParent</code> 为 <code>body.</code></li>\n<li>假如当前元素的父级元素中有 <code>CSS</code> 定位，<code>offsetParent</code> 取最近的那个父级元素</li>\n</ul>\n<h3 id=\"offsetLeft-的兼容性问题\"><a href=\"#offsetLeft-的兼容性问题\" class=\"headerlink\" title=\"offsetLeft 的兼容性问题\"></a>offsetLeft 的兼容性问题</h3><ul>\n<li>在 <code>IE6/7</code> 中<ul>\n<li><code>offsetLeft</code> = offsetParent 的 padding-left + 当前元素的 margin-left</li>\n</ul>\n</li>\n<li>在 <code>IE8/9/10</code> 以及 <code>chrome</code> 中<ul>\n<li><code>offsetLeft</code> = offsetParent 的 margin-left + offsetParent 的 border 宽度 + offsetParent 的 padding-left + 当前元素的 margin-left</li>\n</ul>\n</li>\n<li>在 <code>FireFox</code> 中<ul>\n<li><code>offsetLeft</code> = offsetParent 的 margin-left + 当前元素的 margin-left + offsetParent 的padding-left</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123; </span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">20px</span> solid <span class=\"number\">#000</span>; </span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#eee</span>; </span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">350px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: scroll; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"selector-id\">#exp</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>:<span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>:red;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>:<span class=\"number\">20px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>:auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在 IE8 / 9 / 10 以及 chrome 中：<ul>\n<li>div.offsetLeft = 本身的 margin10 + 父级元素的 padding40 + margin10 + border20 = 80</li>\n<li>div.offsetTop = 本身的 margin10 + 父级元素的 padding40 + margin10 + border20 = 80</li>\n</ul>\n</li>\n<li>在 FireFox：（相比 chrome 中少了 border）<ul>\n<li>div.offsetLeft = 本身的 margin10 + 父级元素的 padding40 + margin10 = 60</li>\n<li>div.offsetTop = 本身的 margin10 + 父级元素的 padding40 + margin10 = 60</li>\n</ul>\n</li>\n<li>在 IE6/7 中：（相比在 FireFox，不但少了 border 还少了父级元素的 margin）<ul>\n<li><code>div.offsetLeft</code> = 本身的 <code>margin10</code> + 父级元素的 <code>padding40</code> = 50</li>\n<li><code>div.offsetTop</code> = 本身的 <code>margin10</code> + 父级元素的 <code>padding40</code> = 50</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"小结-1\"><a href=\"#小结-1\" class=\"headerlink\" title=\"小结\"></a>小结</h3><ul>\n<li>无 <code>padding</code> 无滚动无 <code>border</code><ul>\n<li>offsetWidth = clientWidth = 盒子的宽度</li>\n</ul>\n</li>\n<li>有 <code>padding</code> 无滚动有 <code>border</code><ul>\n<li>offsetWidth = 盒子的宽度 + 盒子 padding <em> 2 + 盒子边框 </em> 2 = clientWidth + 边框宽度 * 2</li>\n</ul>\n</li>\n<li>有 <code>padding</code> 有滚动，且滚动是显示的，有 <code>border</code><ul>\n<li>offsetWidth = 盒子宽度 + 盒子 padding <em> 2 + 盒子边框 </em> 2 = clientWidth + 滚动轴宽度 + 边框宽度 * 2</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"与-scroll-相关的宽高\"><a href=\"#与-scroll-相关的宽高\" class=\"headerlink\" title=\"与 scroll 相关的宽高\"></a>与 scroll 相关的宽高</h2><ul>\n<li><strong>document.body.scrollWidth</strong></li>\n<li><strong>document.body.scrollHeight</strong></li>\n</ul>\n<p>document.body 的 scrollWidth 和 scrollHeight 与 div 的 scrollWidth 和 scrollHeight 是有区别的</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123; </span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">20px</span> solid <span class=\"number\">#000</span>; </span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#eee</span>; </span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">350px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: scroll; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.body.scrollHeight; <span class=\"comment\">// </span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.scrollWidth; <span class=\"comment\">//</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>当给定宽高小于浏览器窗口的宽高<ul>\n<li>scrollWidth = 通常是浏览器窗口的宽度</li>\n<li>scrollHeight = 通常是浏览器窗口的高度</li>\n</ul>\n</li>\n<li>当给定宽高大于浏览器窗口的宽高，且内容小于给定宽高的时候<ul>\n<li>scrollWidth = 给定宽度 + 其所有的 padding + margin + border</li>\n<li>scrollHeight = 给定高度 + 其所有的 padding + margin + border</li>\n</ul>\n</li>\n<li>当给定宽高大于浏览器窗口宽高，且内容大于给定宽高<ul>\n<li>scrollWidth = 内容宽度 + 其所有的 padding + margin + border</li>\n<li>scrollHeight = 内容高度 + 其所有的 padding + margin + border</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"在某-div-中的-scrollWidth-和-scrollHeight\"><a href=\"#在某-div-中的-scrollWidth-和-scrollHeight\" class=\"headerlink\" title=\"在某 div 中的 scrollWidth 和 scrollHeight\"></a><strong>在某 div 中的 scrollWidth 和 scrollHeight</strong></h3><p>无滚动轴时：</p>\n<ul>\n<li>scrollWidth = clientWidth = 盒子宽度 + 盒子 padding * 2</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_28.png\" alt=\"\" width=\"450\"></div>\n\n<p>有滚动轴时：</p>\n<ul>\n<li>scrollWidth = 实际内容的宽度 + padding * 2</li>\n<li>scrollHeight = 实际内容的高度 + padding * 2</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_32.png\" alt=\"\" width=\"450\"></div>\n\n<ul>\n<li><strong>document.body.scrollLeft</strong></li>\n<li><strong>document.body.scrollTop</strong></li>\n</ul>\n<p>与前面不同的是，这对属性是<strong>可读写</strong>的，指的是当元素其中的超出其宽高的时候，元素被卷起来的高度和宽度</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#exp</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>:<span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>:red;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>:<span class=\"number\">20px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow-y</span>:scroll;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mydiv = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"exp\"</span>);</span><br><span class=\"line\">mydiv.scrollTop ;  <span class=\"comment\">// 默认情况下是0 </span></span><br><span class=\"line\">mydiv.scrollLeft ; <span class=\"comment\">// 默认情况下是0 </span></span><br><span class=\"line\"><span class=\"comment\">// 可以改写它</span></span><br><span class=\"line\">mydiv.scrollTop = <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(mydiv.scrollTop)</span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_25.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"obj-style-width-和-obj-style-height\"><a href=\"#obj-style-width-和-obj-style-height\" class=\"headerlink\" title=\"obj.style.width 和 obj.style.height\"></a><strong>obj.style.width 和 obj.style.height</strong></h3><p>对于一个 <code>DOM</code> 元素，它的 <code>style</code> 属性返回的是一个对象，这个对象的任意一个属性是可读写的，<code>style.width</code> 等于 <code>css</code> 属性中的宽度。<code>style.height</code> 等于 <code>css</code> 属性中的高度</p>\n<h2 id=\"documentElement-和-body-的关系\"><a href=\"#documentElement-和-body-的关系\" class=\"headerlink\" title=\"documentElement 和 body 的关系\"></a>documentElement 和 body 的关系</h2><p>是父子级的关系</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>); <span class=\"comment\">//document</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.documentElement); <span class=\"comment\">//html</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body); <span class=\"comment\">//body</span></span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_29.png\" alt=\"\" width=\"600\"></div>\n\n<ul>\n<li>兼容问题推荐使用，获取浏览器窗口可视区域大小：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.body.clientWidth || <span class=\"built_in\">document</span>.documentElement.clientWidth;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.clientHeight || <span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Event-对象的-5-种坐标\"><a href=\"#Event-对象的-5-种坐标\" class=\"headerlink\" title=\"Event 对象的 5 种坐标\"></a>Event 对象的 5 种坐标</h2><ul>\n<li>clientX 和 clientY：相对于浏览器（可视区左上角0,0）的坐标</li>\n<li>screenX 和 screenY：相对于设备屏幕左上角（0,0）的坐标</li>\n<li>offsetX 和 offsetY：相对于事件源左上角（0,0）的坐标</li>\n<li>pageX 和 pageY：相对于整个网页左上角（0,0）的坐标</li>\n<li>X 和 Y：本来是 IE 属性，相对于用CSS动态定位的最内层包容元素</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_27.png\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"JS各种宽高的应用\"><a href=\"#JS各种宽高的应用\" class=\"headerlink\" title=\"JS各种宽高的应用\"></a>JS各种宽高的应用</h2><ul>\n<li><a href=\"http://codepen.io/poetries/pen/RoeJgG\" target=\"_blank\" rel=\"noopener\">可视区域加载</a></li>\n<li><a href=\"http://codepen.io/poetries/pen/WoayJy\" target=\"_blank\" rel=\"noopener\">判断网页滚动到顶部或者底部</a></li>\n<li><a href=\"http://codepen.io/poetries/pen/vyVrvm\" target=\"_blank\" rel=\"noopener\">DIV滚动到底部时加载剩余内容</a></li>\n<li><a href=\"http://codepen.io/poetries/pen/RoeBbL\" target=\"_blank\" rel=\"noopener\">计算滚动轴的宽高</a></li>\n</ul>\n<h2 id=\"JS中的宽高属性总结\"><a href=\"#JS中的宽高属性总结\" class=\"headerlink\" title=\"JS中的宽高属性总结\"></a>JS中的宽高属性总结</h2><div align=\"center\"><img src=\"/images/hexo_post_26.png\" alt=\"\" width=\"700\"></div>\n\n<div align=\"center\"><img src=\"/images/hexo_post_23.png\" alt=\"\" width=\"700\"></div>\n\n<div align=\"center\"><img src=\"/images/hexo_post_30.png\" alt=\"\" width=\"600\"></div>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"http://blog.poetries.top/2016/12/13/js-props/\" target=\"_blank\" rel=\"noopener\">JavaScript及jQuery中的各种宽高属性图解</a></li>\n</ul>\n","more":"<h2 id=\"window-和-document\"><a href=\"#window-和-document\" class=\"headerlink\" title=\"window 和 document\"></a>window 和 document</h2><p><strong>document 是 window 对象的一部分</strong>：document.body -&gt; window.document.body，浏览器的 HTML 文档称为 document 对象<br><strong>window.location === document.location</strong>：window 对象的 location 属性引用的是 location 对象，表示该窗口中当前显示文档的 URL，document 对象的 location 属性也是引用了 location 对象</p>\n<h2 id=\"window-screen\"><a href=\"#window-screen\" class=\"headerlink\" title=\"window.screen\"></a>window.screen</h2><p>window.screen 包含有关用户屏幕的信息，它包括：</p>\n<ul>\n<li><code>window.screen.width</code></li>\n<li><code>window.screen.height</code></li>\n<li><code>window.screen.availHeight</code></li>\n<li><code>window.screen.availWidth</code></li>\n<li><code>window.screenTop</code></li>\n<li><code>window.screenLeft</code></li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_31.png\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"与-window-相关的宽高\"><a href=\"#与-window-相关的宽高\" class=\"headerlink\" title=\"与 window 相关的宽高\"></a>与 window 相关的宽高</h2><ul>\n<li><code>window.innerWidth</code> 内部的宽度</li>\n<li><code>window.innerHeight</code> 内部的高度</li>\n<li><code>window.outWidth</code> 外部的宽度</li>\n<li><code>window.outHeight</code> 外部的高度</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_24.png\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"与-document-相关的宽高\"><a href=\"#与-document-相关的宽高\" class=\"headerlink\" title=\"与 document 相关的宽高\"></a>与 document 相关的宽高</h2><h3 id=\"与-client-相关的宽高\"><a href=\"#与-client-相关的宽高\" class=\"headerlink\" title=\"与 client 相关的宽高\"></a>与 client 相关的宽高</h3><ul>\n<li><code>document.body.clientWidth</code> 元素宽度（可视内容区+内边距）</li>\n<li><code>document.body.clientHeight</code> 元素高度（可视内容区+内边距）</li>\n</ul>\n<p>该属性指的是元素的可视部分宽度和高度，即 <code>padding+content</code></p>\n<ul>\n<li>如果没有滚动条，即为元素设定的宽度和高度</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123; </span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">20px</span> solid <span class=\"number\">#000</span>; </span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#eee</span>; </span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">350px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: scroll; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body.clientWidth);  <span class=\"comment\">// 350+padding(80) = 430</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body.clientHeight);  <span class=\"comment\">// 500 + padding(80) = 580</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果出现滚动条，滚动条会遮盖元素的宽高，那么该属性就是其本来宽高减去滚动条的宽高</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#exp2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>:red;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>:auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> test = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"exp2\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(test.clientHeight); <span class=\"comment\">// 200</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(test.clientWidth); <span class=\"comment\">//</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>document.body.clientLeft</code></li>\n<li><code>document.body.clientTop</code></li>\n</ul>\n<p>这两个返回的是元素周围边框的厚度，如果不指定一个边框或者不定位该元素，它的值就是 0</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123; </span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">20px</span> solid <span class=\"number\">#000</span>; </span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#eee</span>; </span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">350px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: scroll; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body.clientLeft);  <span class=\"comment\">// 20</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body.clientTop);  <span class=\"comment\">// 20</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h3><ul>\n<li>无 <code>padding</code> 无滚动 ：<code>clientWidth</code> = 盒子的 <code>width</code></li>\n<li>有 <code>padding</code> 无滚动 ：<code>clientWidth</code> = 盒子的 <code>width</code> + 盒子的 <code>padding * 2</code></li>\n<li>有 <code>padding</code> 有滚动 ：<code>clientWidth</code> = 盒子和 <code>width</code> + 盒子的 <code>padding * 2</code> - 滚动轴宽度</li>\n<li><code>clientTop = border-top</code></li>\n<li><code>clientLeft = border-left</code></li>\n</ul>\n<h3 id=\"与-offset-相关的宽高\"><a href=\"#与-offset-相关的宽高\" class=\"headerlink\" title=\"与 offset 相关的宽高\"></a>与 offset 相关的宽高</h3><ul>\n<li><strong>document.body.offsetWidth（元素的border + padding + content的宽度）</strong></li>\n<li><strong>document.body.offsetHeight（元素的border + padding + content的高度）</strong></li>\n</ul>\n<p>该属性和其内部的内容是否超出元素大小无关，只和本来设定的 border 以及 width 和 height 有关</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123; </span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">20px</span> solid <span class=\"number\">#000</span>; </span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#eee</span>; </span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">350px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: scroll; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body.offsetWidth);  <span class=\"comment\">// 470 = padding\\*2 + 350 + border\\*2</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body.offsetHeight);  <span class=\"comment\">// 620 = padding\\*2 + 500 + border\\*2</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>document.offsetLeft</strong></li>\n<li><strong>document.offsetTop</strong></li>\n</ul>\n<p>了解这两个属性我们必须先了解它，什么是 <code>offsetParent</code></p>\n<ul>\n<li>如果当前元素的父级元素没有进行 <code>CSS</code> 定位（<code>position</code> 为 <code>absolute</code> 或 <code>relative</code>）,<code>offsetParent</code> 为 <code>body.</code></li>\n<li>假如当前元素的父级元素中有 <code>CSS</code> 定位，<code>offsetParent</code> 取最近的那个父级元素</li>\n</ul>\n<h3 id=\"offsetLeft-的兼容性问题\"><a href=\"#offsetLeft-的兼容性问题\" class=\"headerlink\" title=\"offsetLeft 的兼容性问题\"></a>offsetLeft 的兼容性问题</h3><ul>\n<li>在 <code>IE6/7</code> 中<ul>\n<li><code>offsetLeft</code> = offsetParent 的 padding-left + 当前元素的 margin-left</li>\n</ul>\n</li>\n<li>在 <code>IE8/9/10</code> 以及 <code>chrome</code> 中<ul>\n<li><code>offsetLeft</code> = offsetParent 的 margin-left + offsetParent 的 border 宽度 + offsetParent 的 padding-left + 当前元素的 margin-left</li>\n</ul>\n</li>\n<li>在 <code>FireFox</code> 中<ul>\n<li><code>offsetLeft</code> = offsetParent 的 margin-left + 当前元素的 margin-left + offsetParent 的padding-left</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123; </span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">20px</span> solid <span class=\"number\">#000</span>; </span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#eee</span>; </span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">350px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: scroll; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"selector-id\">#exp</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>:<span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>:red;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>:<span class=\"number\">20px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>:auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在 IE8 / 9 / 10 以及 chrome 中：<ul>\n<li>div.offsetLeft = 本身的 margin10 + 父级元素的 padding40 + margin10 + border20 = 80</li>\n<li>div.offsetTop = 本身的 margin10 + 父级元素的 padding40 + margin10 + border20 = 80</li>\n</ul>\n</li>\n<li>在 FireFox：（相比 chrome 中少了 border）<ul>\n<li>div.offsetLeft = 本身的 margin10 + 父级元素的 padding40 + margin10 = 60</li>\n<li>div.offsetTop = 本身的 margin10 + 父级元素的 padding40 + margin10 = 60</li>\n</ul>\n</li>\n<li>在 IE6/7 中：（相比在 FireFox，不但少了 border 还少了父级元素的 margin）<ul>\n<li><code>div.offsetLeft</code> = 本身的 <code>margin10</code> + 父级元素的 <code>padding40</code> = 50</li>\n<li><code>div.offsetTop</code> = 本身的 <code>margin10</code> + 父级元素的 <code>padding40</code> = 50</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"小结-1\"><a href=\"#小结-1\" class=\"headerlink\" title=\"小结\"></a>小结</h3><ul>\n<li>无 <code>padding</code> 无滚动无 <code>border</code><ul>\n<li>offsetWidth = clientWidth = 盒子的宽度</li>\n</ul>\n</li>\n<li>有 <code>padding</code> 无滚动有 <code>border</code><ul>\n<li>offsetWidth = 盒子的宽度 + 盒子 padding <em> 2 + 盒子边框 </em> 2 = clientWidth + 边框宽度 * 2</li>\n</ul>\n</li>\n<li>有 <code>padding</code> 有滚动，且滚动是显示的，有 <code>border</code><ul>\n<li>offsetWidth = 盒子宽度 + 盒子 padding <em> 2 + 盒子边框 </em> 2 = clientWidth + 滚动轴宽度 + 边框宽度 * 2</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"与-scroll-相关的宽高\"><a href=\"#与-scroll-相关的宽高\" class=\"headerlink\" title=\"与 scroll 相关的宽高\"></a>与 scroll 相关的宽高</h2><ul>\n<li><strong>document.body.scrollWidth</strong></li>\n<li><strong>document.body.scrollHeight</strong></li>\n</ul>\n<p>document.body 的 scrollWidth 和 scrollHeight 与 div 的 scrollWidth 和 scrollHeight 是有区别的</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123; </span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">20px</span> solid <span class=\"number\">#000</span>; </span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">40px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#eee</span>; </span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">350px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: scroll; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.body.scrollHeight; <span class=\"comment\">// </span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.scrollWidth; <span class=\"comment\">//</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>当给定宽高小于浏览器窗口的宽高<ul>\n<li>scrollWidth = 通常是浏览器窗口的宽度</li>\n<li>scrollHeight = 通常是浏览器窗口的高度</li>\n</ul>\n</li>\n<li>当给定宽高大于浏览器窗口的宽高，且内容小于给定宽高的时候<ul>\n<li>scrollWidth = 给定宽度 + 其所有的 padding + margin + border</li>\n<li>scrollHeight = 给定高度 + 其所有的 padding + margin + border</li>\n</ul>\n</li>\n<li>当给定宽高大于浏览器窗口宽高，且内容大于给定宽高<ul>\n<li>scrollWidth = 内容宽度 + 其所有的 padding + margin + border</li>\n<li>scrollHeight = 内容高度 + 其所有的 padding + margin + border</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"在某-div-中的-scrollWidth-和-scrollHeight\"><a href=\"#在某-div-中的-scrollWidth-和-scrollHeight\" class=\"headerlink\" title=\"在某 div 中的 scrollWidth 和 scrollHeight\"></a><strong>在某 div 中的 scrollWidth 和 scrollHeight</strong></h3><p>无滚动轴时：</p>\n<ul>\n<li>scrollWidth = clientWidth = 盒子宽度 + 盒子 padding * 2</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_28.png\" alt=\"\" width=\"450\"></div>\n\n<p>有滚动轴时：</p>\n<ul>\n<li>scrollWidth = 实际内容的宽度 + padding * 2</li>\n<li>scrollHeight = 实际内容的高度 + padding * 2</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_32.png\" alt=\"\" width=\"450\"></div>\n\n<ul>\n<li><strong>document.body.scrollLeft</strong></li>\n<li><strong>document.body.scrollTop</strong></li>\n</ul>\n<p>与前面不同的是，这对属性是<strong>可读写</strong>的，指的是当元素其中的超出其宽高的时候，元素被卷起来的高度和宽度</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#exp</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>:<span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>:red;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>:<span class=\"number\">20px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow-y</span>:scroll;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mydiv = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"exp\"</span>);</span><br><span class=\"line\">mydiv.scrollTop ;  <span class=\"comment\">// 默认情况下是0 </span></span><br><span class=\"line\">mydiv.scrollLeft ; <span class=\"comment\">// 默认情况下是0 </span></span><br><span class=\"line\"><span class=\"comment\">// 可以改写它</span></span><br><span class=\"line\">mydiv.scrollTop = <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(mydiv.scrollTop)</span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_25.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"obj-style-width-和-obj-style-height\"><a href=\"#obj-style-width-和-obj-style-height\" class=\"headerlink\" title=\"obj.style.width 和 obj.style.height\"></a><strong>obj.style.width 和 obj.style.height</strong></h3><p>对于一个 <code>DOM</code> 元素，它的 <code>style</code> 属性返回的是一个对象，这个对象的任意一个属性是可读写的，<code>style.width</code> 等于 <code>css</code> 属性中的宽度。<code>style.height</code> 等于 <code>css</code> 属性中的高度</p>\n<h2 id=\"documentElement-和-body-的关系\"><a href=\"#documentElement-和-body-的关系\" class=\"headerlink\" title=\"documentElement 和 body 的关系\"></a>documentElement 和 body 的关系</h2><p>是父子级的关系</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>); <span class=\"comment\">//document</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.documentElement); <span class=\"comment\">//html</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.body); <span class=\"comment\">//body</span></span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_29.png\" alt=\"\" width=\"600\"></div>\n\n<ul>\n<li>兼容问题推荐使用，获取浏览器窗口可视区域大小：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.body.clientWidth || <span class=\"built_in\">document</span>.documentElement.clientWidth;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.clientHeight || <span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Event-对象的-5-种坐标\"><a href=\"#Event-对象的-5-种坐标\" class=\"headerlink\" title=\"Event 对象的 5 种坐标\"></a>Event 对象的 5 种坐标</h2><ul>\n<li>clientX 和 clientY：相对于浏览器（可视区左上角0,0）的坐标</li>\n<li>screenX 和 screenY：相对于设备屏幕左上角（0,0）的坐标</li>\n<li>offsetX 和 offsetY：相对于事件源左上角（0,0）的坐标</li>\n<li>pageX 和 pageY：相对于整个网页左上角（0,0）的坐标</li>\n<li>X 和 Y：本来是 IE 属性，相对于用CSS动态定位的最内层包容元素</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_27.png\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"JS各种宽高的应用\"><a href=\"#JS各种宽高的应用\" class=\"headerlink\" title=\"JS各种宽高的应用\"></a>JS各种宽高的应用</h2><ul>\n<li><a href=\"http://codepen.io/poetries/pen/RoeJgG\" target=\"_blank\" rel=\"noopener\">可视区域加载</a></li>\n<li><a href=\"http://codepen.io/poetries/pen/WoayJy\" target=\"_blank\" rel=\"noopener\">判断网页滚动到顶部或者底部</a></li>\n<li><a href=\"http://codepen.io/poetries/pen/vyVrvm\" target=\"_blank\" rel=\"noopener\">DIV滚动到底部时加载剩余内容</a></li>\n<li><a href=\"http://codepen.io/poetries/pen/RoeBbL\" target=\"_blank\" rel=\"noopener\">计算滚动轴的宽高</a></li>\n</ul>\n<h2 id=\"JS中的宽高属性总结\"><a href=\"#JS中的宽高属性总结\" class=\"headerlink\" title=\"JS中的宽高属性总结\"></a>JS中的宽高属性总结</h2><div align=\"center\"><img src=\"/images/hexo_post_26.png\" alt=\"\" width=\"700\"></div>\n\n<div align=\"center\"><img src=\"/images/hexo_post_23.png\" alt=\"\" width=\"700\"></div>\n\n<div align=\"center\"><img src=\"/images/hexo_post_30.png\" alt=\"\" width=\"600\"></div>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"http://blog.poetries.top/2016/12/13/js-props/\" target=\"_blank\" rel=\"noopener\">JavaScript及jQuery中的各种宽高属性图解</a></li>\n</ul>\n","categories":[{"name":"JS","path":"api/categories/JS.json"}],"tags":[{"name":"JS","path":"api/tags/JS.json"}]}