{"title":"身在IT界，不能不知道这些名词","slug":"身在IT界，不能不知道这些名词","date":"2017-08-20T12:44:49.000Z","updated":"2019-06-03T05:19:21.695Z","comments":true,"path":"api/articles/身在IT界，不能不知道这些名词.json","excerpt":null,"covers":null,"content":"<p>RT，作为码农 / 程序猿 / 攻城狮，有些名词不知道可就说不过去了</p>\n<h2 id=\"geek\"><a href=\"#geek\" class=\"headerlink\" title=\"geek\"></a>geek</h2><p>这是美国“俚语”，音译为“极客”。很多人都想成为“极客”，也有很多人自诩“极客”；然而究竟什么样的人算是“极客”呢？根据我的理解，我认为那种对自己要求极致并且不食人间烟火的技术达人，比如“楼教主”这种编程奇才。。</p>\n<h2 id=\"polyfill\"><a href=\"#polyfill\" class=\"headerlink\" title=\"polyfill\"></a>polyfill</h2><p>Polyfill 或者 Polyfiller，是英国 Web 开发者 Remy Sharp <strong>在咖啡店蹲坑的时候拍脑袋造出来的</strong>。当时他想用一个词来形容”用 JavaScript（或者 Flash 之类的什么鬼）来实现一些浏览器不支持的原生 API”。苦思冥想一直想不到合适的单词，于是他一怒之下造了一个单词 Polyfill。除了他自己用这个词以外，他还给其他开发者用。随着他在各种 Web 会议演讲和他写的书《Introducing HTML5》中频繁提到这个词，大家用了都觉得很好，就一起来用。 Polyfill 的准确意思为：<strong>用于实现浏览器并不支持的原生 API 的代码</strong>。一个 Polyfill 是抹平新老浏览器标准原生 API 之间的差距的一种封装，而不是实现自己的 API。这里有一堆 <code>Polyfills</code>，有兴趣可以把玩一下：<a href=\"https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills\" target=\"_blank\" rel=\"noopener\">HTML5 Cross Browser Polyfills</a></p>\n<h2 id=\"hack\"><a href=\"#hack\" class=\"headerlink\" title=\"hack\"></a>hack</h2><p>hack 一般用来形容某些“黑科技”，是指为了满足程序的某些需求而搞的一些代码，比如 css 中的一些 hack：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!<span class=\"selector-tag\">--</span><span class=\"selector-attr\">[if IE]</span>&gt;</span><br><span class=\"line\">这段文字只在<span class=\"selector-tag\">IE</span>浏览器显示</span><br><span class=\"line\">&lt;!<span class=\"selector-attr\">[endif]</span><span class=\"selector-tag\">--</span>&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"bug\"><a href=\"#bug\" class=\"headerlink\" title=\"bug\"></a>bug</h2><p>懂的人自然懂，有一个段子分享一下：</p>\n<ul>\n<li>我们是谁？程序员</li>\n<li>我们是做什么的？消除 bug</li>\n<li>然后做什么？写 bug</li>\n</ul>\n<h2 id=\"ssr\"><a href=\"#ssr\" class=\"headerlink\" title=\"ssr\"></a>ssr</h2><p>对于前端这个行业来说，ssr 不是你家的大天狗，也不是他家的妖刀姬，更不是别人家的姑获鸟，而是<strong>服务端渲染（Server Side Render）</strong>的意思，自从 NodeJS 问世以后，前端就出现了服务端渲染的方式，相比前端渲染，ssr 究竟有哪些优点呢？其本身又存在哪些不足呢？推荐一篇文章：<a href=\"https://github.com/camsong/blog/issues/8\" target=\"_blank\" rel=\"noopener\">精读前后端渲染之争</a>。</p>\n<h2 id=\"LGTM\"><a href=\"#LGTM\" class=\"headerlink\" title=\"LGTM\"></a>LGTM</h2><blockquote>\n<p>lgtm 在英文里的缩写含义是”Looks Good To Me.”，即“朕知道了，代码已经过 review，可以合并”的意思。</p>\n</blockquote>\n<p><a href=\"https://lgtm.com/\" target=\"_blank\" rel=\"noopener\">lgtm.com</a> 是 Semmle 公司下的子品牌，主要是做白盒扫描工具的。他的优势是对 Github 上的开源代码进行了监控，发现并上报了诸多中间件安全与框架安全漏洞，目前 lgtm 监控超过超过 70,000 的 Gtihub 项目，其中包含 Google、Nasa、Microsoft 等的开源项目。</p>\n","more":"<p>RT，作为码农 / 程序猿 / 攻城狮，有些名词不知道可就说不过去了</p>\n<h2 id=\"geek\"><a href=\"#geek\" class=\"headerlink\" title=\"geek\"></a>geek</h2><p>这是美国“俚语”，音译为“极客”。很多人都想成为“极客”，也有很多人自诩“极客”；然而究竟什么样的人算是“极客”呢？根据我的理解，我认为那种对自己要求极致并且不食人间烟火的技术达人，比如“楼教主”这种编程奇才。。</p>\n<h2 id=\"polyfill\"><a href=\"#polyfill\" class=\"headerlink\" title=\"polyfill\"></a>polyfill</h2><p>Polyfill 或者 Polyfiller，是英国 Web 开发者 Remy Sharp <strong>在咖啡店蹲坑的时候拍脑袋造出来的</strong>。当时他想用一个词来形容”用 JavaScript（或者 Flash 之类的什么鬼）来实现一些浏览器不支持的原生 API”。苦思冥想一直想不到合适的单词，于是他一怒之下造了一个单词 Polyfill。除了他自己用这个词以外，他还给其他开发者用。随着他在各种 Web 会议演讲和他写的书《Introducing HTML5》中频繁提到这个词，大家用了都觉得很好，就一起来用。 Polyfill 的准确意思为：<strong>用于实现浏览器并不支持的原生 API 的代码</strong>。一个 Polyfill 是抹平新老浏览器标准原生 API 之间的差距的一种封装，而不是实现自己的 API。这里有一堆 <code>Polyfills</code>，有兴趣可以把玩一下：<a href=\"https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills\" target=\"_blank\" rel=\"noopener\">HTML5 Cross Browser Polyfills</a></p>\n<h2 id=\"hack\"><a href=\"#hack\" class=\"headerlink\" title=\"hack\"></a>hack</h2><p>hack 一般用来形容某些“黑科技”，是指为了满足程序的某些需求而搞的一些代码，比如 css 中的一些 hack：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!<span class=\"selector-tag\">--</span><span class=\"selector-attr\">[if IE]</span>&gt;</span><br><span class=\"line\">这段文字只在<span class=\"selector-tag\">IE</span>浏览器显示</span><br><span class=\"line\">&lt;!<span class=\"selector-attr\">[endif]</span><span class=\"selector-tag\">--</span>&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"bug\"><a href=\"#bug\" class=\"headerlink\" title=\"bug\"></a>bug</h2><p>懂的人自然懂，有一个段子分享一下：</p>\n<ul>\n<li>我们是谁？程序员</li>\n<li>我们是做什么的？消除 bug</li>\n<li>然后做什么？写 bug</li>\n</ul>\n<h2 id=\"ssr\"><a href=\"#ssr\" class=\"headerlink\" title=\"ssr\"></a>ssr</h2><p>对于前端这个行业来说，ssr 不是你家的大天狗，也不是他家的妖刀姬，更不是别人家的姑获鸟，而是<strong>服务端渲染（Server Side Render）</strong>的意思，自从 NodeJS 问世以后，前端就出现了服务端渲染的方式，相比前端渲染，ssr 究竟有哪些优点呢？其本身又存在哪些不足呢？推荐一篇文章：<a href=\"https://github.com/camsong/blog/issues/8\" target=\"_blank\" rel=\"noopener\">精读前后端渲染之争</a>。</p>\n<h2 id=\"LGTM\"><a href=\"#LGTM\" class=\"headerlink\" title=\"LGTM\"></a>LGTM</h2><blockquote>\n<p>lgtm 在英文里的缩写含义是”Looks Good To Me.”，即“朕知道了，代码已经过 review，可以合并”的意思。</p>\n</blockquote>\n<p><a href=\"https://lgtm.com/\" target=\"_blank\" rel=\"noopener\">lgtm.com</a> 是 Semmle 公司下的子品牌，主要是做白盒扫描工具的。他的优势是对 Github 上的开源代码进行了监控，发现并上报了诸多中间件安全与框架安全漏洞，目前 lgtm 监控超过超过 70,000 的 Gtihub 项目，其中包含 Google、Nasa、Microsoft 等的开源项目。</p>\n","categories":[{"name":"杂谈","path":"api/categories/杂谈.json"}],"tags":[{"name":"生活","path":"api/tags/生活.json"},{"name":"IT","path":"api/tags/IT.json"}]}