{"title":"好文章推荐系列——计算机基础","slug":"好文章推荐系列——计算机基础","date":"2017-08-07T14:34:38.000Z","updated":"2025-01-03T13:10:40.014Z","comments":true,"path":"api/articles/好文章推荐系列——计算机基础.json","excerpt":null,"covers":null,"content":"<h3 id=\"随机数\"><a href=\"#随机数\" class=\"headerlink\" title=\"随机数\"></a><a href=\"https://math.haozi.me/random.html\">随机数</a></h3><p>随机数在计算机领域，尤其在密码学领域，有非常重要的应用。</p>\n<p>随机是自然界中很常见但又并不容易理解清楚的概念。比如抛一个硬币，正面或者背面向上的概率理论上各是 1/2。这个貌似是随机的，但是如果我们可以精确观测到抛出的初速度、角度、空气阻力等所有初始化条件，在宏观低速物体上(不讨论量子物理)，是可以提前计算出最后落地的正面还是背面，那这个还算随机吗？</p>\n<h3 id=\"【编码篇】看破字符-20-之谜，百分号编码以及其背后\"><a href=\"#【编码篇】看破字符-20-之谜，百分号编码以及其背后\" class=\"headerlink\" title=\"【编码篇】看破字符 %20 之谜，百分号编码以及其背后\"></a><a href=\"https://juejin.cn/post/7038759212750471199\">【编码篇】看破字符 %20 之谜，百分号编码以及其背后</a></h3><p>提到这个 <code>%20</code>，想必大家都见过，熟悉一点编码的人，还会知道这玩意就是空格转换而来！ 那么我们一起破解， 如何编码而来？</p>\n<h3 id=\"0-57-100-56-99999999999999-之谜\"><a href=\"#0-57-100-56-99999999999999-之谜\" class=\"headerlink\" title=\"0.57 * 100 === 56.99999999999999 之谜\"></a><a href=\"https://juejin.cn/post/6844904020172079112\">0.57 * 100 === 56.99999999999999 之谜</a></h3><p>为什么 0.1 + 0.2 === 0.30000000000000004, 0.3 - 0.2 === 0.09999999999999998 ?</p>\n<h3 id=\"计算机系统要素-从零开始构建现代计算机\"><a href=\"#计算机系统要素-从零开始构建现代计算机\" class=\"headerlink\" title=\"计算机系统要素-从零开始构建现代计算机\"></a><a href=\"https://github.com/woai3c/nand2tetris\">计算机系统要素-从零开始构建现代计算机</a></h3><p>这本书主要讲解了计算机原理（1-5章）、编译原理（6-11章）、操作系统相关知识（12章）。不要看内容这么多，其实这本书的内容非常通俗易懂，翻译也很给力。每一章背后都有对应的练习，需要你手写代码去完成，堪称理论与实践结合的经典。</p>\n<h3 id=\"̵̵́-̆͒͟˚̩̭-̆͒-̵̵̀-这种一堆符号挤在一起的组合是如何打出来的\"><a href=\"#̵̵́-̆͒͟˚̩̭-̆͒-̵̵̀-这种一堆符号挤在一起的组合是如何打出来的\" class=\"headerlink\" title=\"((̵̵́ ̆͒͟˚̩̭ ̆͒)̵̵̀)这种一堆符号挤在一起的组合是如何打出来的?\"></a><a href=\"https://www.zhihu.com/question/22237075\">((̵̵́ ̆͒͟˚̩̭ ̆͒)̵̵̀)这种一堆符号挤在一起的组合是如何打出来的?</a></h3><p>关于 Unicode 的解释</p>\n<h3 id=\"写给前端的编译原理科普\"><a href=\"#写给前端的编译原理科普\" class=\"headerlink\" title=\"写给前端的编译原理科普\"></a><a href=\"https://zhuanlan.zhihu.com/p/356806174\">写给前端的编译原理科普</a></h3><p>昊昊是一个前端工程师，最近涉及到工程化领域，想了解一些编译的知识。恰好我比他研究的早一些，所以把我了解的东西给他介绍了一遍，于是就有了下面的对话。</p>\n<h3 id=\"人人都是艺术家！谈谈那些奇怪的字符（上）\"><a href=\"#人人都是艺术家！谈谈那些奇怪的字符（上）\" class=\"headerlink\" title=\"人人都是艺术家！谈谈那些奇怪的字符（上）\"></a><a href=\"https://imweb.io/topic/5a08a5c7ef79bc941c30d8dd\">人人都是艺术家！谈谈那些奇怪的字符（上）</a></h3><p>虽然标题中提到了「上」，但是也没有找到「下」在哪里，不过这篇文章还是很不错的，探讨讲解了一些非常奇怪的字符，可以对字符集以及字符编码有一个比较深入的了解</p>\n<h3 id=\"DNS解析的过程是什么，求详细的？\"><a href=\"#DNS解析的过程是什么，求详细的？\" class=\"headerlink\" title=\"DNS解析的过程是什么，求详细的？\"></a><a href=\"https://www.zhihu.com/question/23042131/answer/66571369\">DNS解析的过程是什么，求详细的？</a></h3><p>非常详细的介绍了 DNS 的解析过程，图文并茂，一点都不难理解</p>\n<h3 id=\"什么是正则表达式？\"><a href=\"#什么是正则表达式？\" class=\"headerlink\" title=\"什么是正则表达式？\"></a><a href=\"https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md\">什么是正则表达式？</a></h3><blockquote>\n<p>正则表达式是一组由字母和符号组成的特殊文本，它可以用来从文本中找出满足你想要的格式的句子。</p>\n</blockquote>\n<p>介绍了正则表达式的所有类型的语法</p>\n<h3 id=\"每个前端工程师都应该了解的图片知识-长文建议收藏\"><a href=\"#每个前端工程师都应该了解的图片知识-长文建议收藏\" class=\"headerlink\" title=\"每个前端工程师都应该了解的图片知识(长文建议收藏)\"></a><a href=\"https://mp.weixin.qq.com/s/j6V5CLeHJzU5WxysmnQUqg\">每个前端工程师都应该了解的图片知识(长文建议收藏)</a></h3><p>具体的介绍了关于图片的相关知识，包括图片的基本概念和各种图片格式的优缺点以及使用场景等，还有一些额外知识在这篇文章中：<a href=\"https://mp.weixin.qq.com/s?__biz=MzIxNjM5MDUwMA==&amp;mid=2247483705&amp;idx=1&amp;sn=d74fa52c506fa40f7cc23fe99a8a3fc8&amp;scene=21#wechat_redirect\">一些图片相关的知识</a></p>\n<h3 id=\"详解三次握手和四次挥手：遇到心动的女孩时，如何去把握？\"><a href=\"#详解三次握手和四次挥手：遇到心动的女孩时，如何去把握？\" class=\"headerlink\" title=\"详解三次握手和四次挥手：遇到心动的女孩时，如何去把握？\"></a><a href=\"https://mp.weixin.qq.com/s/dtLzQnJze3S69MqC7DqIpw\">详解三次握手和四次挥手：遇到心动的女孩时，如何去把握？</a></h3><p>三次握手和四次挥手也是前端面试重点，该文章通过一个现实中的例子生动形象地阐述了三次握手和四次挥手的过程，以及为什么要这样设计。</p>\n<h3 id=\"一文读懂http缓存（超详细）\"><a href=\"#一文读懂http缓存（超详细）\" class=\"headerlink\" title=\"一文读懂http缓存（超详细）\"></a><a href=\"https://mp.weixin.qq.com/s/UWSinMVpJeusWABjWvB9mw\">一文读懂http缓存（超详细）</a></h3><p>非常详细的介绍了前端面试中经常提到的 HTTP 缓存相关知识，文章中的一些图和表格总结的都很全面。</p>\n<h3 id=\"自然常数e到底自然在哪？\"><a href=\"#自然常数e到底自然在哪？\" class=\"headerlink\" title=\"自然常数e到底自然在哪？\"></a><a href=\"https://mp.weixin.qq.com/s/yAZiYYJBUJuesBCTUL_tBg\">自然常数e到底自然在哪？</a></h3><p>自然常数e 是一个奇妙的数字，这里的e 并不仅仅代表一个字母，它还是一个数学中的无理常数，约等于2.718281828459。但你是否有想过，它到底怎么来的呢？为啥一个无理数却被人们称之为“自然常数”？看完这篇文章你就会知道。</p>\n<h3 id=\"不要用JWT替代session管理（上）：全面了解Token-JWT-OAuth-SAML-SSO\"><a href=\"#不要用JWT替代session管理（上）：全面了解Token-JWT-OAuth-SAML-SSO\" class=\"headerlink\" title=\"不要用JWT替代session管理（上）：全面了解Token,JWT,OAuth,SAML,SSO\"></a><a href=\"https://zhuanlan.zhihu.com/p/38942172\">不要用JWT替代session管理（上）：全面了解Token,JWT,OAuth,SAML,SSO</a></h3><blockquote>\n<p>通常为了弄清楚一个概念，我们需要掌握十个概念。在判断 JWT (Json Web Token) 是否能代替 session 管理之前，我们要了解什么是 token，以及 access token 和 refresh token 的区别；了解什么是 OAuth，什么是 SSO，SSO 下不同策略 OAuth 和 SAML 的不同，以及 OAuth 与 OpenID 的不同，更重要的是区分 authorisation 和 authentication；最后我们引出 JSON WEB TOKEN，聊聊 JWT　在 session 管理方面的优势和劣势，同时尝试解决这些劣势，看看成本和代价有多少</p>\n</blockquote>\n<h3 id=\"编码简介：utf8-utf16-以及其它\"><a href=\"#编码简介：utf8-utf16-以及其它\" class=\"headerlink\" title=\"编码简介：utf8, utf16 以及其它\"></a><a href=\"https://github.com/creeperyang/blog/issues/4\">编码简介：utf8, utf16 以及其它</a></h3><p>作者对 utf8 和 utf16 以及其它相关知识进行了介绍，前端同学可能很少会关注到字符编码规则，但是有时候我们经常会遇到乱码等问题和 Bug，而在阅读完这篇文章之后，相信你对字符编码这类知识会有一个很深的理解。</p>\n<h3 id=\"可以说的秘密-那些我们该讨论的前端加密方法\"><a href=\"#可以说的秘密-那些我们该讨论的前端加密方法\" class=\"headerlink\" title=\"可以说的秘密-那些我们该讨论的前端加密方法\"></a><a href=\"https://juejin.im/entry/5bc93545e51d450e5f3dceff\">可以说的秘密-那些我们该讨论的前端加密方法</a></h3><p>这篇文章介绍了前端开发中常用的加密方法并给出了其适用场景。包括 Base64 编码、哈希算法、加盐、慢哈希函数、密钥哈希、XOR 和加密（Encrypt）等加密方法，</p>\n<h3 id=\"一个由正则表达式引发的血案（解决版）\"><a href=\"#一个由正则表达式引发的血案（解决版）\" class=\"headerlink\" title=\"一个由正则表达式引发的血案（解决版）\"></a><a href=\"https://zhuanlan.zhihu.com/p/46294360\">一个由正则表达式引发的血案（解决版）</a></h3><p>正则表达式一直以来是广大码农处理字符串的福音，但与此同时，也容易引发血案。这篇文章从一则实例出发，对正则表达式可能引发的 CPU 爆表问题进行了分析，同时作者还介绍了一种遗传算法，该算法解决了如下问题：</p>\n<blockquote>\n<p>给定一个正则引擎和一个正则表达式，为这个正则表达式找到一个攻击字符串，它可以最大化正则引擎的匹配时间。</p>\n</blockquote>\n<p>感兴趣的童鞋可以认真研究一下这篇文章，或者作者发表的论文。</p>\n<h3 id=\"计算的本质：赋值和流的杂谈\"><a href=\"#计算的本质：赋值和流的杂谈\" class=\"headerlink\" title=\"计算的本质：赋值和流的杂谈\"></a><a href=\"https://mp.weixin.qq.com/s/UYOy9dCCci5P_Cc7OVp5sg\">计算的本质：赋值和流的杂谈</a></h3><p>写了这么久的程序，不少人肯定会有疑问，<strong>计算的本质</strong>是什么？对一台图灵机来说，那就是无限长的纸带和能够自如移动的读写头，但这太抽象了。作者换了一种方式去理解计算并总结出了这篇文章，稍微有一些晦涩难懂，不过看完大有裨益。</p>\n","more":"<h3 id=\"随机数\"><a href=\"#随机数\" class=\"headerlink\" title=\"随机数\"></a><a href=\"https://math.haozi.me/random.html\">随机数</a></h3><p>随机数在计算机领域，尤其在密码学领域，有非常重要的应用。</p>\n<p>随机是自然界中很常见但又并不容易理解清楚的概念。比如抛一个硬币，正面或者背面向上的概率理论上各是 1/2。这个貌似是随机的，但是如果我们可以精确观测到抛出的初速度、角度、空气阻力等所有初始化条件，在宏观低速物体上(不讨论量子物理)，是可以提前计算出最后落地的正面还是背面，那这个还算随机吗？</p>\n<h3 id=\"【编码篇】看破字符-20-之谜，百分号编码以及其背后\"><a href=\"#【编码篇】看破字符-20-之谜，百分号编码以及其背后\" class=\"headerlink\" title=\"【编码篇】看破字符 %20 之谜，百分号编码以及其背后\"></a><a href=\"https://juejin.cn/post/7038759212750471199\">【编码篇】看破字符 %20 之谜，百分号编码以及其背后</a></h3><p>提到这个 <code>%20</code>，想必大家都见过，熟悉一点编码的人，还会知道这玩意就是空格转换而来！ 那么我们一起破解， 如何编码而来？</p>\n<h3 id=\"0-57-100-56-99999999999999-之谜\"><a href=\"#0-57-100-56-99999999999999-之谜\" class=\"headerlink\" title=\"0.57 * 100 === 56.99999999999999 之谜\"></a><a href=\"https://juejin.cn/post/6844904020172079112\">0.57 * 100 === 56.99999999999999 之谜</a></h3><p>为什么 0.1 + 0.2 === 0.30000000000000004, 0.3 - 0.2 === 0.09999999999999998 ?</p>\n<h3 id=\"计算机系统要素-从零开始构建现代计算机\"><a href=\"#计算机系统要素-从零开始构建现代计算机\" class=\"headerlink\" title=\"计算机系统要素-从零开始构建现代计算机\"></a><a href=\"https://github.com/woai3c/nand2tetris\">计算机系统要素-从零开始构建现代计算机</a></h3><p>这本书主要讲解了计算机原理（1-5章）、编译原理（6-11章）、操作系统相关知识（12章）。不要看内容这么多，其实这本书的内容非常通俗易懂，翻译也很给力。每一章背后都有对应的练习，需要你手写代码去完成，堪称理论与实践结合的经典。</p>\n<h3 id=\"̵̵́-̆͒͟˚̩̭-̆͒-̵̵̀-这种一堆符号挤在一起的组合是如何打出来的\"><a href=\"#̵̵́-̆͒͟˚̩̭-̆͒-̵̵̀-这种一堆符号挤在一起的组合是如何打出来的\" class=\"headerlink\" title=\"((̵̵́ ̆͒͟˚̩̭ ̆͒)̵̵̀)这种一堆符号挤在一起的组合是如何打出来的?\"></a><a href=\"https://www.zhihu.com/question/22237075\">((̵̵́ ̆͒͟˚̩̭ ̆͒)̵̵̀)这种一堆符号挤在一起的组合是如何打出来的?</a></h3><p>关于 Unicode 的解释</p>\n<h3 id=\"写给前端的编译原理科普\"><a href=\"#写给前端的编译原理科普\" class=\"headerlink\" title=\"写给前端的编译原理科普\"></a><a href=\"https://zhuanlan.zhihu.com/p/356806174\">写给前端的编译原理科普</a></h3><p>昊昊是一个前端工程师，最近涉及到工程化领域，想了解一些编译的知识。恰好我比他研究的早一些，所以把我了解的东西给他介绍了一遍，于是就有了下面的对话。</p>\n<h3 id=\"人人都是艺术家！谈谈那些奇怪的字符（上）\"><a href=\"#人人都是艺术家！谈谈那些奇怪的字符（上）\" class=\"headerlink\" title=\"人人都是艺术家！谈谈那些奇怪的字符（上）\"></a><a href=\"https://imweb.io/topic/5a08a5c7ef79bc941c30d8dd\">人人都是艺术家！谈谈那些奇怪的字符（上）</a></h3><p>虽然标题中提到了「上」，但是也没有找到「下」在哪里，不过这篇文章还是很不错的，探讨讲解了一些非常奇怪的字符，可以对字符集以及字符编码有一个比较深入的了解</p>\n<h3 id=\"DNS解析的过程是什么，求详细的？\"><a href=\"#DNS解析的过程是什么，求详细的？\" class=\"headerlink\" title=\"DNS解析的过程是什么，求详细的？\"></a><a href=\"https://www.zhihu.com/question/23042131/answer/66571369\">DNS解析的过程是什么，求详细的？</a></h3><p>非常详细的介绍了 DNS 的解析过程，图文并茂，一点都不难理解</p>\n<h3 id=\"什么是正则表达式？\"><a href=\"#什么是正则表达式？\" class=\"headerlink\" title=\"什么是正则表达式？\"></a><a href=\"https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md\">什么是正则表达式？</a></h3><blockquote>\n<p>正则表达式是一组由字母和符号组成的特殊文本，它可以用来从文本中找出满足你想要的格式的句子。</p>\n</blockquote>\n<p>介绍了正则表达式的所有类型的语法</p>\n<h3 id=\"每个前端工程师都应该了解的图片知识-长文建议收藏\"><a href=\"#每个前端工程师都应该了解的图片知识-长文建议收藏\" class=\"headerlink\" title=\"每个前端工程师都应该了解的图片知识(长文建议收藏)\"></a><a href=\"https://mp.weixin.qq.com/s/j6V5CLeHJzU5WxysmnQUqg\">每个前端工程师都应该了解的图片知识(长文建议收藏)</a></h3><p>具体的介绍了关于图片的相关知识，包括图片的基本概念和各种图片格式的优缺点以及使用场景等，还有一些额外知识在这篇文章中：<a href=\"https://mp.weixin.qq.com/s?__biz=MzIxNjM5MDUwMA==&amp;mid=2247483705&amp;idx=1&amp;sn=d74fa52c506fa40f7cc23fe99a8a3fc8&amp;scene=21#wechat_redirect\">一些图片相关的知识</a></p>\n<h3 id=\"详解三次握手和四次挥手：遇到心动的女孩时，如何去把握？\"><a href=\"#详解三次握手和四次挥手：遇到心动的女孩时，如何去把握？\" class=\"headerlink\" title=\"详解三次握手和四次挥手：遇到心动的女孩时，如何去把握？\"></a><a href=\"https://mp.weixin.qq.com/s/dtLzQnJze3S69MqC7DqIpw\">详解三次握手和四次挥手：遇到心动的女孩时，如何去把握？</a></h3><p>三次握手和四次挥手也是前端面试重点，该文章通过一个现实中的例子生动形象地阐述了三次握手和四次挥手的过程，以及为什么要这样设计。</p>\n<h3 id=\"一文读懂http缓存（超详细）\"><a href=\"#一文读懂http缓存（超详细）\" class=\"headerlink\" title=\"一文读懂http缓存（超详细）\"></a><a href=\"https://mp.weixin.qq.com/s/UWSinMVpJeusWABjWvB9mw\">一文读懂http缓存（超详细）</a></h3><p>非常详细的介绍了前端面试中经常提到的 HTTP 缓存相关知识，文章中的一些图和表格总结的都很全面。</p>\n<h3 id=\"自然常数e到底自然在哪？\"><a href=\"#自然常数e到底自然在哪？\" class=\"headerlink\" title=\"自然常数e到底自然在哪？\"></a><a href=\"https://mp.weixin.qq.com/s/yAZiYYJBUJuesBCTUL_tBg\">自然常数e到底自然在哪？</a></h3><p>自然常数e 是一个奇妙的数字，这里的e 并不仅仅代表一个字母，它还是一个数学中的无理常数，约等于2.718281828459。但你是否有想过，它到底怎么来的呢？为啥一个无理数却被人们称之为“自然常数”？看完这篇文章你就会知道。</p>\n<h3 id=\"不要用JWT替代session管理（上）：全面了解Token-JWT-OAuth-SAML-SSO\"><a href=\"#不要用JWT替代session管理（上）：全面了解Token-JWT-OAuth-SAML-SSO\" class=\"headerlink\" title=\"不要用JWT替代session管理（上）：全面了解Token,JWT,OAuth,SAML,SSO\"></a><a href=\"https://zhuanlan.zhihu.com/p/38942172\">不要用JWT替代session管理（上）：全面了解Token,JWT,OAuth,SAML,SSO</a></h3><blockquote>\n<p>通常为了弄清楚一个概念，我们需要掌握十个概念。在判断 JWT (Json Web Token) 是否能代替 session 管理之前，我们要了解什么是 token，以及 access token 和 refresh token 的区别；了解什么是 OAuth，什么是 SSO，SSO 下不同策略 OAuth 和 SAML 的不同，以及 OAuth 与 OpenID 的不同，更重要的是区分 authorisation 和 authentication；最后我们引出 JSON WEB TOKEN，聊聊 JWT　在 session 管理方面的优势和劣势，同时尝试解决这些劣势，看看成本和代价有多少</p>\n</blockquote>\n<h3 id=\"编码简介：utf8-utf16-以及其它\"><a href=\"#编码简介：utf8-utf16-以及其它\" class=\"headerlink\" title=\"编码简介：utf8, utf16 以及其它\"></a><a href=\"https://github.com/creeperyang/blog/issues/4\">编码简介：utf8, utf16 以及其它</a></h3><p>作者对 utf8 和 utf16 以及其它相关知识进行了介绍，前端同学可能很少会关注到字符编码规则，但是有时候我们经常会遇到乱码等问题和 Bug，而在阅读完这篇文章之后，相信你对字符编码这类知识会有一个很深的理解。</p>\n<h3 id=\"可以说的秘密-那些我们该讨论的前端加密方法\"><a href=\"#可以说的秘密-那些我们该讨论的前端加密方法\" class=\"headerlink\" title=\"可以说的秘密-那些我们该讨论的前端加密方法\"></a><a href=\"https://juejin.im/entry/5bc93545e51d450e5f3dceff\">可以说的秘密-那些我们该讨论的前端加密方法</a></h3><p>这篇文章介绍了前端开发中常用的加密方法并给出了其适用场景。包括 Base64 编码、哈希算法、加盐、慢哈希函数、密钥哈希、XOR 和加密（Encrypt）等加密方法，</p>\n<h3 id=\"一个由正则表达式引发的血案（解决版）\"><a href=\"#一个由正则表达式引发的血案（解决版）\" class=\"headerlink\" title=\"一个由正则表达式引发的血案（解决版）\"></a><a href=\"https://zhuanlan.zhihu.com/p/46294360\">一个由正则表达式引发的血案（解决版）</a></h3><p>正则表达式一直以来是广大码农处理字符串的福音，但与此同时，也容易引发血案。这篇文章从一则实例出发，对正则表达式可能引发的 CPU 爆表问题进行了分析，同时作者还介绍了一种遗传算法，该算法解决了如下问题：</p>\n<blockquote>\n<p>给定一个正则引擎和一个正则表达式，为这个正则表达式找到一个攻击字符串，它可以最大化正则引擎的匹配时间。</p>\n</blockquote>\n<p>感兴趣的童鞋可以认真研究一下这篇文章，或者作者发表的论文。</p>\n<h3 id=\"计算的本质：赋值和流的杂谈\"><a href=\"#计算的本质：赋值和流的杂谈\" class=\"headerlink\" title=\"计算的本质：赋值和流的杂谈\"></a><a href=\"https://mp.weixin.qq.com/s/UYOy9dCCci5P_Cc7OVp5sg\">计算的本质：赋值和流的杂谈</a></h3><p>写了这么久的程序，不少人肯定会有疑问，<strong>计算的本质</strong>是什么？对一台图灵机来说，那就是无限长的纸带和能够自如移动的读写头，但这太抽象了。作者换了一种方式去理解计算并总结出了这篇文章，稍微有一些晦涩难懂，不过看完大有裨益。</p>\n","categories":[{"name":"推荐","path":"api/categories/推荐.json"}],"tags":[{"name":"计算机","path":"api/tags/计算机.json"}]}