{"title":"JS实现复杂数据结构","slug":"JS实现复杂数据结构","date":"2017-03-26T04:51:34.000Z","updated":"2019-03-29T10:17:04.612Z","comments":true,"path":"api/articles/JS实现复杂数据结构.json","excerpt":null,"covers":null,"content":"<h2 id=\"一、哈希表\"><a href=\"#一、哈希表\" class=\"headerlink\" title=\"一、哈希表\"></a>一、哈希表</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>javascript 里面是没有哈希表的，而在 java、C#、C++ 中会经常用到这一种数据结构，同时在刷 Leetcode 过程中也会经常用到。细细看来，其实 javascript 的 object 的属性与哈希表非常类似。我们只需要在其基础上封装一些 HashTable 的函数，就能够得到一个精简版的哈希表。</p>\n<h3 id=\"加入函数\"><a href=\"#加入函数\" class=\"headerlink\" title=\"加入函数\"></a>加入函数</h3><table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>add(key,value)</td>\n<td>添加项</td>\n<td>无</td>\n</tr>\n<tr>\n<td>getValue(key)</td>\n<td>根据key取值</td>\n<td>object</td>\n</tr>\n<tr>\n<td>remove(key)</td>\n<td>根据key删除一项</td>\n<td>无</td>\n</tr>\n<tr>\n<td>containsKey(key)</td>\n<td>是否包含某个key</td>\n<td>bool</td>\n</tr>\n<tr>\n<td>containsValue(value)</td>\n<td>是否包含某个值</td>\n<td>bool</td>\n</tr>\n<tr>\n<td>getValues()</td>\n<td>获取所有的值的数组</td>\n<td>array</td>\n</tr>\n<tr>\n<td>getKeys()</td>\n<td>获取所有的key的数组</td>\n<td>array</td>\n</tr>\n<tr>\n<td>getSize()</td>\n<td>获取项总数</td>\n<td>int</td>\n</tr>\n<tr>\n<td>clear()</td>\n<td>清空哈希表</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">HashTable</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> size = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> entry = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.add = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key, value</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.containsKey(key)) &#123;</span><br><span class=\"line\">            size++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        entry[key] = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getValue = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.containsKey(key) ? entry[key] : <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.remove = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.containsKey(key) &amp;&amp; (<span class=\"keyword\">delete</span> entry[key])) &#123;</span><br><span class=\"line\">            size--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.containsKey = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (key <span class=\"keyword\">in</span> entry);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.containsValue = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> entry) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (entry[prop] == value) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getValues = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> values = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> entry) &#123;</span><br><span class=\"line\">            values.push(entry[prop]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> values;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getKeys = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> keys = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> entry) &#123;</span><br><span class=\"line\">            keys.push(prop);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> keys;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getSize = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.clear = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        size = <span class=\"number\">0</span>;</span><br><span class=\"line\">        entry = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> manHT = <span class=\"keyword\">new</span> HashTable();</span><br><span class=\"line\">manHT.add(<span class=\"string\">\"p1\"</span>,<span class=\"string\">\"刘备\"</span>);</span><br><span class=\"line\">manHT.add(<span class=\"string\">\"p2\"</span>,<span class=\"string\">\"关羽\"</span>);</span><br><span class=\"line\">$(<span class=\"string\">\"#div1\"</span>).text(manHT.getValue(<span class=\"string\">\"p1\"</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"http://www.cnblogs.com/kissdodog/p/4666352.html\" target=\"_blank\" rel=\"noopener\">javascript 实现HashTable(哈希表)</a></li>\n</ul>\n<h2 id=\"二、栈\"><a href=\"#二、栈\" class=\"headerlink\" title=\"二、栈\"></a>二、栈</h2><h3 id=\"简介-1\"><a href=\"#简介-1\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>栈是一种遵从后进先出原则(LIFO，全称为 Last In First Out)的有序集合。栈顶永远是最新的元素。</p>\n<h3 id=\"加入函数-1\"><a href=\"#加入函数-1\" class=\"headerlink\" title=\"加入函数\"></a>加入函数</h3><table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>push(element(s))</td>\n<td>添加几个元素到栈顶</td>\n<td>无</td>\n</tr>\n<tr>\n<td>pop()</td>\n<td>移除并返回栈顶元素</td>\n<td>object</td>\n</tr>\n<tr>\n<td>peek()</td>\n<td>返回栈顶元素</td>\n<td>object</td>\n</tr>\n<tr>\n<td>isAmpty</td>\n<td>检查栈是否为空</td>\n<td>bool</td>\n</tr>\n<tr>\n<td>clear</td>\n<td>移除栈中所有元素</td>\n<td>无</td>\n</tr>\n<tr>\n<td>size</td>\n<td>返回栈中元素个数</td>\n<td>int</td>\n</tr>\n<tr>\n<td>print</td>\n<td>以字符串显示栈中所有内容</td>\n<td>string</td>\n</tr>\n<tr>\n<td>top</td>\n<td>记录栈顶位置</td>\n<td>int</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"代码实现-1\"><a href=\"#代码实现-1\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Stack</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.dataStore = [];<span class=\"comment\">//保存栈内元素  </span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.top = <span class=\"number\">0</span>; </span><br><span class=\"line\">  <span class=\"keyword\">this</span>.push=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">element</span>) </span>&#123;  </span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dataStore[<span class=\"keyword\">this</span>.top++] = element;<span class=\"comment\">//添加一个元素并将top+1  </span></span><br><span class=\"line\">  &#125;,  </span><br><span class=\"line\">  <span class=\"keyword\">this</span>.peek=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore[<span class=\"keyword\">this</span>.top<span class=\"number\">-1</span>];<span class=\"comment\">//返回栈顶元素  </span></span><br><span class=\"line\">  &#125;,  </span><br><span class=\"line\">  <span class=\"keyword\">this</span>.pop=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore[--<span class=\"keyword\">this</span>.top];<span class=\"comment\">//返回栈顶元素并将top-1  </span></span><br><span class=\"line\">  &#125;,  </span><br><span class=\"line\">  <span class=\"keyword\">this</span>.clear=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">      <span class=\"keyword\">this</span>.top = <span class=\"number\">0</span>;<span class=\"comment\">//将top归0     </span></span><br><span class=\"line\">  &#125;,  </span><br><span class=\"line\">  <span class=\"keyword\">this</span>.size=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.top;<span class=\"comment\">//返回栈内的元素个数  </span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.isAmpty = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore.length === <span class=\"number\">0</span>;<span class=\"comment\">//确定栈是否为空</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.print = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.dataStore.toString());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用示例-1\"><a href=\"#使用示例-1\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> lk=<span class=\"keyword\">new</span> Stack();  </span><br><span class=\"line\">lk.push(<span class=\"string\">\"likeke\"</span>);  </span><br><span class=\"line\">lk.push(<span class=\"string\">\"zhangsan\"</span>);  </span><br><span class=\"line\">lk.push(<span class=\"string\">\"wangwu\"</span>);  </span><br><span class=\"line\">lk.peek();<span class=\"comment\">//\"wangwu\"  </span></span><br><span class=\"line\">lk.size();<span class=\"number\">3</span>  </span><br><span class=\"line\">lk.pop();<span class=\"comment\">//\"wangwu\"  </span></span><br><span class=\"line\">lk.peek();<span class=\"comment\">//\"zhangsan\"  </span></span><br><span class=\"line\">lk.clear();  </span><br><span class=\"line\">lk.peek();<span class=\"comment\">//undefind  </span></span><br><span class=\"line\">lk.size();<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考文章-1\"><a href=\"#参考文章-1\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"https://cobain-li.iteye.com/blog/2335935\" target=\"_blank\" rel=\"noopener\">数据结构与算法－栈篇(js实现)</a></li>\n<li><a href=\"http://www.jb51.net/article/79624.htm\" target=\"_blank\" rel=\"noopener\">JavaScipt中栈的实现方法</a></li>\n</ul>\n<h2 id=\"三、队列\"><a href=\"#三、队列\" class=\"headerlink\" title=\"三、队列\"></a>三、队列</h2><h3 id=\"简介-2\"><a href=\"#简介-2\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>队列是一种先进先出的结构。队列也是一种表结构，不同的是队列只能在队尾插入元素，在队首删除元素；在 JS 中可以用数组来实现队列结构</p>\n<h3 id=\"加入函数-2\"><a href=\"#加入函数-2\" class=\"headerlink\" title=\"加入函数\"></a>加入函数</h3><table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>enqueue</td>\n<td>在队列的末尾添加一个元素</td>\n<td>无</td>\n</tr>\n<tr>\n<td>dequeue</td>\n<td>出队，删除队列的第一个元素并返回</td>\n<td>object</td>\n</tr>\n<tr>\n<td>front</td>\n<td>取出队列的第一个元素</td>\n<td>object</td>\n</tr>\n<tr>\n<td>back</td>\n<td>取出队列的最后一个元素</td>\n<td>object</td>\n</tr>\n<tr>\n<td>toString</td>\n<td>将队列中的元素以字符串形式输出</td>\n<td>string</td>\n</tr>\n<tr>\n<td>empty</td>\n<td>判断队列是否为空</td>\n<td>bool</td>\n</tr>\n<tr>\n<td>count</td>\n<td>返回队列中元素的个数</td>\n<td>int</td>\n</tr>\n<tr>\n<td>clear</td>\n<td>清楚队列</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"代码实现-2\"><a href=\"#代码实现-2\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Queue</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.dataStore = [],<span class=\"comment\">//队列数据</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.enqueue = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; <span class=\"comment\">//入队，就是在数组的末尾添加一个元素</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.dataStore.push(element);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.dequeue = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//出队，就是删除数组的第一个元素</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore.shift();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.front = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//取出数组的第一个元素</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore[<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.back = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//取出数组的最后一个元素</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore[<span class=\"keyword\">this</span>.dataStore.length<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.toString = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//将数组中的元素以字符串形式输出</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> retStr = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;<span class=\"keyword\">this</span>.dataStore.length; ++i) &#123;</span><br><span class=\"line\">            retStr += <span class=\"keyword\">this</span>.dataStore[i] + <span class=\"string\">\"&amp;nbsp;\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> retStr;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.empty = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//判断数组是否为空</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.dataStore.length == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.count = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//返回数组中元素的个数</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore.length;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.clear = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//清除队列</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.dataStore = [];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用示例-2\"><a href=\"#使用示例-2\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> q = <span class=\"keyword\">new</span> Queue();</span><br><span class=\"line\">q.enqueue(<span class=\"string\">\"Meredith\"</span>);</span><br><span class=\"line\">q.enqueue(<span class=\"string\">\"Cynthia\"</span>);</span><br><span class=\"line\">q.enqueue(<span class=\"string\">\"Jennifer\"</span>);</span><br><span class=\"line\">\b<span class=\"built_in\">console</span>.log(q.toString());<span class=\"comment\">//Meredith Cynthia Jennifer</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(q.front());<span class=\"comment\">//Meredith</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(q.back());<span class=\"comment\">//Jennifer</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考文章-2\"><a href=\"#参考文章-2\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"http://www.cnblogs.com/tylerdonet/p/5837730.html\" target=\"_blank\" rel=\"noopener\">javascript中的队列结构</a></li>\n</ul>\n<h2 id=\"四、单链表\"><a href=\"#四、单链表\" class=\"headerlink\" title=\"四、单链表\"></a>四、单链表</h2><h3 id=\"简介-3\"><a href=\"#简介-3\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>单链表是一种链式存取的数据结构。链表中的数据是以结点来表示的，每个结点的构成：元素(数据元素的映象) + 指针(指示后继元素存储位置)，元素就是存储数据的存储单元，指针就是连接每个结点的地址数据。</p>\n<h3 id=\"加入函数-3\"><a href=\"#加入函数-3\" class=\"headerlink\" title=\"加入函数\"></a>加入函数</h3><table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value(_key)</td>\n<td>根据key的值来获取value值</td>\n<td>value</td>\n</tr>\n<tr>\n<td>add(_key,_value)”</td>\n<td>往链表的尾部加入一个节点</td>\n<td>value</td>\n</tr>\n<tr>\n<td>insert(_key,node)”</td>\n<td>从某节点之后插入新节点node</td>\n<td>无</td>\n</tr>\n<tr>\n<td>insertBefore(_key,node)</td>\n<td>从某节点之后插入新节点node</td>\n<td>无</td>\n</tr>\n<tr>\n<td>remove(_key)</td>\n<td>从链表中移除一个key</td>\n<td>无</td>\n</tr>\n<tr>\n<td>removeAt(n)</td>\n<td>删除指定位置的节点</td>\n<td>无</td>\n</tr>\n<tr>\n<td>removeAll</td>\n<td>清空链表</td>\n<td>无</td>\n</tr>\n<tr>\n<td>exists(_key)</td>\n<td>检查链表类中是否存在一个key</td>\n<td>bool</td>\n</tr>\n<tr>\n<td>getJSON</td>\n<td>转换成JSON字符串</td>\n<td>str</td>\n</tr>\n<tr>\n<td>getArrayJSON</td>\n<td>将所有节点的value转换成JSON字符串，数组格式</td>\n<td>array</td>\n</tr>\n<tr>\n<td>getNodeByIndex</td>\n<td>取第N个位置的节点（头节点为第0个位置）</td>\n<td>node</td>\n</tr>\n<tr>\n<td>getNodeByValue</td>\n<td>查询值为V的节点（返回第一个找到的）</td>\n<td>node</td>\n</tr>\n<tr>\n<td>print</td>\n<td>打印输出所有节点</td>\n<td>string</td>\n</tr>\n<tr>\n<td>sort</td>\n<td>对链表进行排序</td>\n<td>无</td>\n</tr>\n<tr>\n<td>hasSameValueNode</td>\n<td>测试单链表L中是否有重复元素</td>\n<td>bool</td>\n</tr>\n<tr>\n<td>reverseSingleLink</td>\n<td>单链表元素反转</td>\n<td>link</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"代码实现-3\"><a href=\"#代码实现-3\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">linkNode</span>(<span class=\"params\">\\_key, \\_value</span>) </span>&#123;<span class=\"comment\">// 链表类的节点类</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.Key = _key;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.Value = _value;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.next = <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Link</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">// 创建一个链表类</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.root = <span class=\"keyword\">new</span> linkNode(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>); <span class=\"comment\">//root永远是个空节点</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.end = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Link.prototype = &#123;</span><br><span class=\"line\">    count: <span class=\"number\">0</span>,<span class=\"comment\">//key的数量</span></span><br><span class=\"line\">    value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">_key</span>) </span>&#123;<span class=\"comment\">//根据key的值来获取value值</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.Key == _key)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> i.Value;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    add: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">\\_key, \\_value</span>) </span>&#123;<span class=\"comment\">// 往链表的尾部中加入一个节点</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.Key == _key)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> i.Value = _value;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> node = <span class=\"keyword\">new</span> linkNode(\\_key, \\_value);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.count == <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.root.next = node;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.end.next = node;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.end = node;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.count++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> _value;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    insert: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">_key, node</span>) </span>&#123;<span class=\"comment\">// 从链表类的某节点之后插入新节点node.</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.Key == _key) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> tmp = i.next;</span><br><span class=\"line\">                i.next = node;</span><br><span class=\"line\">                node.next = tmp;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    insertBefore: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">_key, node</span>) </span>&#123;<span class=\"comment\">// 从链表类的某节点之后插入新节点node.</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.next.Key == _key) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> tmp = i.next;</span><br><span class=\"line\">                i.next = node;</span><br><span class=\"line\">                node.next = tmp;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    remove: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">_key</span>) </span>&#123;<span class=\"comment\">// 从链表类中移除一个key</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">do</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.next.Key == _key) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i.next.next == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">this</span>.end = i;</span><br><span class=\"line\">                i.next = i.next.next;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.count--;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next))</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    removeAt : <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n</span>) </span>&#123;<span class=\"comment\">//删除指定位置的节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> preNode = <span class=\"keyword\">this</span>.getNodeByIndex(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">        preNode.next = preNode.next.next;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    removeAll: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">// 清空链表类</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.root = <span class=\"keyword\">new</span> linkNode(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.end = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    exists: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">_key</span>) </span>&#123;<span class=\"comment\">// 检查链表类中是否存在一个key</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next))</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.Key == _key)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getJSON: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">// 转换成JSON字符串，内部方法，用于递归</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> me = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> getChild = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">node</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">            str += <span class=\"string\">\"&#123;\\\\\"</span>Key\\\\<span class=\"string\">\":\\\\\"</span><span class=\"string\">\" + node.Key + \"</span>\\\\<span class=\"string\">\",\\\\\"</span>Value\\\\<span class=\"string\">\":\"</span> + me.Obj2str(node.Value);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (node.next != <span class=\"literal\">null</span>)</span><br><span class=\"line\">                str += <span class=\"string\">\",\\\\\"</span>next\\\\<span class=\"string\">\":\"</span> + getChild(node.next);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                str += <span class=\"string\">\",\\\\\"</span>next\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">            str += <span class=\"string\">\"&#125;\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> link = <span class=\"string\">\"&#123;\\\\\"</span>root\\\\<span class=\"string\">\":&#123;\\\\\"</span>Key\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\",\\\\\"</span>Value\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\",\\\\\"</span>next\\\\<span class=\"string\">\":\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.count == <span class=\"number\">0</span>)<span class=\"comment\">//如果空表</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"&#123;\\\\\"</span>root\\\\<span class=\"string\">\":&#123;\\\\\"</span>Key\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\",\\\\\"</span>Value\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\",\\\\\"</span>next\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\"&#125;,\\\\\"</span>end\\\\<span class=\"string\">\":&#123;\\\\\"</span>Key\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\",\\\\\"</span>Value\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\",\\\\\"</span>next\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\"&#125;,\\\\\"</span>count\\\\<span class=\"string\">\":\\\\\"</span><span class=\"number\">0</span>\\\\<span class=\"string\">\"&#125;\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        link += getChild(<span class=\"keyword\">this</span>.root.next) + <span class=\"string\">\"&#125;\"</span>;</span><br><span class=\"line\">        <span class=\"comment\">//加上end</span></span><br><span class=\"line\">        link += <span class=\"string\">\",\\\\\"</span>end\\\\<span class=\"string\">\":&#123;\\\\\"</span>Key\\\\<span class=\"string\">\":\\\\\"</span><span class=\"string\">\" + this.end.Key + \"</span>\\\\<span class=\"string\">\",\\\\\"</span>Value\\\\<span class=\"string\">\":\"</span> + me.Obj2str(<span class=\"keyword\">this</span>.end.Value) + <span class=\"string\">\",\\\\\"</span>next\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        link += <span class=\"string\">\"&#125;,\\\\\"</span>count\\\\<span class=\"string\">\":\\\\\"</span><span class=\"string\">\" + this.count + \"</span>\\\\<span class=\"string\">\"&#125;\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> link;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getArrayJSON: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">// 转所有节点的value换成JSON字符串,数组格式</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> link = <span class=\"string\">\"&#123;'link':[\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next)) &#123;</span><br><span class=\"line\">            link += <span class=\"keyword\">this</span>.Obj2str(i.Value) + <span class=\"string\">\",\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        link = link.substr(<span class=\"number\">0</span>, link.length - <span class=\"number\">1</span>);</span><br><span class=\"line\">        link += <span class=\"string\">\"]&#125;\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> link;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getNodeByIndex: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n</span>) </span>&#123;<span class=\"comment\">//取第N个位置的节点(约定头节点为第0个位置)，N大于链表元素个数时，返回最后一个元素</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> p = <span class=\"keyword\">this</span>.head;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next != <span class=\"literal\">null</span> &amp;&amp; i &lt; n) &#123;</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getNodeByValue: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">v</span>) </span>&#123;<span class=\"comment\">//查询值为V的节点，如果链表中有多个相同值的节点，返回第一个找到的</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> p = <span class=\"keyword\">this</span>.head;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (p.data == v) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    print: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">//打印输出所有节点</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> p = <span class=\"keyword\">this</span>.head;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">            print(p.data + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        println(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    sort: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">fn</span>) </span>&#123;<span class=\"comment\">// 对链表进行排序</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (fn != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> j = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(j = j.next)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (j.next != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (fn.call(<span class=\"keyword\">this</span>, j)) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">var</span> Key = j.Key;</span><br><span class=\"line\">                            <span class=\"keyword\">var</span> Value = j.Value;</span><br><span class=\"line\">                            j.Key = j.next.Key;</span><br><span class=\"line\">                            j.Value = j.next.Value;</span><br><span class=\"line\">                            j.next.Key = Key;</span><br><span class=\"line\">                            j.next.Value = Value;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.end = i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">print</span>(<span class=\"params\">msg</span>) </span>&#123;<span class=\"comment\">//打印内容</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.write(msg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">println</span>(<span class=\"params\">msg</span>) </span>&#123;<span class=\"comment\">//换行打印内容</span></span><br><span class=\"line\">    print(msg + <span class=\"string\">\"&lt;br/&gt;\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hasSameValueNode</span>(<span class=\"params\">singleLink</span>) </span>&#123;<span class=\"comment\">//测试单链表L中是否有重复元素</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = singleLink.head;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i.next != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        i = i.next;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> j = i;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (j.next != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            j = j.next;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.data == j.data) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverseSingleLink</span>(<span class=\"params\">singleLink</span>) </span>&#123;<span class=\"comment\">//单链表元素反转</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> p = singleLink.head;</span><br><span class=\"line\">    <span class=\"comment\">//先跑一遍，把所有节点放入数组</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p.next != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        p = p.next;</span><br><span class=\"line\">        arr.push(p.data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newLink = <span class=\"keyword\">new</span> SingleLink();</span><br><span class=\"line\">    <span class=\"comment\">//再从后向前遍历数组,加入新链表</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = arr.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        newLink.insert(arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newLink;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用示例-3\"><a href=\"#使用示例-3\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> linkTest = <span class=\"keyword\">new</span> SingleLink();</span><br><span class=\"line\">    linkTest.insert(<span class=\"string\">'A'</span>);</span><br><span class=\"line\">    linkTest.insert(<span class=\"string\">'B'</span>);</span><br><span class=\"line\">    linkTest.insert(<span class=\"string\">'C'</span>);</span><br><span class=\"line\">    linkTest.insert(<span class=\"string\">'D'</span>);</span><br><span class=\"line\">    linkTest.print();<span class=\"comment\">//A B C D</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">var</span> newLink = reverseSingleLink(linkTest);</span><br><span class=\"line\">    newLink.print();<span class=\"comment\">//D C B A</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考文章-3\"><a href=\"#参考文章-3\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"http://www.cnblogs.com/yjmyzz/archive/2013/05/21/3091653.html\" target=\"_blank\" rel=\"noopener\">javascript:算法笔记</a></li>\n<li><a href=\"http://www.jb51.net/article/38870.htm\" target=\"_blank\" rel=\"noopener\">js单向链表的具体实现实例</a></li>\n</ul>\n","more":"<h2 id=\"一、哈希表\"><a href=\"#一、哈希表\" class=\"headerlink\" title=\"一、哈希表\"></a>一、哈希表</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>javascript 里面是没有哈希表的，而在 java、C#、C++ 中会经常用到这一种数据结构，同时在刷 Leetcode 过程中也会经常用到。细细看来，其实 javascript 的 object 的属性与哈希表非常类似。我们只需要在其基础上封装一些 HashTable 的函数，就能够得到一个精简版的哈希表。</p>\n<h3 id=\"加入函数\"><a href=\"#加入函数\" class=\"headerlink\" title=\"加入函数\"></a>加入函数</h3><table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>add(key,value)</td>\n<td>添加项</td>\n<td>无</td>\n</tr>\n<tr>\n<td>getValue(key)</td>\n<td>根据key取值</td>\n<td>object</td>\n</tr>\n<tr>\n<td>remove(key)</td>\n<td>根据key删除一项</td>\n<td>无</td>\n</tr>\n<tr>\n<td>containsKey(key)</td>\n<td>是否包含某个key</td>\n<td>bool</td>\n</tr>\n<tr>\n<td>containsValue(value)</td>\n<td>是否包含某个值</td>\n<td>bool</td>\n</tr>\n<tr>\n<td>getValues()</td>\n<td>获取所有的值的数组</td>\n<td>array</td>\n</tr>\n<tr>\n<td>getKeys()</td>\n<td>获取所有的key的数组</td>\n<td>array</td>\n</tr>\n<tr>\n<td>getSize()</td>\n<td>获取项总数</td>\n<td>int</td>\n</tr>\n<tr>\n<td>clear()</td>\n<td>清空哈希表</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">HashTable</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> size = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> entry = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.add = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key, value</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.containsKey(key)) &#123;</span><br><span class=\"line\">            size++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        entry[key] = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getValue = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.containsKey(key) ? entry[key] : <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.remove = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.containsKey(key) &amp;&amp; (<span class=\"keyword\">delete</span> entry[key])) &#123;</span><br><span class=\"line\">            size--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.containsKey = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (key <span class=\"keyword\">in</span> entry);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.containsValue = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> entry) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (entry[prop] == value) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getValues = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> values = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> entry) &#123;</span><br><span class=\"line\">            values.push(entry[prop]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> values;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getKeys = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> keys = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> entry) &#123;</span><br><span class=\"line\">            keys.push(prop);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> keys;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getSize = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.clear = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        size = <span class=\"number\">0</span>;</span><br><span class=\"line\">        entry = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> manHT = <span class=\"keyword\">new</span> HashTable();</span><br><span class=\"line\">manHT.add(<span class=\"string\">\"p1\"</span>,<span class=\"string\">\"刘备\"</span>);</span><br><span class=\"line\">manHT.add(<span class=\"string\">\"p2\"</span>,<span class=\"string\">\"关羽\"</span>);</span><br><span class=\"line\">$(<span class=\"string\">\"#div1\"</span>).text(manHT.getValue(<span class=\"string\">\"p1\"</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"http://www.cnblogs.com/kissdodog/p/4666352.html\" target=\"_blank\" rel=\"noopener\">javascript 实现HashTable(哈希表)</a></li>\n</ul>\n<h2 id=\"二、栈\"><a href=\"#二、栈\" class=\"headerlink\" title=\"二、栈\"></a>二、栈</h2><h3 id=\"简介-1\"><a href=\"#简介-1\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>栈是一种遵从后进先出原则(LIFO，全称为 Last In First Out)的有序集合。栈顶永远是最新的元素。</p>\n<h3 id=\"加入函数-1\"><a href=\"#加入函数-1\" class=\"headerlink\" title=\"加入函数\"></a>加入函数</h3><table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>push(element(s))</td>\n<td>添加几个元素到栈顶</td>\n<td>无</td>\n</tr>\n<tr>\n<td>pop()</td>\n<td>移除并返回栈顶元素</td>\n<td>object</td>\n</tr>\n<tr>\n<td>peek()</td>\n<td>返回栈顶元素</td>\n<td>object</td>\n</tr>\n<tr>\n<td>isAmpty</td>\n<td>检查栈是否为空</td>\n<td>bool</td>\n</tr>\n<tr>\n<td>clear</td>\n<td>移除栈中所有元素</td>\n<td>无</td>\n</tr>\n<tr>\n<td>size</td>\n<td>返回栈中元素个数</td>\n<td>int</td>\n</tr>\n<tr>\n<td>print</td>\n<td>以字符串显示栈中所有内容</td>\n<td>string</td>\n</tr>\n<tr>\n<td>top</td>\n<td>记录栈顶位置</td>\n<td>int</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"代码实现-1\"><a href=\"#代码实现-1\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Stack</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.dataStore = [];<span class=\"comment\">//保存栈内元素  </span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.top = <span class=\"number\">0</span>; </span><br><span class=\"line\">  <span class=\"keyword\">this</span>.push=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">element</span>) </span>&#123;  </span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dataStore[<span class=\"keyword\">this</span>.top++] = element;<span class=\"comment\">//添加一个元素并将top+1  </span></span><br><span class=\"line\">  &#125;,  </span><br><span class=\"line\">  <span class=\"keyword\">this</span>.peek=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore[<span class=\"keyword\">this</span>.top<span class=\"number\">-1</span>];<span class=\"comment\">//返回栈顶元素  </span></span><br><span class=\"line\">  &#125;,  </span><br><span class=\"line\">  <span class=\"keyword\">this</span>.pop=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore[--<span class=\"keyword\">this</span>.top];<span class=\"comment\">//返回栈顶元素并将top-1  </span></span><br><span class=\"line\">  &#125;,  </span><br><span class=\"line\">  <span class=\"keyword\">this</span>.clear=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">      <span class=\"keyword\">this</span>.top = <span class=\"number\">0</span>;<span class=\"comment\">//将top归0     </span></span><br><span class=\"line\">  &#125;,  </span><br><span class=\"line\">  <span class=\"keyword\">this</span>.size=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.top;<span class=\"comment\">//返回栈内的元素个数  </span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.isAmpty = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore.length === <span class=\"number\">0</span>;<span class=\"comment\">//确定栈是否为空</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.print = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.dataStore.toString());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用示例-1\"><a href=\"#使用示例-1\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> lk=<span class=\"keyword\">new</span> Stack();  </span><br><span class=\"line\">lk.push(<span class=\"string\">\"likeke\"</span>);  </span><br><span class=\"line\">lk.push(<span class=\"string\">\"zhangsan\"</span>);  </span><br><span class=\"line\">lk.push(<span class=\"string\">\"wangwu\"</span>);  </span><br><span class=\"line\">lk.peek();<span class=\"comment\">//\"wangwu\"  </span></span><br><span class=\"line\">lk.size();<span class=\"number\">3</span>  </span><br><span class=\"line\">lk.pop();<span class=\"comment\">//\"wangwu\"  </span></span><br><span class=\"line\">lk.peek();<span class=\"comment\">//\"zhangsan\"  </span></span><br><span class=\"line\">lk.clear();  </span><br><span class=\"line\">lk.peek();<span class=\"comment\">//undefind  </span></span><br><span class=\"line\">lk.size();<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考文章-1\"><a href=\"#参考文章-1\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"https://cobain-li.iteye.com/blog/2335935\" target=\"_blank\" rel=\"noopener\">数据结构与算法－栈篇(js实现)</a></li>\n<li><a href=\"http://www.jb51.net/article/79624.htm\" target=\"_blank\" rel=\"noopener\">JavaScipt中栈的实现方法</a></li>\n</ul>\n<h2 id=\"三、队列\"><a href=\"#三、队列\" class=\"headerlink\" title=\"三、队列\"></a>三、队列</h2><h3 id=\"简介-2\"><a href=\"#简介-2\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>队列是一种先进先出的结构。队列也是一种表结构，不同的是队列只能在队尾插入元素，在队首删除元素；在 JS 中可以用数组来实现队列结构</p>\n<h3 id=\"加入函数-2\"><a href=\"#加入函数-2\" class=\"headerlink\" title=\"加入函数\"></a>加入函数</h3><table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>enqueue</td>\n<td>在队列的末尾添加一个元素</td>\n<td>无</td>\n</tr>\n<tr>\n<td>dequeue</td>\n<td>出队，删除队列的第一个元素并返回</td>\n<td>object</td>\n</tr>\n<tr>\n<td>front</td>\n<td>取出队列的第一个元素</td>\n<td>object</td>\n</tr>\n<tr>\n<td>back</td>\n<td>取出队列的最后一个元素</td>\n<td>object</td>\n</tr>\n<tr>\n<td>toString</td>\n<td>将队列中的元素以字符串形式输出</td>\n<td>string</td>\n</tr>\n<tr>\n<td>empty</td>\n<td>判断队列是否为空</td>\n<td>bool</td>\n</tr>\n<tr>\n<td>count</td>\n<td>返回队列中元素的个数</td>\n<td>int</td>\n</tr>\n<tr>\n<td>clear</td>\n<td>清楚队列</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"代码实现-2\"><a href=\"#代码实现-2\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Queue</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.dataStore = [],<span class=\"comment\">//队列数据</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.enqueue = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; <span class=\"comment\">//入队，就是在数组的末尾添加一个元素</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.dataStore.push(element);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.dequeue = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//出队，就是删除数组的第一个元素</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore.shift();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.front = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//取出数组的第一个元素</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore[<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.back = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//取出数组的最后一个元素</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore[<span class=\"keyword\">this</span>.dataStore.length<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.toString = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//将数组中的元素以字符串形式输出</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> retStr = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;<span class=\"keyword\">this</span>.dataStore.length; ++i) &#123;</span><br><span class=\"line\">            retStr += <span class=\"keyword\">this</span>.dataStore[i] + <span class=\"string\">\"&amp;nbsp;\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> retStr;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.empty = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//判断数组是否为空</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.dataStore.length == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.count = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//返回数组中元素的个数</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataStore.length;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.clear = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//清除队列</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.dataStore = [];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用示例-2\"><a href=\"#使用示例-2\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> q = <span class=\"keyword\">new</span> Queue();</span><br><span class=\"line\">q.enqueue(<span class=\"string\">\"Meredith\"</span>);</span><br><span class=\"line\">q.enqueue(<span class=\"string\">\"Cynthia\"</span>);</span><br><span class=\"line\">q.enqueue(<span class=\"string\">\"Jennifer\"</span>);</span><br><span class=\"line\">\b<span class=\"built_in\">console</span>.log(q.toString());<span class=\"comment\">//Meredith Cynthia Jennifer</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(q.front());<span class=\"comment\">//Meredith</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(q.back());<span class=\"comment\">//Jennifer</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考文章-2\"><a href=\"#参考文章-2\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"http://www.cnblogs.com/tylerdonet/p/5837730.html\" target=\"_blank\" rel=\"noopener\">javascript中的队列结构</a></li>\n</ul>\n<h2 id=\"四、单链表\"><a href=\"#四、单链表\" class=\"headerlink\" title=\"四、单链表\"></a>四、单链表</h2><h3 id=\"简介-3\"><a href=\"#简介-3\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>单链表是一种链式存取的数据结构。链表中的数据是以结点来表示的，每个结点的构成：元素(数据元素的映象) + 指针(指示后继元素存储位置)，元素就是存储数据的存储单元，指针就是连接每个结点的地址数据。</p>\n<h3 id=\"加入函数-3\"><a href=\"#加入函数-3\" class=\"headerlink\" title=\"加入函数\"></a>加入函数</h3><table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value(_key)</td>\n<td>根据key的值来获取value值</td>\n<td>value</td>\n</tr>\n<tr>\n<td>add(_key,_value)”</td>\n<td>往链表的尾部加入一个节点</td>\n<td>value</td>\n</tr>\n<tr>\n<td>insert(_key,node)”</td>\n<td>从某节点之后插入新节点node</td>\n<td>无</td>\n</tr>\n<tr>\n<td>insertBefore(_key,node)</td>\n<td>从某节点之后插入新节点node</td>\n<td>无</td>\n</tr>\n<tr>\n<td>remove(_key)</td>\n<td>从链表中移除一个key</td>\n<td>无</td>\n</tr>\n<tr>\n<td>removeAt(n)</td>\n<td>删除指定位置的节点</td>\n<td>无</td>\n</tr>\n<tr>\n<td>removeAll</td>\n<td>清空链表</td>\n<td>无</td>\n</tr>\n<tr>\n<td>exists(_key)</td>\n<td>检查链表类中是否存在一个key</td>\n<td>bool</td>\n</tr>\n<tr>\n<td>getJSON</td>\n<td>转换成JSON字符串</td>\n<td>str</td>\n</tr>\n<tr>\n<td>getArrayJSON</td>\n<td>将所有节点的value转换成JSON字符串，数组格式</td>\n<td>array</td>\n</tr>\n<tr>\n<td>getNodeByIndex</td>\n<td>取第N个位置的节点（头节点为第0个位置）</td>\n<td>node</td>\n</tr>\n<tr>\n<td>getNodeByValue</td>\n<td>查询值为V的节点（返回第一个找到的）</td>\n<td>node</td>\n</tr>\n<tr>\n<td>print</td>\n<td>打印输出所有节点</td>\n<td>string</td>\n</tr>\n<tr>\n<td>sort</td>\n<td>对链表进行排序</td>\n<td>无</td>\n</tr>\n<tr>\n<td>hasSameValueNode</td>\n<td>测试单链表L中是否有重复元素</td>\n<td>bool</td>\n</tr>\n<tr>\n<td>reverseSingleLink</td>\n<td>单链表元素反转</td>\n<td>link</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"代码实现-3\"><a href=\"#代码实现-3\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">linkNode</span>(<span class=\"params\">\\_key, \\_value</span>) </span>&#123;<span class=\"comment\">// 链表类的节点类</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.Key = _key;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.Value = _value;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.next = <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Link</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">// 创建一个链表类</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.root = <span class=\"keyword\">new</span> linkNode(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>); <span class=\"comment\">//root永远是个空节点</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.end = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Link.prototype = &#123;</span><br><span class=\"line\">    count: <span class=\"number\">0</span>,<span class=\"comment\">//key的数量</span></span><br><span class=\"line\">    value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">_key</span>) </span>&#123;<span class=\"comment\">//根据key的值来获取value值</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.Key == _key)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> i.Value;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    add: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">\\_key, \\_value</span>) </span>&#123;<span class=\"comment\">// 往链表的尾部中加入一个节点</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.Key == _key)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> i.Value = _value;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> node = <span class=\"keyword\">new</span> linkNode(\\_key, \\_value);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.count == <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.root.next = node;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.end.next = node;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.end = node;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.count++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> _value;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    insert: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">_key, node</span>) </span>&#123;<span class=\"comment\">// 从链表类的某节点之后插入新节点node.</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.Key == _key) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> tmp = i.next;</span><br><span class=\"line\">                i.next = node;</span><br><span class=\"line\">                node.next = tmp;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    insertBefore: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">_key, node</span>) </span>&#123;<span class=\"comment\">// 从链表类的某节点之后插入新节点node.</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.next.Key == _key) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> tmp = i.next;</span><br><span class=\"line\">                i.next = node;</span><br><span class=\"line\">                node.next = tmp;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    remove: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">_key</span>) </span>&#123;<span class=\"comment\">// 从链表类中移除一个key</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">do</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.next.Key == _key) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i.next.next == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">this</span>.end = i;</span><br><span class=\"line\">                i.next = i.next.next;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.count--;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next))</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    removeAt : <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n</span>) </span>&#123;<span class=\"comment\">//删除指定位置的节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> preNode = <span class=\"keyword\">this</span>.getNodeByIndex(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">        preNode.next = preNode.next.next;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    removeAll: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">// 清空链表类</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.root = <span class=\"keyword\">new</span> linkNode(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.end = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    exists: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">_key</span>) </span>&#123;<span class=\"comment\">// 检查链表类中是否存在一个key</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next))</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.Key == _key)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getJSON: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">// 转换成JSON字符串，内部方法，用于递归</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> me = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> getChild = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">node</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">            str += <span class=\"string\">\"&#123;\\\\\"</span>Key\\\\<span class=\"string\">\":\\\\\"</span><span class=\"string\">\" + node.Key + \"</span>\\\\<span class=\"string\">\",\\\\\"</span>Value\\\\<span class=\"string\">\":\"</span> + me.Obj2str(node.Value);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (node.next != <span class=\"literal\">null</span>)</span><br><span class=\"line\">                str += <span class=\"string\">\",\\\\\"</span>next\\\\<span class=\"string\">\":\"</span> + getChild(node.next);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                str += <span class=\"string\">\",\\\\\"</span>next\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">            str += <span class=\"string\">\"&#125;\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> link = <span class=\"string\">\"&#123;\\\\\"</span>root\\\\<span class=\"string\">\":&#123;\\\\\"</span>Key\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\",\\\\\"</span>Value\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\",\\\\\"</span>next\\\\<span class=\"string\">\":\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.count == <span class=\"number\">0</span>)<span class=\"comment\">//如果空表</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"&#123;\\\\\"</span>root\\\\<span class=\"string\">\":&#123;\\\\\"</span>Key\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\",\\\\\"</span>Value\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\",\\\\\"</span>next\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\"&#125;,\\\\\"</span>end\\\\<span class=\"string\">\":&#123;\\\\\"</span>Key\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\",\\\\\"</span>Value\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\",\\\\\"</span>next\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\"&#125;,\\\\\"</span>count\\\\<span class=\"string\">\":\\\\\"</span><span class=\"number\">0</span>\\\\<span class=\"string\">\"&#125;\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        link += getChild(<span class=\"keyword\">this</span>.root.next) + <span class=\"string\">\"&#125;\"</span>;</span><br><span class=\"line\">        <span class=\"comment\">//加上end</span></span><br><span class=\"line\">        link += <span class=\"string\">\",\\\\\"</span>end\\\\<span class=\"string\">\":&#123;\\\\\"</span>Key\\\\<span class=\"string\">\":\\\\\"</span><span class=\"string\">\" + this.end.Key + \"</span>\\\\<span class=\"string\">\",\\\\\"</span>Value\\\\<span class=\"string\">\":\"</span> + me.Obj2str(<span class=\"keyword\">this</span>.end.Value) + <span class=\"string\">\",\\\\\"</span>next\\\\<span class=\"string\">\":\\\\\"</span><span class=\"literal\">null</span>\\\\<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        link += <span class=\"string\">\"&#125;,\\\\\"</span>count\\\\<span class=\"string\">\":\\\\\"</span><span class=\"string\">\" + this.count + \"</span>\\\\<span class=\"string\">\"&#125;\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> link;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getArrayJSON: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">// 转所有节点的value换成JSON字符串,数组格式</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> link = <span class=\"string\">\"&#123;'link':[\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next)) &#123;</span><br><span class=\"line\">            link += <span class=\"keyword\">this</span>.Obj2str(i.Value) + <span class=\"string\">\",\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        link = link.substr(<span class=\"number\">0</span>, link.length - <span class=\"number\">1</span>);</span><br><span class=\"line\">        link += <span class=\"string\">\"]&#125;\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> link;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getNodeByIndex: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n</span>) </span>&#123;<span class=\"comment\">//取第N个位置的节点(约定头节点为第0个位置)，N大于链表元素个数时，返回最后一个元素</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> p = <span class=\"keyword\">this</span>.head;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next != <span class=\"literal\">null</span> &amp;&amp; i &lt; n) &#123;</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getNodeByValue: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">v</span>) </span>&#123;<span class=\"comment\">//查询值为V的节点，如果链表中有多个相同值的节点，返回第一个找到的</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> p = <span class=\"keyword\">this</span>.head;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (p.data == v) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> p;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    print: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">//打印输出所有节点</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> p = <span class=\"keyword\">this</span>.head;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">            print(p.data + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        println(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    sort: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">fn</span>) </span>&#123;<span class=\"comment\">// 对链表进行排序</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (fn != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> i = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(i = i.next)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> j = <span class=\"keyword\">this</span>.root;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (<span class=\"built_in\">Boolean</span>(j = j.next)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (j.next != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (fn.call(<span class=\"keyword\">this</span>, j)) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">var</span> Key = j.Key;</span><br><span class=\"line\">                            <span class=\"keyword\">var</span> Value = j.Value;</span><br><span class=\"line\">                            j.Key = j.next.Key;</span><br><span class=\"line\">                            j.Value = j.next.Value;</span><br><span class=\"line\">                            j.next.Key = Key;</span><br><span class=\"line\">                            j.next.Value = Value;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.end = i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">print</span>(<span class=\"params\">msg</span>) </span>&#123;<span class=\"comment\">//打印内容</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.write(msg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">println</span>(<span class=\"params\">msg</span>) </span>&#123;<span class=\"comment\">//换行打印内容</span></span><br><span class=\"line\">    print(msg + <span class=\"string\">\"&lt;br/&gt;\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hasSameValueNode</span>(<span class=\"params\">singleLink</span>) </span>&#123;<span class=\"comment\">//测试单链表L中是否有重复元素</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = singleLink.head;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i.next != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        i = i.next;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> j = i;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (j.next != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            j = j.next;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i.data == j.data) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverseSingleLink</span>(<span class=\"params\">singleLink</span>) </span>&#123;<span class=\"comment\">//单链表元素反转</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> p = singleLink.head;</span><br><span class=\"line\">    <span class=\"comment\">//先跑一遍，把所有节点放入数组</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p.next != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        p = p.next;</span><br><span class=\"line\">        arr.push(p.data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newLink = <span class=\"keyword\">new</span> SingleLink();</span><br><span class=\"line\">    <span class=\"comment\">//再从后向前遍历数组,加入新链表</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = arr.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        newLink.insert(arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newLink;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用示例-3\"><a href=\"#使用示例-3\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> linkTest = <span class=\"keyword\">new</span> SingleLink();</span><br><span class=\"line\">    linkTest.insert(<span class=\"string\">'A'</span>);</span><br><span class=\"line\">    linkTest.insert(<span class=\"string\">'B'</span>);</span><br><span class=\"line\">    linkTest.insert(<span class=\"string\">'C'</span>);</span><br><span class=\"line\">    linkTest.insert(<span class=\"string\">'D'</span>);</span><br><span class=\"line\">    linkTest.print();<span class=\"comment\">//A B C D</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">var</span> newLink = reverseSingleLink(linkTest);</span><br><span class=\"line\">    newLink.print();<span class=\"comment\">//D C B A</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"参考文章-3\"><a href=\"#参考文章-3\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"http://www.cnblogs.com/yjmyzz/archive/2013/05/21/3091653.html\" target=\"_blank\" rel=\"noopener\">javascript:算法笔记</a></li>\n<li><a href=\"http://www.jb51.net/article/38870.htm\" target=\"_blank\" rel=\"noopener\">js单向链表的具体实现实例</a></li>\n</ul>\n","categories":[{"name":"JS","path":"api/categories/JS.json"}],"tags":[{"name":"JS","path":"api/tags/JS.json"},{"name":"计算机基础","path":"api/tags/计算机基础.json"},{"name":"数据结构","path":"api/tags/数据结构.json"}]}