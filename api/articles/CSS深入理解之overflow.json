{"title":"CSS深入理解之overflow","slug":"CSS深入理解之overflow","date":"2017-04-21T13:29:13.000Z","updated":"2019-03-29T10:17:04.612Z","comments":true,"path":"api/articles/CSS深入理解之overflow.json","excerpt":null,"covers":["/images/hexo_post_124.png","/images/hexo_post_68.png"],"content":"<h2 id=\"1-overflow-起作用的前提\"><a href=\"#1-overflow-起作用的前提\" class=\"headerlink\" title=\"1. overflow 起作用的前提\"></a>1. overflow 起作用的前提</h2><ol>\n<li>非 display:inline水 平</li>\n<li>对应方位的尺寸限制 .width / height / max-width / max-height / absolute 拉伸</li>\n<li>对于单元格 td 等，还需要 table 为 table-layout:fixed 状态才行</li>\n</ol>\n<p><strong>Tips</strong>: 如果 overflow-x，overflow-y 相同，则等同于 overflow；如果不同，其中一个为 visible，另外一个为 auto / hidden / scroll，则 visible 会重置为 auto</p>\n<h2 id=\"2-JS-与滚动高度\"><a href=\"#2-JS-与滚动高度\" class=\"headerlink\" title=\"2. JS 与滚动高度\"></a>2. JS 与滚动高度</h2><p>无论什么浏览器，默认滚动条均来自 <code>&lt;html&gt;</code>，而不是 <code>&lt;body&gt;</code> 标签.所以，如果想要去除页面默认滚动条，只需要 <strong>html{ overflow: hidden }</strong>，而没必要把 <code>&lt;body&gt;</code> 也拉下水。</p>\n<h3 id=\"关于scrollTop\"><a href=\"#关于scrollTop\" class=\"headerlink\" title=\"关于scrollTop\"></a>关于scrollTop</h3><p>Chrome 浏览器: document.body.scrollTop<br>其他浏览器: document.documentElement.scrollTop</p>\n<p>目前，两者不会同时存在，建议使用: </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> st = <span class=\"built_in\">document</span>.body.scrollTop || <span class=\"built_in\">document</span>.documentElement.scrollTop</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-水平居中跳动问题的修复\"><a href=\"#3-水平居中跳动问题的修复\" class=\"headerlink\" title=\"3. 水平居中跳动问题的修复\"></a>3. 水平居中跳动问题的修复</h2><p>由于滚动条会使网页可用内容宽度变小，所以水平居中的页面出现滚动条时会有跳动的问题，解决方案： </p>\n<ol>\n<li>html{ overflow-y: scroll } // 滚动栏一直存在</li>\n<li>container{ padding-left: calc(100vw - 100%) } // <strong>100vw-浏览器宽度;100%-可用内容宽度</strong></li>\n</ol>\n<h2 id=\"4-iOS-原生滚动回调效果\"><a href=\"#4-iOS-原生滚动回调效果\" class=\"headerlink\" title=\"4. iOS 原生滚动回调效果:\"></a>4. iOS 原生滚动回调效果:</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">-webkit-overflow-scrolling</span><span class=\"selector-pseudo\">:touch</span>;</span><br></pre></td></tr></table></figure>\n<p>会使滚动出现缓冲效果</p>\n<h2 id=\"5-overflow-与块状格式上下文\"><a href=\"#5-overflow-与块状格式上下文\" class=\"headerlink\" title=\"5. overflow 与块状格式上下文\"></a>5. overflow 与块状格式上下文</h2><h3 id=\"两栏自适应布局\"><a href=\"#两栏自适应布局\" class=\"headerlink\" title=\"两栏自适应布局\"></a>两栏自适应布局</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.cell</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table-cell;</span><br><span class=\"line\">  width: 2000px; // IE8+ BFC特性</span><br><span class=\"line\">  <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">inline-block</span>;</span><br><span class=\"line\">  width: auto; // IE7- 伪BFC特性</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>只适用于 block 属性的元素，之间的空隙推荐使用浮动元素的 margin 来实现</p>\n<h3 id=\"父元素设置-overflow-scroll-overflow-auto-overflow-hidden，可以解决父元素因内部浮动塌陷问题。\"><a href=\"#父元素设置-overflow-scroll-overflow-auto-overflow-hidden，可以解决父元素因内部浮动塌陷问题。\" class=\"headerlink\" title=\"父元素设置 overflow: scroll; overflow: auto; overflow:hidden，可以解决父元素因内部浮动塌陷问题。\"></a>父元素设置 overflow: scroll; overflow: auto; overflow:hidden，可以解决父元素因内部浮动塌陷问题。</h3><p>更多请参见：<a href=\"http://harttle.com/2016/05/11/block-formatting-context.html\" target=\"_blank\" rel=\"noopener\">overflow 与布局上下文（BFC）</a></p>\n<h2 id=\"6-overflow-与-absolute-绝对定位\"><a href=\"#6-overflow-与-absolute-绝对定位\" class=\"headerlink\" title=\"6. overflow 与 absolute 绝对定位\"></a>6. overflow 与 absolute 绝对定位</h2><p>overflow: hidden 在子元素绝对定位失效，可以理解成，父元素与子元素所在的层级不一样了，子元素完全脱离文档流了，因而无法被剪裁。而给父元素加上除 static 以外的定位属性（使之成为包含块），只不过是提高了父元素的层级，从而约束绝对定位的表现。使之可以被溢出隐藏</p>\n<h3 id=\"如何避免-overflow-失效\"><a href=\"#如何避免-overflow-失效\" class=\"headerlink\" title=\"如何避免 overflow 失效?\"></a>如何避免 overflow 失效?</h3><ol>\n<li>overflow 元素自身为包含块;</li>\n<li>overflow 元素的子元素为包含块;</li>\n<li>任意合法 transform 声明当作包含块;</li>\n</ol>\n<h4 id=\"overflow-元素自身-transform\"><a href=\"#overflow-元素自身-transform\" class=\"headerlink\" title=\"overflow 元素自身 transform:\"></a>overflow 元素自身 transform:</h4><ul>\n<li>IE9+/Firefox √</li>\n<li>Chrome/Safari(win)/Opera ×</li>\n</ul>\n<h4 id=\"overflow-子元素-transform\"><a href=\"#overflow-子元素-transform\" class=\"headerlink\" title=\"overflow 子元素 transform\"></a>overflow 子元素 transform</h4><ul>\n<li>IE9+/Firefox √</li>\n<li>Chrome/Safari(win)/Opera √</li>\n</ul>\n<p>动态渲染异常: Chrome 包含块重定位 / Opera 同，但点击重绘自修正 / Safari 非定位 overflow 元素左上角</p>\n<h3 id=\"overflow-失效妙用\"><a href=\"#overflow-失效妙用\" class=\"headerlink\" title=\"overflow 失效妙用\"></a>overflow 失效妙用</h3><p>右侧图片会紧挨左侧内容，并实现自适应跟随，<code>&amp;nbsp</code> 可以辅助将图片设置在右方；将 <code>&amp;nbsp</code> 的高度设置为 0 以及 overflow: hidden 可以让 <code>&amp;nbsp</code> 不影响布局，但图片是绝对定位，不会受 overflow: hidden 影响：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_124.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"7-依赖-overflow-的样式表现\"><a href=\"#7-依赖-overflow-的样式表现\" class=\"headerlink\" title=\"7. 依赖 overflow 的样式表现\"></a>7. 依赖 overflow 的样式表现</h2><h3 id=\"resize\"><a href=\"#resize\" class=\"headerlink\" title=\"resize\"></a>resize</h3><p>可以拉伸元素尺寸，但是，此声明要想起作用，元素的 overflow 属性值不能是 visible</p>\n<h3 id=\"text-overflow-ellipsis\"><a href=\"#text-overflow-ellipsis\" class=\"headerlink\" title=\"text-overflow:ellipsis\"></a>text-overflow:ellipsis</h3><p>文本溢出时用 … 代替，经常与 white-space: nowrap 一起使用，但是，<strong>不设置 overflow: hidden 属性，无法实现效果</strong></p>\n<h2 id=\"8-overflow-与锚点技术\"><a href=\"#8-overflow-与锚点技术\" class=\"headerlink\" title=\"8. overflow 与锚点技术\"></a>8. overflow 与锚点技术</h2><h3 id=\"锚点定位\"><a href=\"#锚点定位\" class=\"headerlink\" title=\"锚点定位:\"></a>锚点定位:</h3><p>寻找妹子5: <code>&lt;a href=&quot;#mm5&quot;&gt;</code></p>\n<h3 id=\"锚点定位实现的前提\"><a href=\"#锚点定位实现的前提\" class=\"headerlink\" title=\"锚点定位实现的前提:\"></a>锚点定位实现的前提:</h3><ul>\n<li>容器可滚动;</li>\n<li>锚点元素在容器内;</li>\n</ul>\n<h3 id=\"锚点定位的本质\"><a href=\"#锚点定位的本质\" class=\"headerlink\" title=\"锚点定位的本质\"></a>锚点定位的本质</h3><ol>\n<li>触发锚点定位;</li>\n<li>锚点元素通过 scrollTop 值改变向上偏移定位;</li>\n<li>锚元素的上边缘和可滚动容器上边缘对齐</li>\n</ol>\n<h3 id=\"锚点定位的触发\"><a href=\"#锚点定位的触发\" class=\"headerlink\" title=\"锚点定位的触发\"></a>锚点定位的触发</h3><ul>\n<li>url 地址中的锚链与锚点元素;</li>\n<li>可 focus 的锚点元素处于 focus 态</li>\n</ul>\n<h3 id=\"锚点定位的作用\"><a href=\"#锚点定位的作用\" class=\"headerlink\" title=\"锚点定位的作用\"></a>锚点定位的作用</h3><ul>\n<li>快速定位</li>\n<li>选项卡技术(有严重的不足)</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_68.png\" alt=\"\" width=\"400\"></div>","more":"<h2 id=\"1-overflow-起作用的前提\"><a href=\"#1-overflow-起作用的前提\" class=\"headerlink\" title=\"1. overflow 起作用的前提\"></a>1. overflow 起作用的前提</h2><ol>\n<li>非 display:inline水 平</li>\n<li>对应方位的尺寸限制 .width / height / max-width / max-height / absolute 拉伸</li>\n<li>对于单元格 td 等，还需要 table 为 table-layout:fixed 状态才行</li>\n</ol>\n<p><strong>Tips</strong>: 如果 overflow-x，overflow-y 相同，则等同于 overflow；如果不同，其中一个为 visible，另外一个为 auto / hidden / scroll，则 visible 会重置为 auto</p>\n<h2 id=\"2-JS-与滚动高度\"><a href=\"#2-JS-与滚动高度\" class=\"headerlink\" title=\"2. JS 与滚动高度\"></a>2. JS 与滚动高度</h2><p>无论什么浏览器，默认滚动条均来自 <code>&lt;html&gt;</code>，而不是 <code>&lt;body&gt;</code> 标签.所以，如果想要去除页面默认滚动条，只需要 <strong>html{ overflow: hidden }</strong>，而没必要把 <code>&lt;body&gt;</code> 也拉下水。</p>\n<h3 id=\"关于scrollTop\"><a href=\"#关于scrollTop\" class=\"headerlink\" title=\"关于scrollTop\"></a>关于scrollTop</h3><p>Chrome 浏览器: document.body.scrollTop<br>其他浏览器: document.documentElement.scrollTop</p>\n<p>目前，两者不会同时存在，建议使用: </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> st = <span class=\"built_in\">document</span>.body.scrollTop || <span class=\"built_in\">document</span>.documentElement.scrollTop</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-水平居中跳动问题的修复\"><a href=\"#3-水平居中跳动问题的修复\" class=\"headerlink\" title=\"3. 水平居中跳动问题的修复\"></a>3. 水平居中跳动问题的修复</h2><p>由于滚动条会使网页可用内容宽度变小，所以水平居中的页面出现滚动条时会有跳动的问题，解决方案： </p>\n<ol>\n<li>html{ overflow-y: scroll } // 滚动栏一直存在</li>\n<li>container{ padding-left: calc(100vw - 100%) } // <strong>100vw-浏览器宽度;100%-可用内容宽度</strong></li>\n</ol>\n<h2 id=\"4-iOS-原生滚动回调效果\"><a href=\"#4-iOS-原生滚动回调效果\" class=\"headerlink\" title=\"4. iOS 原生滚动回调效果:\"></a>4. iOS 原生滚动回调效果:</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">-webkit-overflow-scrolling</span><span class=\"selector-pseudo\">:touch</span>;</span><br></pre></td></tr></table></figure>\n<p>会使滚动出现缓冲效果</p>\n<h2 id=\"5-overflow-与块状格式上下文\"><a href=\"#5-overflow-与块状格式上下文\" class=\"headerlink\" title=\"5. overflow 与块状格式上下文\"></a>5. overflow 与块状格式上下文</h2><h3 id=\"两栏自适应布局\"><a href=\"#两栏自适应布局\" class=\"headerlink\" title=\"两栏自适应布局\"></a>两栏自适应布局</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.cell</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table-cell;</span><br><span class=\"line\">  width: 2000px; // IE8+ BFC特性</span><br><span class=\"line\">  <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">inline-block</span>;</span><br><span class=\"line\">  width: auto; // IE7- 伪BFC特性</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>只适用于 block 属性的元素，之间的空隙推荐使用浮动元素的 margin 来实现</p>\n<h3 id=\"父元素设置-overflow-scroll-overflow-auto-overflow-hidden，可以解决父元素因内部浮动塌陷问题。\"><a href=\"#父元素设置-overflow-scroll-overflow-auto-overflow-hidden，可以解决父元素因内部浮动塌陷问题。\" class=\"headerlink\" title=\"父元素设置 overflow: scroll; overflow: auto; overflow:hidden，可以解决父元素因内部浮动塌陷问题。\"></a>父元素设置 overflow: scroll; overflow: auto; overflow:hidden，可以解决父元素因内部浮动塌陷问题。</h3><p>更多请参见：<a href=\"http://harttle.com/2016/05/11/block-formatting-context.html\" target=\"_blank\" rel=\"noopener\">overflow 与布局上下文（BFC）</a></p>\n<h2 id=\"6-overflow-与-absolute-绝对定位\"><a href=\"#6-overflow-与-absolute-绝对定位\" class=\"headerlink\" title=\"6. overflow 与 absolute 绝对定位\"></a>6. overflow 与 absolute 绝对定位</h2><p>overflow: hidden 在子元素绝对定位失效，可以理解成，父元素与子元素所在的层级不一样了，子元素完全脱离文档流了，因而无法被剪裁。而给父元素加上除 static 以外的定位属性（使之成为包含块），只不过是提高了父元素的层级，从而约束绝对定位的表现。使之可以被溢出隐藏</p>\n<h3 id=\"如何避免-overflow-失效\"><a href=\"#如何避免-overflow-失效\" class=\"headerlink\" title=\"如何避免 overflow 失效?\"></a>如何避免 overflow 失效?</h3><ol>\n<li>overflow 元素自身为包含块;</li>\n<li>overflow 元素的子元素为包含块;</li>\n<li>任意合法 transform 声明当作包含块;</li>\n</ol>\n<h4 id=\"overflow-元素自身-transform\"><a href=\"#overflow-元素自身-transform\" class=\"headerlink\" title=\"overflow 元素自身 transform:\"></a>overflow 元素自身 transform:</h4><ul>\n<li>IE9+/Firefox √</li>\n<li>Chrome/Safari(win)/Opera ×</li>\n</ul>\n<h4 id=\"overflow-子元素-transform\"><a href=\"#overflow-子元素-transform\" class=\"headerlink\" title=\"overflow 子元素 transform\"></a>overflow 子元素 transform</h4><ul>\n<li>IE9+/Firefox √</li>\n<li>Chrome/Safari(win)/Opera √</li>\n</ul>\n<p>动态渲染异常: Chrome 包含块重定位 / Opera 同，但点击重绘自修正 / Safari 非定位 overflow 元素左上角</p>\n<h3 id=\"overflow-失效妙用\"><a href=\"#overflow-失效妙用\" class=\"headerlink\" title=\"overflow 失效妙用\"></a>overflow 失效妙用</h3><p>右侧图片会紧挨左侧内容，并实现自适应跟随，<code>&amp;nbsp</code> 可以辅助将图片设置在右方；将 <code>&amp;nbsp</code> 的高度设置为 0 以及 overflow: hidden 可以让 <code>&amp;nbsp</code> 不影响布局，但图片是绝对定位，不会受 overflow: hidden 影响：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_124.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"7-依赖-overflow-的样式表现\"><a href=\"#7-依赖-overflow-的样式表现\" class=\"headerlink\" title=\"7. 依赖 overflow 的样式表现\"></a>7. 依赖 overflow 的样式表现</h2><h3 id=\"resize\"><a href=\"#resize\" class=\"headerlink\" title=\"resize\"></a>resize</h3><p>可以拉伸元素尺寸，但是，此声明要想起作用，元素的 overflow 属性值不能是 visible</p>\n<h3 id=\"text-overflow-ellipsis\"><a href=\"#text-overflow-ellipsis\" class=\"headerlink\" title=\"text-overflow:ellipsis\"></a>text-overflow:ellipsis</h3><p>文本溢出时用 … 代替，经常与 white-space: nowrap 一起使用，但是，<strong>不设置 overflow: hidden 属性，无法实现效果</strong></p>\n<h2 id=\"8-overflow-与锚点技术\"><a href=\"#8-overflow-与锚点技术\" class=\"headerlink\" title=\"8. overflow 与锚点技术\"></a>8. overflow 与锚点技术</h2><h3 id=\"锚点定位\"><a href=\"#锚点定位\" class=\"headerlink\" title=\"锚点定位:\"></a>锚点定位:</h3><p>寻找妹子5: <code>&lt;a href=&quot;#mm5&quot;&gt;</code></p>\n<h3 id=\"锚点定位实现的前提\"><a href=\"#锚点定位实现的前提\" class=\"headerlink\" title=\"锚点定位实现的前提:\"></a>锚点定位实现的前提:</h3><ul>\n<li>容器可滚动;</li>\n<li>锚点元素在容器内;</li>\n</ul>\n<h3 id=\"锚点定位的本质\"><a href=\"#锚点定位的本质\" class=\"headerlink\" title=\"锚点定位的本质\"></a>锚点定位的本质</h3><ol>\n<li>触发锚点定位;</li>\n<li>锚点元素通过 scrollTop 值改变向上偏移定位;</li>\n<li>锚元素的上边缘和可滚动容器上边缘对齐</li>\n</ol>\n<h3 id=\"锚点定位的触发\"><a href=\"#锚点定位的触发\" class=\"headerlink\" title=\"锚点定位的触发\"></a>锚点定位的触发</h3><ul>\n<li>url 地址中的锚链与锚点元素;</li>\n<li>可 focus 的锚点元素处于 focus 态</li>\n</ul>\n<h3 id=\"锚点定位的作用\"><a href=\"#锚点定位的作用\" class=\"headerlink\" title=\"锚点定位的作用\"></a>锚点定位的作用</h3><ul>\n<li>快速定位</li>\n<li>选项卡技术(有严重的不足)</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_68.png\" alt=\"\" width=\"400\"></div>","categories":[{"name":"CSS","path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]}