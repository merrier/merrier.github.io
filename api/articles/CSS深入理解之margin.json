{"title":"CSS深入理解之margin","slug":"CSS深入理解之margin","date":"2017-04-20T14:58:44.000Z","updated":"2019-02-10T15:06:51.066Z","comments":true,"path":"api/articles/CSS深入理解之margin.json","excerpt":null,"covers":["/images/hexo_post_80.png","/images/hexo_post_59.png","/images/hexo_post_84.png","/images/hexo_post_78.png","/images/hexo_post_56.png","/images/hexo_post_66.png","/images/hexo_post_73.png","/images/hexo_post_118.png","/images/hexo_post_116.png","/images/hexo_post_117.png","/images/hexo_post_109.png","/images/hexo_post_67.png","/images/hexo_post_69.png"],"content":"<h2 id=\"1-margin-与容器的尺寸\"><a href=\"#1-margin-与容器的尺寸\" class=\"headerlink\" title=\"1. margin 与容器的尺寸\"></a>1. margin 与容器的尺寸</h2><ul>\n<li>适用于没有设定 width / height 的普通 block 水平元素(float 元素，absolute / fixed 元素，inline 水平，table-cell 元素虽然 block 化，但是不是普通的 block 水平元素)</li>\n<li>只适用于水平方向尺寸</li>\n<li>一侧定宽的自适应布局</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_80.png\" alt=\"\" width=\"400\"></div>\n\n<ul>\n<li>滚动容器内上下留白</li>\n</ul>\n<p>外部容器设置 padding 值，只有 chrome 才会有留白，此时可以在给内部容器设置 margin 值</p>\n<div align=\"center\"><img src=\"/images/hexo_post_59.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"2-margin-与百分比单位\"><a href=\"#2-margin-与百分比单位\" class=\"headerlink\" title=\"2. margin 与百分比单位\"></a>2. margin 与百分比单位</h2><h3 id=\"计算规则\"><a href=\"#计算规则\" class=\"headerlink\" title=\"计算规则\"></a>计算规则</h3><p>普通元素的百分比 margin 都是相对于容器的宽度计算的，绝对定位元素的百分比 margin 是相对于第一个定位祖先元素(relative / absolute / fixed)的宽度计算的</p>\n<h3 id=\"应用-宽度-2-1-自适应矩形\"><a href=\"#应用-宽度-2-1-自适应矩形\" class=\"headerlink\" title=\"应用-宽度 2:1 自适应矩形\"></a>应用-宽度 2:1 自适应矩形</h3><p>由于 margin 百分比的计算规则是相对于容器进行计算的，而 margin 又可以影响普通 block 水平元素的可视尺寸，所以当设置为 margin: 50% 时，由于 margin 重叠特性，所以会让元素的宽高始终保持 2:1 的比例</p>\n<div align=\"center\"><img src=\"/images/hexo_post_84.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"3-margin-重叠\"><a href=\"#3-margin-重叠\" class=\"headerlink\" title=\"3. margin 重叠\"></a>3. margin 重叠</h2><h3 id=\"通常特性\"><a href=\"#通常特性\" class=\"headerlink\" title=\"通常特性\"></a>通常特性</h3><p>发生在 block 水平元素（不包括 float 和 absolute 元素） 不考虑 writing-mode，只发生在垂直方向（margin-top / margin-bottom）</p>\n<h3 id=\"3-种情境\"><a href=\"#3-种情境\" class=\"headerlink\" title=\"3 种情境\"></a>3 种情境</h3><h4 id=\"相邻的兄弟元素\"><a href=\"#相邻的兄弟元素\" class=\"headerlink\" title=\"相邻的兄弟元素\"></a>相邻的兄弟元素</h4><div align=\"center\"><img src=\"/images/hexo_post_78.png\" alt=\"\" width=\"400\"></div>\n\n<h4 id=\"父级和第一个-最后一个子元素\"><a href=\"#父级和第一个-最后一个子元素\" class=\"headerlink\" title=\"父级和第一个 / 最后一个子元素\"></a>父级和第一个 / 最后一个子元素</h4><p>下面这3种书写形式的效果是相同的，都是子元素向下偏移了 80px，而父级的尺寸并没有改变</p>\n<div align=\"center\"><img src=\"/images/hexo_post_56.png\" alt=\"\" width=\"400\"></div>\n\n<p>父子 margin 重叠的其他条件</p>\n<p><strong>margin-top 重叠：</strong></p>\n<ol>\n<li>父元素非块状格式化上下文元素</li>\n<li>父元素没有 border-top 设置</li>\n<li>父元素没有 padding-top 值</li>\n<li>父元素和第一个子元素之间没有 inline 元素分隔</li>\n</ol>\n<p><strong>margin-bottom 重叠：</strong></p>\n<ol>\n<li>父元素非块状格式化上下文元素</li>\n<li>父元素没有 border-bottom 设置</li>\n<li>父元素没有 padding-bottom 值</li>\n<li>父元素没有和最后一个子元素之间没有 inline 元素分隔</li>\n<li>父元素没有 height，min-height，max-height 限制</li>\n</ol>\n<h4 id=\"空的-block-元素\"><a href=\"#空的-block-元素\" class=\"headerlink\" title=\"空的 block 元素\"></a>空的 block 元素</h4><div align=\"center\"><img src=\"/images/hexo_post_66.png\" alt=\"\" width=\"400\"></div>\n\n<p><strong>空的 block 元素 margin 重叠其他条件：</strong></p>\n<ol>\n<li>元素没有 border 设置</li>\n<li>元素没有 padding 值</li>\n<li>里面没有 inline 元素</li>\n<li>没有 height，或者 min-height</li>\n</ol>\n<h3 id=\"margin-重叠计算规则\"><a href=\"#margin-重叠计算规则\" class=\"headerlink\" title=\"margin 重叠计算规则\"></a>margin 重叠计算规则</h3><ul>\n<li>正正取大值：50 和 20 –&gt; 50</li>\n<li>正负值相加：50 和 -20 –&gt; 30</li>\n<li>负负最负值：-50 和 -30 –&gt; -50</li>\n</ul>\n<h3 id=\"margin-重叠的意义\"><a href=\"#margin-重叠的意义\" class=\"headerlink\" title=\"margin 重叠的意义\"></a>margin 重叠的意义</h3><ol>\n<li>连续段落或列表之类，如果没有 margin 重叠，首尾项间距会和其他兄弟标签 1:2 关系，排版不自然</li>\n<li>web 中任何地方嵌套或直接放入任何裸 div，都不会影响原来的布局</li>\n<li>遗落的空任意多个 <code>&lt;p&gt;</code> 元素，不要影响原来的阅读排版</li>\n</ol>\n<h3 id=\"善用-margin-重叠\"><a href=\"#善用-margin-重叠\" class=\"headerlink\" title=\"善用 margin 重叠\"></a>善用 margin 重叠</h3><div align=\"center\"><img src=\"/images/hexo_post_73.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"4-margin-auto\"><a href=\"#4-margin-auto\" class=\"headerlink\" title=\"4. margin auto\"></a>4. margin auto</h2><p>如果一侧定值，一侧 auto，auto 为剩余空间大小；如果两侧都是 auto，则平分剩余空间(居中显示)，但是不能计算负值</p>\n<h3 id=\"writing-mode-与垂直居中\"><a href=\"#writing-mode-与垂直居中\" class=\"headerlink\" title=\"writing-mode 与垂直居中\"></a>writing-mode 与垂直居中</h3><p>更改流为垂直方向，实现垂直方向的 margin: auto 居中</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.father</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">writing-mode</span>: vertical-lr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.son</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"absolut-与-margin-居中\"><a href=\"#absolut-与-margin-居中\" class=\"headerlink\" title=\"absolut 与 margin 居中\"></a>absolut 与 margin 居中</h3><p><code>top:0; right:0; bottom:0; left:0;</code> 会使子元素的宽度和高度拉伸到与父元素相同大小，当没有 width / height 属性时，absolute 元素自动填满了容器；但设置了 width / height 属性后，会限制 absolute 元素自动填满容器，此时 margin: auto 就会自动平分被变更的尺寸空间，从而实现子元素的水平垂直居中</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.father</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.son</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-margin-负值定位\"><a href=\"#5-margin-负值定位\" class=\"headerlink\" title=\"5. margin 负值定位\"></a>5. margin 负值定位</h2><h3 id=\"margin-负值下的两端对齐\"><a href=\"#margin-负值下的两端对齐\" class=\"headerlink\" title=\"margin 负值下的两端对齐\"></a>margin 负值下的两端对齐</h3><p>margin 可以改变元素尺寸</p>\n<div align=\"center\"><img src=\"/images/hexo_post_118.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"margin-负值下的等高布局\"><a href=\"#margin-负值下的等高布局\" class=\"headerlink\" title=\"margin 负值下的等高布局\"></a>margin 负值下的等高布局</h3><p>margin 改变元素占据空间：给每个框设置大的底部内边距，然后用数值相似的负外边距消除这个高度。这会导致每一列溢出容器元素，如果把外包容器的 overflow 属性设为 hidden，列就在最高点被裁切</p>\n<div align=\"center\"><img src=\"/images/hexo_post_116.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"margin-负值下的两栏自适应布局\"><a href=\"#margin-负值下的两栏自适应布局\" class=\"headerlink\" title=\"margin 负值下的两栏自适应布局\"></a>margin 负值下的两栏自适应布局</h3><p>元素占据空间跟随 margin 移动</p>\n<div align=\"center\"><img src=\"/images/hexo_post_117.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"6-margin-无效情形解析\"><a href=\"#6-margin-无效情形解析\" class=\"headerlink\" title=\"6. margin 无效情形解析\"></a>6. margin 无效情形解析</h2><h3 id=\"inline-元素的垂直-margin-无效\"><a href=\"#inline-元素的垂直-margin-无效\" class=\"headerlink\" title=\"inline 元素的垂直 margin 无效\"></a>inline 元素的垂直 margin 无效</h3><p>前提：</p>\n<ul>\n<li>非替换元素：替换元素为 <code>&lt;img&gt;</code> <code>&lt;button&gt;</code> 元素</li>\n<li>正常书写模式</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_109.png\" alt=\"\" width=\"400\"></div>\n\n<div align=\"center\"><img src=\"/images/hexo_post_67.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"margin-重叠\"><a href=\"#margin-重叠\" class=\"headerlink\" title=\"margin 重叠\"></a>margin 重叠</h3><p>上面讲过了</p>\n<h3 id=\"display-table-cell-与-margin\"><a href=\"#display-table-cell-与-margin\" class=\"headerlink\" title=\"display: table-cell 与 margin\"></a>display: table-cell 与 margin</h3><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/margin\" target=\"_blank\" rel=\"noopener\">MDN上的解释</a>：</p>\n<blockquote>\n<p>除了 display 为 table 相关类型（不包括 table-caption，table 以及 inline-table）的所有，甚至也可应用于 ::first-letter</p>\n</blockquote>\n<h3 id=\"position-absolute-与-margin\"><a href=\"#position-absolute-与-margin\" class=\"headerlink\" title=\"position: absolute 与 margin\"></a>position: absolute 与 margin</h3><p>绝对定位元素<strong>非定位方位</strong>的 margin 值”无效”，绝对定位的 margin 值一直有效，只是不像普通元素那样，可以和兄弟元素插科打诨!</p>\n<h3 id=\"鞭长莫及导致的-margin-无效\"><a href=\"#鞭长莫及导致的-margin-无效\" class=\"headerlink\" title=\"鞭长莫及导致的 margin 无效\"></a>鞭长莫及导致的 margin 无效</h3><p>浮动元素和绝对定位元素会破坏布局，此时的 margin-left 会从整个父容器的左侧开始算起，所以当 margin-left 值小于图片的宽度的时候，会看不到效果，但其实是有效的</p>\n<h3 id=\"内联特性导致的-margin-无效\"><a href=\"#内联特性导致的-margin-无效\" class=\"headerlink\" title=\"内联特性导致的 margin 无效\"></a>内联特性导致的 margin 无效</h3><p>内联元素默认基线对齐(vertical-align: baseline)，当 margin-top 是一个很大的负值的时候，由于字母 x (内敛元素)的拖累(x 没有添加任何样式，所以不会跑到父容器外面)，内联元素仍然在与 x 基线对齐的位置</p>\n<div align=\"center\"><img src=\"/images/hexo_post_69.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"7-margin-start-和-margin-end\"><a href=\"#7-margin-start-和-margin-end\" class=\"headerlink\" title=\"7. margin-start 和 margin-end\"></a>7. margin-start 和 margin-end</h2><p>正常流下：</p>\n<ul>\n<li>margin-start –&gt; margin-left</li>\n<li>margin-end –&gt; margin-right</li>\n<li>margin-before –&gt; margin-top</li>\n<li>margin-after –&gt; margin-bottom</li>\n</ul>\n<p>如果水平流是从右往左，margin-start 等同于 margin-right<br>在垂直流下（writing-mode: vertical-*），margin-start 等同于 margin-top</p>\n<h2 id=\"8-margin-collapse\"><a href=\"#8-margin-collapse\" class=\"headerlink\" title=\"8. margin-collapse\"></a>8. margin-collapse</h2><p>决定 margin 重叠时该如何表现</p>\n<blockquote>\n<p>-webkit-margin-collapse:<collapse> | <discard> | <separate></separate></discard></collapse></p>\n</blockquote>\n<ul>\n<li>collapse（默认-重叠）</li>\n<li>discard（取消）–&gt; 此时 margin 将变为 0</li>\n<li>separate（分隔）–&gt; 此时 margin 将不再重叠，而是相加</li>\n</ul>\n","more":"<h2 id=\"1-margin-与容器的尺寸\"><a href=\"#1-margin-与容器的尺寸\" class=\"headerlink\" title=\"1. margin 与容器的尺寸\"></a>1. margin 与容器的尺寸</h2><ul>\n<li>适用于没有设定 width / height 的普通 block 水平元素(float 元素，absolute / fixed 元素，inline 水平，table-cell 元素虽然 block 化，但是不是普通的 block 水平元素)</li>\n<li>只适用于水平方向尺寸</li>\n<li>一侧定宽的自适应布局</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_80.png\" alt=\"\" width=\"400\"></div>\n\n<ul>\n<li>滚动容器内上下留白</li>\n</ul>\n<p>外部容器设置 padding 值，只有 chrome 才会有留白，此时可以在给内部容器设置 margin 值</p>\n<div align=\"center\"><img src=\"/images/hexo_post_59.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"2-margin-与百分比单位\"><a href=\"#2-margin-与百分比单位\" class=\"headerlink\" title=\"2. margin 与百分比单位\"></a>2. margin 与百分比单位</h2><h3 id=\"计算规则\"><a href=\"#计算规则\" class=\"headerlink\" title=\"计算规则\"></a>计算规则</h3><p>普通元素的百分比 margin 都是相对于容器的宽度计算的，绝对定位元素的百分比 margin 是相对于第一个定位祖先元素(relative / absolute / fixed)的宽度计算的</p>\n<h3 id=\"应用-宽度-2-1-自适应矩形\"><a href=\"#应用-宽度-2-1-自适应矩形\" class=\"headerlink\" title=\"应用-宽度 2:1 自适应矩形\"></a>应用-宽度 2:1 自适应矩形</h3><p>由于 margin 百分比的计算规则是相对于容器进行计算的，而 margin 又可以影响普通 block 水平元素的可视尺寸，所以当设置为 margin: 50% 时，由于 margin 重叠特性，所以会让元素的宽高始终保持 2:1 的比例</p>\n<div align=\"center\"><img src=\"/images/hexo_post_84.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"3-margin-重叠\"><a href=\"#3-margin-重叠\" class=\"headerlink\" title=\"3. margin 重叠\"></a>3. margin 重叠</h2><h3 id=\"通常特性\"><a href=\"#通常特性\" class=\"headerlink\" title=\"通常特性\"></a>通常特性</h3><p>发生在 block 水平元素（不包括 float 和 absolute 元素） 不考虑 writing-mode，只发生在垂直方向（margin-top / margin-bottom）</p>\n<h3 id=\"3-种情境\"><a href=\"#3-种情境\" class=\"headerlink\" title=\"3 种情境\"></a>3 种情境</h3><h4 id=\"相邻的兄弟元素\"><a href=\"#相邻的兄弟元素\" class=\"headerlink\" title=\"相邻的兄弟元素\"></a>相邻的兄弟元素</h4><div align=\"center\"><img src=\"/images/hexo_post_78.png\" alt=\"\" width=\"400\"></div>\n\n<h4 id=\"父级和第一个-最后一个子元素\"><a href=\"#父级和第一个-最后一个子元素\" class=\"headerlink\" title=\"父级和第一个 / 最后一个子元素\"></a>父级和第一个 / 最后一个子元素</h4><p>下面这3种书写形式的效果是相同的，都是子元素向下偏移了 80px，而父级的尺寸并没有改变</p>\n<div align=\"center\"><img src=\"/images/hexo_post_56.png\" alt=\"\" width=\"400\"></div>\n\n<p>父子 margin 重叠的其他条件</p>\n<p><strong>margin-top 重叠：</strong></p>\n<ol>\n<li>父元素非块状格式化上下文元素</li>\n<li>父元素没有 border-top 设置</li>\n<li>父元素没有 padding-top 值</li>\n<li>父元素和第一个子元素之间没有 inline 元素分隔</li>\n</ol>\n<p><strong>margin-bottom 重叠：</strong></p>\n<ol>\n<li>父元素非块状格式化上下文元素</li>\n<li>父元素没有 border-bottom 设置</li>\n<li>父元素没有 padding-bottom 值</li>\n<li>父元素没有和最后一个子元素之间没有 inline 元素分隔</li>\n<li>父元素没有 height，min-height，max-height 限制</li>\n</ol>\n<h4 id=\"空的-block-元素\"><a href=\"#空的-block-元素\" class=\"headerlink\" title=\"空的 block 元素\"></a>空的 block 元素</h4><div align=\"center\"><img src=\"/images/hexo_post_66.png\" alt=\"\" width=\"400\"></div>\n\n<p><strong>空的 block 元素 margin 重叠其他条件：</strong></p>\n<ol>\n<li>元素没有 border 设置</li>\n<li>元素没有 padding 值</li>\n<li>里面没有 inline 元素</li>\n<li>没有 height，或者 min-height</li>\n</ol>\n<h3 id=\"margin-重叠计算规则\"><a href=\"#margin-重叠计算规则\" class=\"headerlink\" title=\"margin 重叠计算规则\"></a>margin 重叠计算规则</h3><ul>\n<li>正正取大值：50 和 20 –&gt; 50</li>\n<li>正负值相加：50 和 -20 –&gt; 30</li>\n<li>负负最负值：-50 和 -30 –&gt; -50</li>\n</ul>\n<h3 id=\"margin-重叠的意义\"><a href=\"#margin-重叠的意义\" class=\"headerlink\" title=\"margin 重叠的意义\"></a>margin 重叠的意义</h3><ol>\n<li>连续段落或列表之类，如果没有 margin 重叠，首尾项间距会和其他兄弟标签 1:2 关系，排版不自然</li>\n<li>web 中任何地方嵌套或直接放入任何裸 div，都不会影响原来的布局</li>\n<li>遗落的空任意多个 <code>&lt;p&gt;</code> 元素，不要影响原来的阅读排版</li>\n</ol>\n<h3 id=\"善用-margin-重叠\"><a href=\"#善用-margin-重叠\" class=\"headerlink\" title=\"善用 margin 重叠\"></a>善用 margin 重叠</h3><div align=\"center\"><img src=\"/images/hexo_post_73.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"4-margin-auto\"><a href=\"#4-margin-auto\" class=\"headerlink\" title=\"4. margin auto\"></a>4. margin auto</h2><p>如果一侧定值，一侧 auto，auto 为剩余空间大小；如果两侧都是 auto，则平分剩余空间(居中显示)，但是不能计算负值</p>\n<h3 id=\"writing-mode-与垂直居中\"><a href=\"#writing-mode-与垂直居中\" class=\"headerlink\" title=\"writing-mode 与垂直居中\"></a>writing-mode 与垂直居中</h3><p>更改流为垂直方向，实现垂直方向的 margin: auto 居中</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.father</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">writing-mode</span>: vertical-lr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.son</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"absolut-与-margin-居中\"><a href=\"#absolut-与-margin-居中\" class=\"headerlink\" title=\"absolut 与 margin 居中\"></a>absolut 与 margin 居中</h3><p><code>top:0; right:0; bottom:0; left:0;</code> 会使子元素的宽度和高度拉伸到与父元素相同大小，当没有 width / height 属性时，absolute 元素自动填满了容器；但设置了 width / height 属性后，会限制 absolute 元素自动填满容器，此时 margin: auto 就会自动平分被变更的尺寸空间，从而实现子元素的水平垂直居中</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.father</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.son</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-margin-负值定位\"><a href=\"#5-margin-负值定位\" class=\"headerlink\" title=\"5. margin 负值定位\"></a>5. margin 负值定位</h2><h3 id=\"margin-负值下的两端对齐\"><a href=\"#margin-负值下的两端对齐\" class=\"headerlink\" title=\"margin 负值下的两端对齐\"></a>margin 负值下的两端对齐</h3><p>margin 可以改变元素尺寸</p>\n<div align=\"center\"><img src=\"/images/hexo_post_118.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"margin-负值下的等高布局\"><a href=\"#margin-负值下的等高布局\" class=\"headerlink\" title=\"margin 负值下的等高布局\"></a>margin 负值下的等高布局</h3><p>margin 改变元素占据空间：给每个框设置大的底部内边距，然后用数值相似的负外边距消除这个高度。这会导致每一列溢出容器元素，如果把外包容器的 overflow 属性设为 hidden，列就在最高点被裁切</p>\n<div align=\"center\"><img src=\"/images/hexo_post_116.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"margin-负值下的两栏自适应布局\"><a href=\"#margin-负值下的两栏自适应布局\" class=\"headerlink\" title=\"margin 负值下的两栏自适应布局\"></a>margin 负值下的两栏自适应布局</h3><p>元素占据空间跟随 margin 移动</p>\n<div align=\"center\"><img src=\"/images/hexo_post_117.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"6-margin-无效情形解析\"><a href=\"#6-margin-无效情形解析\" class=\"headerlink\" title=\"6. margin 无效情形解析\"></a>6. margin 无效情形解析</h2><h3 id=\"inline-元素的垂直-margin-无效\"><a href=\"#inline-元素的垂直-margin-无效\" class=\"headerlink\" title=\"inline 元素的垂直 margin 无效\"></a>inline 元素的垂直 margin 无效</h3><p>前提：</p>\n<ul>\n<li>非替换元素：替换元素为 <code>&lt;img&gt;</code> <code>&lt;button&gt;</code> 元素</li>\n<li>正常书写模式</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_109.png\" alt=\"\" width=\"400\"></div>\n\n<div align=\"center\"><img src=\"/images/hexo_post_67.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"margin-重叠\"><a href=\"#margin-重叠\" class=\"headerlink\" title=\"margin 重叠\"></a>margin 重叠</h3><p>上面讲过了</p>\n<h3 id=\"display-table-cell-与-margin\"><a href=\"#display-table-cell-与-margin\" class=\"headerlink\" title=\"display: table-cell 与 margin\"></a>display: table-cell 与 margin</h3><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/margin\" target=\"_blank\" rel=\"noopener\">MDN上的解释</a>：</p>\n<blockquote>\n<p>除了 display 为 table 相关类型（不包括 table-caption，table 以及 inline-table）的所有，甚至也可应用于 ::first-letter</p>\n</blockquote>\n<h3 id=\"position-absolute-与-margin\"><a href=\"#position-absolute-与-margin\" class=\"headerlink\" title=\"position: absolute 与 margin\"></a>position: absolute 与 margin</h3><p>绝对定位元素<strong>非定位方位</strong>的 margin 值”无效”，绝对定位的 margin 值一直有效，只是不像普通元素那样，可以和兄弟元素插科打诨!</p>\n<h3 id=\"鞭长莫及导致的-margin-无效\"><a href=\"#鞭长莫及导致的-margin-无效\" class=\"headerlink\" title=\"鞭长莫及导致的 margin 无效\"></a>鞭长莫及导致的 margin 无效</h3><p>浮动元素和绝对定位元素会破坏布局，此时的 margin-left 会从整个父容器的左侧开始算起，所以当 margin-left 值小于图片的宽度的时候，会看不到效果，但其实是有效的</p>\n<h3 id=\"内联特性导致的-margin-无效\"><a href=\"#内联特性导致的-margin-无效\" class=\"headerlink\" title=\"内联特性导致的 margin 无效\"></a>内联特性导致的 margin 无效</h3><p>内联元素默认基线对齐(vertical-align: baseline)，当 margin-top 是一个很大的负值的时候，由于字母 x (内敛元素)的拖累(x 没有添加任何样式，所以不会跑到父容器外面)，内联元素仍然在与 x 基线对齐的位置</p>\n<div align=\"center\"><img src=\"/images/hexo_post_69.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"7-margin-start-和-margin-end\"><a href=\"#7-margin-start-和-margin-end\" class=\"headerlink\" title=\"7. margin-start 和 margin-end\"></a>7. margin-start 和 margin-end</h2><p>正常流下：</p>\n<ul>\n<li>margin-start –&gt; margin-left</li>\n<li>margin-end –&gt; margin-right</li>\n<li>margin-before –&gt; margin-top</li>\n<li>margin-after –&gt; margin-bottom</li>\n</ul>\n<p>如果水平流是从右往左，margin-start 等同于 margin-right<br>在垂直流下（writing-mode: vertical-*），margin-start 等同于 margin-top</p>\n<h2 id=\"8-margin-collapse\"><a href=\"#8-margin-collapse\" class=\"headerlink\" title=\"8. margin-collapse\"></a>8. margin-collapse</h2><p>决定 margin 重叠时该如何表现</p>\n<blockquote>\n<p>-webkit-margin-collapse:<collapse> | <discard> | <separate></separate></discard></collapse></p>\n</blockquote>\n<ul>\n<li>collapse（默认-重叠）</li>\n<li>discard（取消）–&gt; 此时 margin 将变为 0</li>\n<li>separate（分隔）–&gt; 此时 margin 将不再重叠，而是相加</li>\n</ul>\n","categories":[{"name":"CSS","path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]}