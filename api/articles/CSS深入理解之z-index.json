{"title":"CSS深入理解之z-index","slug":"CSS深入理解之z-index","date":"2017-04-20T15:38:25.000Z","updated":"2019-11-14T05:12:01.467Z","comments":true,"path":"api/articles/CSS深入理解之z-index.json","excerpt":null,"covers":["/images/hexo_post_85.png","/images/hexo_post_3.png","/images/hexo_post_294.png","/images/hexo_post_57.png","/images/hexo_post_65.png"],"content":"<h2 id=\"1-z-index-基础\"><a href=\"#1-z-index-基础\" class=\"headerlink\" title=\"1. z-index 基础\"></a>1. z-index 基础</h2><h3 id=\"z-index-含义\"><a href=\"#z-index-含义\" class=\"headerlink\" title=\"z-index 含义\"></a>z-index 含义</h3><p>z-index 属性指定了元素及其子元素的 [z顺序]，而 [z顺序] 可以决定当元素发生覆盖的时候，哪个元素在上面.通常一个较大 z-index 值的元素会覆盖较低的那一个</p>\n<h3 id=\"属性值\"><a href=\"#属性值\" class=\"headerlink\" title=\"属性值\"></a>属性值</h3><ul>\n<li><code>auto</code> –&gt; 默认值</li>\n<li><code>&lt;integer&gt;</code> –&gt; 整数值</li>\n<li><code>inherit</code> –&gt; 继承</li>\n</ul>\n<h3 id=\"基本特性\"><a href=\"#基本特性\" class=\"headerlink\" title=\"基本特性\"></a>基本特性</h3><ul>\n<li>支持负值</li>\n<li>支持 CSS3 animation 动画</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">keyframes</span> zIndex &#123;</span><br><span class=\"line\">  0%&#123; <span class=\"attribute\">z-index</span>:-<span class=\"number\">1</span>; &#125;</span><br><span class=\"line\">  100%&#123; <span class=\"attribute\">z-index</span>:<span class=\"number\">51</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在 CSS2.1 时代，需要和定位元素配合使用</li>\n</ul>\n<p>如果不考虑 CSS3，只有定位元素(position:relative / absolute / fixed / sticky，没有 static)的 z-index 才有作用！在 CSS3 中有例外……</p>\n<h2 id=\"2-z-index-与定位元素\"><a href=\"#2-z-index-与定位元素\" class=\"headerlink\" title=\"2. z-index 与定位元素\"></a>2. z-index 与定位元素</h2><h3 id=\"如果定位元素-z-index-没有发生嵌套\"><a href=\"#如果定位元素-z-index-没有发生嵌套\" class=\"headerlink\" title=\"如果定位元素 z-index 没有发生嵌套\"></a>如果定位元素 z-index 没有发生嵌套</h3><ul>\n<li>后来居上</li>\n<li>哪个大，哪个在上面</li>\n</ul>\n<h3 id=\"如果定位元素发生嵌套\"><a href=\"#如果定位元素发生嵌套\" class=\"headerlink\" title=\"如果定位元素发生嵌套\"></a>如果定位元素发生嵌套</h3><p>祖先优先原则（前提：z-index 为数值，不是 auto）：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_85.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"3-层叠上下文\"><a href=\"#3-层叠上下文\" class=\"headerlink\" title=\"3. 层叠上下文\"></a>3. 层叠上下文</h2><p>层叠上下文(stacking context)是 HTML 元素中的一个三维概念，表示元素在 z 轴上有了”可以高人一等”的能力，含义：</p>\n<ul>\n<li>皇帝(你)</li>\n<li>当官(层叠上下文元素)</li>\n<li>家族(嵌套)</li>\n</ul>\n<p>层叠上下文是表示普通老百姓 HTML 元素当官了，离皇帝更近了</p>\n<h3 id=\"产生层叠上下文：\"><a href=\"#产生层叠上下文：\" class=\"headerlink\" title=\"产生层叠上下文：\"></a>产生层叠上下文：</h3><ol>\n<li>页面根元素天生具有层叠上下文，称之为”根层叠上下文” –&gt; 皇亲国戚</li>\n<li>z-index 值为数值的定位元素也具有层叠上下文 –&gt; 科考入选</li>\n<li>其他属性 –&gt; 其他当官途径</li>\n</ol>\n<h3 id=\"层叠上下文特性\"><a href=\"#层叠上下文特性\" class=\"headerlink\" title=\"层叠上下文特性\"></a>层叠上下文特性</h3><ul>\n<li>层叠上下文可以嵌套，组合成一个分层次的层叠上下文</li>\n</ul>\n<p>一个家里，爸爸可以当官，孩子也是可以同时当官的。这个家族的官就当得比较有层次</p>\n<ul>\n<li>每个层叠上下文和兄弟元素独立: 当进行层叠变化或渲染的时候，只需要考虑后代元素</li>\n</ul>\n<p>自己当官，兄弟不沾光。有什么福利或者变故只会影响自己的孩子们</p>\n<ul>\n<li>每个层叠上下文是自成体系的: 当元素的内容被层叠后，整个元素被认为是在父层的层叠顺序中</li>\n</ul>\n<p>每个当官的都有属于自己的小团体。当子孙或属下发生的排辈摩擦什么的，都是自己宅院的事情，不会影响官员自己和皇帝之间的距离</p>\n<h2 id=\"4-层叠水平\"><a href=\"#4-层叠水平\" class=\"headerlink\" title=\"4. 层叠水平\"></a>4. 层叠水平</h2><p>层叠上下文中的每个元素都有一个层叠水平(stacking level)，决定了同一个层叠上下文中元素在 z 轴上的显示顺序，<strong>遵循”后来居上”和”谁大谁上”的层叠准则</strong> 层<strong>叠水平和 z-index 不是一个东西</strong>。普通元素也有层叠水平，每一个当官的家里儿孙啊，仆人什么的，都有一个论资排辈(即层叠水平)，决定了在一起的时候，谁排在前面，离官员更近。</p>\n<h2 id=\"5-层叠顺序\"><a href=\"#5-层叠顺序\" class=\"headerlink\" title=\"5. 层叠顺序\"></a>5. 层叠顺序</h2><p>元素发生层叠时候有着特定的垂直显示顺序，即内容 &gt; 布局 &gt; 装饰</p>\n<div align=\"center\"><img src=\"/images/hexo_post_3.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"6-z-index-与层叠上下文\"><a href=\"#6-z-index-与层叠上下文\" class=\"headerlink\" title=\"6. z-index 与层叠上下文\"></a>6. z-index 与层叠上下文</h2><ol>\n<li>定位元素默认 z-index: auto，同时可以看成是 z-index: 0;</li>\n<li>z-index 不为 auto 的定位元素会创建层叠上下文;</li>\n<li>z-index 层叠顺序的比较止步于父级层叠上下文;</li>\n</ol>\n<div align=\"center\"><img src=\"/images/hexo_post_294.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"7-其他-CSS-属性与层叠上下文\"><a href=\"#7-其他-CSS-属性与层叠上下文\" class=\"headerlink\" title=\"7. 其他 CSS 属性与层叠上下文\"></a>7. 其他 CSS 属性与层叠上下文</h2><p>其他参与层叠上下文的属性们</p>\n<ol>\n<li>z-index 值不为 auto 的 flex 项（父元素display：flex | inline-flex）</li>\n<li>元素的 opacity 值不是 1</li>\n<li>元素的 transform 值不是 none</li>\n<li>元素 mix-blend-mode 值不是 normal</li>\n<li>元素的 filter 值不是 none</li>\n<li>元素的 isolation 值是 isolate</li>\n<li>position: fixed 声明</li>\n<li>will-change 指定的属性值为上面任意一个</li>\n<li>元素的 -webkit-overflow-scrolling 设为 touch</li>\n</ol>\n<h2 id=\"8-z-index-与其他-CSS-属性层叠上下文\"><a href=\"#8-z-index-与其他-CSS-属性层叠上下文\" class=\"headerlink\" title=\"8. z-index 与其他 CSS 属性层叠上下文\"></a>8. z-index 与其他 CSS 属性层叠上下文</h2><h3 id=\"不支持-z-index-的层叠上下文元素的层叠顺序均是-z-index-auto-级别\"><a href=\"#不支持-z-index-的层叠上下文元素的层叠顺序均是-z-index-auto-级别\" class=\"headerlink\" title=\"不支持 z-index 的层叠上下文元素的层叠顺序均是 z-index: auto 级别\"></a>不支持 z-index 的层叠上下文元素的层叠顺序均是 z-index: auto 级别</h3><div align=\"center\"><img src=\"/images/hexo_post_57.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"依赖-z-index-值创建层叠上下文的情况\"><a href=\"#依赖-z-index-值创建层叠上下文的情况\" class=\"headerlink\" title=\"依赖 z-index 值创建层叠上下文的情况\"></a>依赖 z-index 值创建层叠上下文的情况</h3><ol>\n<li>position 值为 relative / absolute 或 fixed(部分浏览器)</li>\n<li>display: flex | inline-flex 容器的子 flex 项</li>\n</ol>\n<h2 id=\"9-z-index-相关实践\"><a href=\"#9-z-index-相关实践\" class=\"headerlink\" title=\"9. z-index 相关实践\"></a>9. z-index 相关实践</h2><h3 id=\"最小化影响原则\"><a href=\"#最小化影响原则\" class=\"headerlink\" title=\"最小化影响原则\"></a>最小化影响原则</h3><ul>\n<li>避免使用定位属性；</li>\n<li>定位属性从大容器平级分离为私有小容器</li>\n</ul>\n<h3 id=\"不犯二原则\"><a href=\"#不犯二原则\" class=\"headerlink\" title=\"不犯二原则\"></a>不犯二原则</h3><p>对于非浮层元素(浮层元素为弹框，蒙版之类)，避免设置 z-index 值，z-index 值没有任何道理需要超过 2–不犯二准则；</p>\n<h3 id=\"组件层级计数器\"><a href=\"#组件层级计数器\" class=\"headerlink\" title=\"组件层级计数器\"></a>组件层级计数器</h3><p>通过 js 获得 body 下子元素的最大 z-index 值</p>\n<h3 id=\"可访问性隐藏\"><a href=\"#可访问性隐藏\" class=\"headerlink\" title=\"可访问性隐藏\"></a>可访问性隐藏</h3><p>z-index 负值元素在层叠上下文的背景之上，其他元素之下</p>\n<div align=\"center\"><img src=\"/images/hexo_post_65.png\" alt=\"\" width=\"500\"></div>","more":"<h2 id=\"1-z-index-基础\"><a href=\"#1-z-index-基础\" class=\"headerlink\" title=\"1. z-index 基础\"></a>1. z-index 基础</h2><h3 id=\"z-index-含义\"><a href=\"#z-index-含义\" class=\"headerlink\" title=\"z-index 含义\"></a>z-index 含义</h3><p>z-index 属性指定了元素及其子元素的 [z顺序]，而 [z顺序] 可以决定当元素发生覆盖的时候，哪个元素在上面.通常一个较大 z-index 值的元素会覆盖较低的那一个</p>\n<h3 id=\"属性值\"><a href=\"#属性值\" class=\"headerlink\" title=\"属性值\"></a>属性值</h3><ul>\n<li><code>auto</code> –&gt; 默认值</li>\n<li><code>&lt;integer&gt;</code> –&gt; 整数值</li>\n<li><code>inherit</code> –&gt; 继承</li>\n</ul>\n<h3 id=\"基本特性\"><a href=\"#基本特性\" class=\"headerlink\" title=\"基本特性\"></a>基本特性</h3><ul>\n<li>支持负值</li>\n<li>支持 CSS3 animation 动画</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">keyframes</span> zIndex &#123;</span><br><span class=\"line\">  0%&#123; <span class=\"attribute\">z-index</span>:-<span class=\"number\">1</span>; &#125;</span><br><span class=\"line\">  100%&#123; <span class=\"attribute\">z-index</span>:<span class=\"number\">51</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在 CSS2.1 时代，需要和定位元素配合使用</li>\n</ul>\n<p>如果不考虑 CSS3，只有定位元素(position:relative / absolute / fixed / sticky，没有 static)的 z-index 才有作用！在 CSS3 中有例外……</p>\n<h2 id=\"2-z-index-与定位元素\"><a href=\"#2-z-index-与定位元素\" class=\"headerlink\" title=\"2. z-index 与定位元素\"></a>2. z-index 与定位元素</h2><h3 id=\"如果定位元素-z-index-没有发生嵌套\"><a href=\"#如果定位元素-z-index-没有发生嵌套\" class=\"headerlink\" title=\"如果定位元素 z-index 没有发生嵌套\"></a>如果定位元素 z-index 没有发生嵌套</h3><ul>\n<li>后来居上</li>\n<li>哪个大，哪个在上面</li>\n</ul>\n<h3 id=\"如果定位元素发生嵌套\"><a href=\"#如果定位元素发生嵌套\" class=\"headerlink\" title=\"如果定位元素发生嵌套\"></a>如果定位元素发生嵌套</h3><p>祖先优先原则（前提：z-index 为数值，不是 auto）：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_85.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"3-层叠上下文\"><a href=\"#3-层叠上下文\" class=\"headerlink\" title=\"3. 层叠上下文\"></a>3. 层叠上下文</h2><p>层叠上下文(stacking context)是 HTML 元素中的一个三维概念，表示元素在 z 轴上有了”可以高人一等”的能力，含义：</p>\n<ul>\n<li>皇帝(你)</li>\n<li>当官(层叠上下文元素)</li>\n<li>家族(嵌套)</li>\n</ul>\n<p>层叠上下文是表示普通老百姓 HTML 元素当官了，离皇帝更近了</p>\n<h3 id=\"产生层叠上下文：\"><a href=\"#产生层叠上下文：\" class=\"headerlink\" title=\"产生层叠上下文：\"></a>产生层叠上下文：</h3><ol>\n<li>页面根元素天生具有层叠上下文，称之为”根层叠上下文” –&gt; 皇亲国戚</li>\n<li>z-index 值为数值的定位元素也具有层叠上下文 –&gt; 科考入选</li>\n<li>其他属性 –&gt; 其他当官途径</li>\n</ol>\n<h3 id=\"层叠上下文特性\"><a href=\"#层叠上下文特性\" class=\"headerlink\" title=\"层叠上下文特性\"></a>层叠上下文特性</h3><ul>\n<li>层叠上下文可以嵌套，组合成一个分层次的层叠上下文</li>\n</ul>\n<p>一个家里，爸爸可以当官，孩子也是可以同时当官的。这个家族的官就当得比较有层次</p>\n<ul>\n<li>每个层叠上下文和兄弟元素独立: 当进行层叠变化或渲染的时候，只需要考虑后代元素</li>\n</ul>\n<p>自己当官，兄弟不沾光。有什么福利或者变故只会影响自己的孩子们</p>\n<ul>\n<li>每个层叠上下文是自成体系的: 当元素的内容被层叠后，整个元素被认为是在父层的层叠顺序中</li>\n</ul>\n<p>每个当官的都有属于自己的小团体。当子孙或属下发生的排辈摩擦什么的，都是自己宅院的事情，不会影响官员自己和皇帝之间的距离</p>\n<h2 id=\"4-层叠水平\"><a href=\"#4-层叠水平\" class=\"headerlink\" title=\"4. 层叠水平\"></a>4. 层叠水平</h2><p>层叠上下文中的每个元素都有一个层叠水平(stacking level)，决定了同一个层叠上下文中元素在 z 轴上的显示顺序，<strong>遵循”后来居上”和”谁大谁上”的层叠准则</strong> 层<strong>叠水平和 z-index 不是一个东西</strong>。普通元素也有层叠水平，每一个当官的家里儿孙啊，仆人什么的，都有一个论资排辈(即层叠水平)，决定了在一起的时候，谁排在前面，离官员更近。</p>\n<h2 id=\"5-层叠顺序\"><a href=\"#5-层叠顺序\" class=\"headerlink\" title=\"5. 层叠顺序\"></a>5. 层叠顺序</h2><p>元素发生层叠时候有着特定的垂直显示顺序，即内容 &gt; 布局 &gt; 装饰</p>\n<div align=\"center\"><img src=\"/images/hexo_post_3.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"6-z-index-与层叠上下文\"><a href=\"#6-z-index-与层叠上下文\" class=\"headerlink\" title=\"6. z-index 与层叠上下文\"></a>6. z-index 与层叠上下文</h2><ol>\n<li>定位元素默认 z-index: auto，同时可以看成是 z-index: 0;</li>\n<li>z-index 不为 auto 的定位元素会创建层叠上下文;</li>\n<li>z-index 层叠顺序的比较止步于父级层叠上下文;</li>\n</ol>\n<div align=\"center\"><img src=\"/images/hexo_post_294.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"7-其他-CSS-属性与层叠上下文\"><a href=\"#7-其他-CSS-属性与层叠上下文\" class=\"headerlink\" title=\"7. 其他 CSS 属性与层叠上下文\"></a>7. 其他 CSS 属性与层叠上下文</h2><p>其他参与层叠上下文的属性们</p>\n<ol>\n<li>z-index 值不为 auto 的 flex 项（父元素display：flex | inline-flex）</li>\n<li>元素的 opacity 值不是 1</li>\n<li>元素的 transform 值不是 none</li>\n<li>元素 mix-blend-mode 值不是 normal</li>\n<li>元素的 filter 值不是 none</li>\n<li>元素的 isolation 值是 isolate</li>\n<li>position: fixed 声明</li>\n<li>will-change 指定的属性值为上面任意一个</li>\n<li>元素的 -webkit-overflow-scrolling 设为 touch</li>\n</ol>\n<h2 id=\"8-z-index-与其他-CSS-属性层叠上下文\"><a href=\"#8-z-index-与其他-CSS-属性层叠上下文\" class=\"headerlink\" title=\"8. z-index 与其他 CSS 属性层叠上下文\"></a>8. z-index 与其他 CSS 属性层叠上下文</h2><h3 id=\"不支持-z-index-的层叠上下文元素的层叠顺序均是-z-index-auto-级别\"><a href=\"#不支持-z-index-的层叠上下文元素的层叠顺序均是-z-index-auto-级别\" class=\"headerlink\" title=\"不支持 z-index 的层叠上下文元素的层叠顺序均是 z-index: auto 级别\"></a>不支持 z-index 的层叠上下文元素的层叠顺序均是 z-index: auto 级别</h3><div align=\"center\"><img src=\"/images/hexo_post_57.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"依赖-z-index-值创建层叠上下文的情况\"><a href=\"#依赖-z-index-值创建层叠上下文的情况\" class=\"headerlink\" title=\"依赖 z-index 值创建层叠上下文的情况\"></a>依赖 z-index 值创建层叠上下文的情况</h3><ol>\n<li>position 值为 relative / absolute 或 fixed(部分浏览器)</li>\n<li>display: flex | inline-flex 容器的子 flex 项</li>\n</ol>\n<h2 id=\"9-z-index-相关实践\"><a href=\"#9-z-index-相关实践\" class=\"headerlink\" title=\"9. z-index 相关实践\"></a>9. z-index 相关实践</h2><h3 id=\"最小化影响原则\"><a href=\"#最小化影响原则\" class=\"headerlink\" title=\"最小化影响原则\"></a>最小化影响原则</h3><ul>\n<li>避免使用定位属性；</li>\n<li>定位属性从大容器平级分离为私有小容器</li>\n</ul>\n<h3 id=\"不犯二原则\"><a href=\"#不犯二原则\" class=\"headerlink\" title=\"不犯二原则\"></a>不犯二原则</h3><p>对于非浮层元素(浮层元素为弹框，蒙版之类)，避免设置 z-index 值，z-index 值没有任何道理需要超过 2–不犯二准则；</p>\n<h3 id=\"组件层级计数器\"><a href=\"#组件层级计数器\" class=\"headerlink\" title=\"组件层级计数器\"></a>组件层级计数器</h3><p>通过 js 获得 body 下子元素的最大 z-index 值</p>\n<h3 id=\"可访问性隐藏\"><a href=\"#可访问性隐藏\" class=\"headerlink\" title=\"可访问性隐藏\"></a>可访问性隐藏</h3><p>z-index 负值元素在层叠上下文的背景之上，其他元素之下</p>\n<div align=\"center\"><img src=\"/images/hexo_post_65.png\" alt=\"\" width=\"500\"></div>","categories":[{"name":"CSS","path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]}