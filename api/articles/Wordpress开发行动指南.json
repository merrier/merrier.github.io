{"title":"Wordpress开发行动指南","slug":"Wordpress开发行动指南","date":"2017-03-15T23:26:18.000Z","updated":"2025-01-03T13:19:00.880Z","comments":true,"path":"api/articles/Wordpress开发行动指南.json","excerpt":null,"covers":null,"content":"<p>本人玩 Wordpress 到目前为止也只有 3 天，但是发现 Wordpress 是异常庞大的，可能在开发的过程中会遇到各种各样的 bug，同时也会运用到各种小技巧和“黑科技”，所以就索性写篇文章用来记录我在这个过程中的收获与教训吧。</p>\n<h2 id=\"1-Wordpress-的插件\"><a href=\"#1-Wordpress-的插件\" class=\"headerlink\" title=\"1. Wordpress 的插件\"></a>1. Wordpress 的插件</h2><p>Wordpress 的插件使 Wordpress 的功能得到了无限扩展，所以想用 Wordpress 搭建网站或者开发插件的话，一定要多用它的插件，并且多了解一些插件的功能，其中我在做博客的过程中用到的一些好用的插件都在我的另一篇文章里了，可以点击查看 -&gt;：<a href=\"/20170314/wordpress-plugin-recommendation.html\">Wordpress插件推荐</a></p>\n<h2 id=\"2-自动为-WordPress-文章设置特色图像代码\"><a href=\"#2-自动为-WordPress-文章设置特色图像代码\" class=\"headerlink\" title=\"2. 自动为 WordPress 文章设置特色图像代码\"></a>2. 自动为 WordPress 文章设置特色图像代码</h2><p>这里有一段很实用的代码，可以自动将文章中的第一张图片设置为特色图像，如果你手动设置了特色图像，可以覆盖这段代码。将下面的代码丢到当前主题的 functions.php 里，以后就不用担心忘记设置特色图像了。（这个到底有什么用呢，反正我没用= =）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">autoset_featured</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">global</span> <span class=\"variable\">$post</span>;</span><br><span class=\"line\">  <span class=\"variable\">$already_has_thumb</span> = <span class=\"title function_ invoke__\">has_post_thumbnail</span>(<span class=\"variable\">$post</span>-&gt;ID);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"variable\">$already_has_thumb</span>)  &#123;</span><br><span class=\"line\">    <span class=\"variable\">$attached_image</span> = <span class=\"title function_ invoke__\">get_children</span>( <span class=\"string\">&quot;post_parent=<span class=\"subst\">$post</span>-&gt;ID&amp;post_type=attachment&amp;post_mime_type=image&amp;numberposts=1&quot;</span> );</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$attached_image</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">foreach</span> (<span class=\"variable\">$attached_image</span> <span class=\"keyword\">as</span> <span class=\"variable\">$attachment_id</span> =&gt; <span class=\"variable\">$attachment</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">set_post_thumbnail</span>(<span class=\"variable\">$post</span>-&gt;ID, <span class=\"variable\">$attachment_id</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;  <span class=\"comment\">//end function</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;the_post&#x27;</span>, <span class=\"string\">&#x27;autoset_featured&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;save_post&#x27;</span>, <span class=\"string\">&#x27;autoset_featured&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;draft_to_publish&#x27;</span>, <span class=\"string\">&#x27;autoset_featured&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;new_to_publish&#x27;</span>, <span class=\"string\">&#x27;autoset_featured&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;pending_to_publish&#x27;</span>, <span class=\"string\">&#x27;autoset_featured&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;future_to_publish&#x27;</span>, <span class=\"string\">&#x27;autoset_featured&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-为某篇文章添加特定的样式或-js-代码\"><a href=\"#3-为某篇文章添加特定的样式或-js-代码\" class=\"headerlink\" title=\"3. 为某篇文章添加特定的样式或 js 代码\"></a>3. 为某篇文章添加特定的样式或 js 代码</h2><p>将下面代码添加到你的 WordPress 主题模板的 functions.php 中：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">为特定文章添加特定css最简单的方式.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">/*添加自定义CSS的meta box*/</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;admin_menu&#x27;</span>, <span class=\"string\">&#x27;cwp_add_my_custom_css_meta_box&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">/*保存自定义CSS的内容*/</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;save_post&#x27;</span>, <span class=\"string\">&#x27;cwp_save_my_custom_css&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">/*将自定义CSS添加到特定文章(适用于Wordpress中文章、页面、自定义文章类型等)的头部*/</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;wp_head&#x27;</span>,<span class=\"string\">&#x27;cwp_insert_my_custom_css&#x27;</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_add_my_custom_css_meta_box</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_meta_box</span>(<span class=\"string\">&#x27;my_custom_css&#x27;</span>, <span class=\"string\">&#x27;自定义CSS&#x27;</span>, <span class=\"string\">&#x27;cwp_output_my_custom_css_input_fields&#x27;</span>, <span class=\"string\">&#x27;post&#x27;</span>, <span class=\"string\">&#x27;normal&#x27;</span>, <span class=\"string\">&#x27;high&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_meta_box</span>(<span class=\"string\">&#x27;my_custom_css&#x27;</span>, <span class=\"string\">&#x27;自定义CSS&#x27;</span>, <span class=\"string\">&#x27;cwp_output_my_custom_css_input_fields&#x27;</span>, <span class=\"string\">&#x27;page&#x27;</span>, <span class=\"string\">&#x27;normal&#x27;</span>, <span class=\"string\">&#x27;high&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_output_my_custom_css_input_fields</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">global</span> <span class=\"variable\">$post</span>;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;input type=&quot;hidden&quot; name=&quot;my_custom_css_noncename&quot; id=&quot;my_custom_css_noncename&quot; value=&quot;&#x27;</span>.<span class=\"title function_ invoke__\">wp_create_nonce</span>(<span class=\"string\">&#x27;custom-css&#x27;</span>).<span class=\"string\">&#x27;&quot; /&gt;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;textarea name=&quot;my_custom_css&quot; id=&quot;my_custom_css&quot; rows=&quot;5&quot; cols=&quot;30&quot; style=&quot;width:100%;&quot;&gt;&#x27;</span>.<span class=\"title function_ invoke__\">get_post_meta</span>(<span class=\"variable\">$post</span>-&gt;ID,<span class=\"string\">&#x27;_my_custom_css&#x27;</span>,<span class=\"literal\">true</span>).<span class=\"string\">&#x27;&lt;/textarea&gt;&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_save_my_custom_css</span>(<span class=\"params\"><span class=\"variable\">$post_id</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">wp_verify_nonce</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;my_custom_css_noncename&#x27;</span>], <span class=\"string\">&#x27;custom-css&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"variable\">$post_id</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">defined</span>(<span class=\"string\">&#x27;DOING_AUTOSAVE&#x27;</span>) &amp;&amp; DOING_AUTOSAVE) <span class=\"keyword\">return</span> <span class=\"variable\">$post_id</span>;</span><br><span class=\"line\">  <span class=\"variable\">$my_custom_css</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;my_custom_css&#x27;</span>];</span><br><span class=\"line\">  <span class=\"title function_ invoke__\">update_post_meta</span>(<span class=\"variable\">$post_id</span>, <span class=\"string\">&#x27;_my_custom_css&#x27;</span>, <span class=\"variable\">$my_custom_css</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_insert_my_custom_css</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">is_page</span>() || <span class=\"title function_ invoke__\">is_single</span>()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">have_posts</span>()) : <span class=\"keyword\">while</span> (<span class=\"title function_ invoke__\">have_posts</span>()) : <span class=\"title function_ invoke__\">the_post</span>();</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;style type=&quot;text/css&quot;&gt;&#x27;</span>.<span class=\"title function_ invoke__\">get_post_meta</span>(<span class=\"title function_ invoke__\">get_the_ID</span>(), <span class=\"string\">&#x27;_my_custom_css&#x27;</span>, <span class=\"literal\">true</span>).<span class=\"string\">&#x27;&lt;/style&gt;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">endwhile</span>; <span class=\"keyword\">endif</span>;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">rewind_posts</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在文章的编辑页面就会出现如下输入框：</p>\n<div align='center'><img src='/images/hexo_post_135.png' alt='' width='500'/></div>\n\n<p>它是在字数统计的下面，我一开始没注意到，以为没生效呢，差点就把这段代码否定了，不过这个方法只能用来定义特定 CSS 样式，如果想插入特定 js 代码的话，可以考虑用下面一个方法：</p>\n<p>首先还是要将下面代码添加到你的 WordPress 主题模板的 functions.php 中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&quot;wp_head&quot;</span>,<span class=\"string\">&quot;ruikeedu_custom_head&quot;</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ruikeedu_custom_head</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">is_single</span>() || <span class=\"title function_ invoke__\">is_page</span>()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> <span class=\"variable\">$post</span>;</span><br><span class=\"line\">    <span class=\"variable\">$custom_head</span> = <span class=\"title function_ invoke__\">get_post_meta</span>(<span class=\"variable\">$post</span>-&gt;ID, <span class=\"string\">&#x27;custom_head&#x27;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$custom_head</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在文章的编辑页面设置显示自定义栏目：</p>\n<div align='center'><img src='/images/hexo_post_136.png' alt='' width='700'/></div>\n\n<p>然后在文章编辑的后面会出现自定义栏目的输入框，名称为 custom_head，值就是你想插入的 css 代码或 js 代码（css 代码需要有 <code>&lt;style&gt;&lt;/style&gt;</code>，js 代码同理，因为该方法不会自动添加标签）</p>\n<p>总结：网上虽然关于这个问题的回答很多，但是基本上都是抄来抄去，而且有的方法亲测不可用，所以推荐以上这两种方法一起用，既可以添加 css 代码又可以添加 js 代码。</p>\n<h2 id=\"4-允许分类描述添加-html-代码\"><a href=\"#4-允许分类描述添加-html-代码\" class=\"headerlink\" title=\"4. 允许分类描述添加 html 代码\"></a>4. 允许分类描述添加 html 代码</h2><p>出于安全等因素考虑，WordPress 后台的文本框一般是不允许添加 html 代码的（也就是被过滤掉）。所以如果有 WP 用户需要在分类描述中添加 html 代码，下面这个实现方法就可以实现。直接将下面的代码添加到当前主题的 functions.php 文件即可：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 允许分类描述添加html代码</span></span><br><span class=\"line\"><span class=\"comment\"> * https://www.wpdaxue.com/category-description-support-html.html</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">remove_filter</span>(<span class=\"string\">&#x27;pre_term_description&#x27;</span>, <span class=\"string\">&#x27;wp_filter_kses&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">remove_filter</span>(<span class=\"string\">&#x27;term_description&#x27;</span>, <span class=\"string\">&#x27;wp_kses_data&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>如果你还想让 链接描述和备注、用户描述 也一样支持 html 代码，可以试试下面的代码，同样是添加到 functions.php：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Disables Kses only for textarea saves</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;pre_term_description&#x27;</span>, <span class=\"string\">&#x27;pre_link_description&#x27;</span>, <span class=\"string\">&#x27;pre_link_notes&#x27;</span>, <span class=\"string\">&#x27;pre_user_description&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"variable\">$filter</span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_ invoke__\">remove_filter</span>(<span class=\"variable\">$filter</span>, <span class=\"string\">&#x27;wp_filter_kses&#x27;</span>);</span><br><span class=\"line\">&#125;<span class=\"comment\">// Disables Kses only for textarea admin displays</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;term_description&#x27;</span>, <span class=\"string\">&#x27;link_description&#x27;</span>, <span class=\"string\">&#x27;link_notes&#x27;</span>, <span class=\"string\">&#x27;user_description&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"variable\">$filter</span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_ invoke__\">remove_filter</span>(<span class=\"variable\">$filter</span>, <span class=\"string\">&#x27;wp_kses_data&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果你需要进一步了解实现原理，可以自己阅读以下文档：</p>\n<ul>\n<li><a href=\"http://codex.wordpress.org/Function_Reference/wp_filter_kses\">http://codex.wordpress.org/Function_Reference/wp_filter_kses</a></li>\n<li><a href=\"http://codex.wordpress.org/Function_Reference/wp_kses_data\">http://codex.wordpress.org/Function_Reference/wp_kses_data</a></li>\n</ul>\n<h2 id=\"5-在文章中插入动图\"><a href=\"#5-在文章中插入动图\" class=\"headerlink\" title=\"5. 在文章中插入动图\"></a>5. 在文章中插入动图</h2><p>Wordpress 对于文章中的图片是默认进行缩略处理的，而文章中的 gif 动图在经过处理后就变成了静态文件，就不会“动”了，所以需要插入动图之后对其进行编辑，然后选择完整尺寸就可以了，如果在编辑文章时，该 gif 动图就已经“动”了起来，那证明已经成功了。</p>\n<div align='center'><img src='/images/hexo_post_8.png' alt='' width='500'/></div>\n\n<h2 id=\"6-编辑文章上传图片时提示-HTTP-错误\"><a href=\"#6-编辑文章上传图片时提示-HTTP-错误\" class=\"headerlink\" title=\"6.编辑文章上传图片时提示 HTTP 错误\"></a>6.编辑文章上传图片时提示 HTTP 错误</h2><p>这个错误发生在我刚把项目从本地部署到服务器之后，然后我就上网搜了一下，有的人说是因为图片太长或太大了，但是我将图片压缩之后还是提示这个错误，所以又尝试了一些其他方法：</p>\n<ol>\n<li>如果使用的是服务器，那应该是安全设置问题，修改服务器的 httpd.conf 文件，删除里面关于 mod_security 部分就可以了</li>\n<li>如果使用的是虚拟主机，在 .htaccess 文件里面加上一行（这个方法亲测有效）：</li>\n</ol>\n<blockquote>\n<p>SetEnvIfNoCase Request_URI /wp-admin/async-upload.php$ MODSEC_ENABLE=Off</p>\n</blockquote>\n<ol start=\"3\">\n<li>如果上述方法都不能解决，有可能你的图片确实是太长或者太大了，还是压缩一下再上传试一下吧</li>\n</ol>\n<h2 id=\"7-更改新域名\"><a href=\"#7-更改新域名\" class=\"headerlink\" title=\"7. 更改新域名\"></a>7. 更改新域名</h2><p>这个问题的故事是这样的：因为想给自己的网站备案，所以就买了一个可以备案的域名 merrier.wang，而之前是 merrier.online，在买完域名并解析之后，在 Wordpress 后台将域名配置成 merrier.wang 之后就出现问题了，因为 merrier.wang 是没有备案的，所以就无法访问：</p>\n<div align='center'><img src='/images/hexo_post_144.png' alt='' width='500'/></div>\n\n<p>但是访问之前的 merrier.online 又会重定向到 merrier.wang（应该是 Wordpress 自带的重定向），所以就相当于连后台也访问不了了，只能修改域名。在这里顺便提醒一下，如果你也给域名申请备案中，先不要在后台修改 Wordpress 的域名，因为备案不成功是访问不了的；接下来总结一下网上几种更改新域名的方法：</p>\n<h3 id=\"方法一：修改-wp-config-php\"><a href=\"#方法一：修改-wp-config-php\" class=\"headerlink\" title=\"方法一：修改 wp-config.php\"></a>方法一：修改 wp-config.php</h3><p>在 wp-config.php 中，添加以下两行内容：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">define</span>(<span class=\"string\">&#x27;WP_HOME&#x27;</span>,<span class=\"string\">&#x27;http://\byourwebsite&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">define</span>(<span class=\"string\">&#x27;WP_SITEURL&#x27;</span>,<span class=\"string\">&#x27;http://yourwebsite&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>然后登录后台，在 “常规 -&gt; 设置”重新配置新博客地址（HOME）和安装地址（SITEURL），<strong>成功后一定记得删除上面添加的内容。</strong></p>\n<h3 id=\"方法二：修改-functions-php\"><a href=\"#方法二：修改-functions-php\" class=\"headerlink\" title=\"方法二：修改 functions.php\"></a>方法二：修改 functions.php</h3><p>functions.php 位于当前博客主题目录内，在其中添加以下两行内容：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">update_option</span>(<span class=\"string\">&#x27;siteurl&#x27;</span>,<span class=\"string\">&#x27;http://yourwebsite&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">update_option</span>(<span class=\"string\">&#x27;home&#x27;</span>,<span class=\"string\">&#x27;http://yourwebsite&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>然后登录后台，在 “常规 -&gt; 设置”重新配置新博客地址（HOME）和安装地址（SITEURL），<strong>成功后一定记得删除上面添加的内容。</strong></p>\n<h3 id=\"方法三：修改-wp-config-php（自动更新地址）\"><a href=\"#方法三：修改-wp-config-php（自动更新地址）\" class=\"headerlink\" title=\"方法三：修改 wp-config.php（自动更新地址）\"></a>方法三：修改 wp-config.php（自动更新地址）</h3><p>在 wp-config.php 中，添加下面一行内容</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">define</span>(<span class=\"string\">&#x27;RELOCATE&#x27;</span>,<span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n<p>然后登录后台地址，WP 将自动更新安装地址（SITEURL），手动修改博客地址（HOME）地址即可，<strong>成功后一定要记得删除上面添加的内容</strong></p>\n<h3 id=\"方法四：修改数据库\"><a href=\"#方法四：修改数据库\" class=\"headerlink\" title=\"方法四：修改数据库\"></a>方法四：修改数据库</h3><p>通过某些方法（phpmyadmin 等）登陆到数据库，找到 wp_options 表，将表中的 siteurl 和 home 字段修改为当前的新域名</p>\n<h2 id=\"8-页面下开启评论框\"><a href=\"#8-页面下开启评论框\" class=\"headerlink\" title=\"8.页面下开启评论框\"></a>8.页面下开启评论框</h2><p>我在更新了一些页面（比如标签云、读者墙、网址导航）之后，发现这些页面下没有评论框，非常的不爽，就上网查了一下，然后大部分答案都是修改代码，我试了之后发现还是不行，后来在 <a href=\"http://tieba.baidu.com/p/2309858682\">wordpress吧</a>发现了问题出在了哪里：</p>\n<p>首先，在后台的页面设置界面，显示讨论栏目：</p>\n<div align='center'><img src='/images/hexo_post_145.png' alt='' width='700'/></div>\n\n<p>然后在文章的下面开启允许评论：</p>\n<div align='center'><img src='/images/hexo_post_146.png' alt='' width='700'/></div>\n\n<p>经过这两个步骤之后刷新页面（别忘了更新），就会发现评论框出现了！</p>\n<h2 id=\"9-Wordpress-后台安装主题或插件时需要-FTP-帐号怎么办\"><a href=\"#9-Wordpress-后台安装主题或插件时需要-FTP-帐号怎么办\" class=\"headerlink\" title=\"9. Wordpress 后台安装主题或插件时需要 FTP 帐号怎么办\"></a>9. Wordpress 后台安装主题或插件时需要 FTP 帐号怎么办</h2><p>在我把代码部署到服务器上之后发现在更新插件或者安装插件的时候需要输入 FTP 用户名和密码，去阿里云控制台也没有找到，所以就上网找了一些解决教程，试了一下下面的解决方法，实测有效：</p>\n<p>主要原因是 Wordpress 主目录的权限所有者不属于 apache 造成的；</p>\n<p>第一步：找到 apache 服务所使用的用户名和用户组，具体做法为打开终端，输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -aux</span><br></pre></td></tr></table></figure>\n<p>找到 <code>/usr/sbin/apach</code>（或 <code>/usr/sbin/httpd</code>）的用户名，它就是 apache 的所有者，我这里是 apache</p>\n<p>第二步：终端输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">chown</span> \bapache:apache -R /var/www/</span><br></pre></td></tr></table></figure>\n<p>这里的 <code>/var/www/</code> 是我的 web 主目录也是 Wordpress 主目录；<br>好了，这样就 OK 了，再进入 Wordpress 后台安装主题和插件就不再需要 FTP 帐户和密码了！！</p>\n<h2 id=\"10-WordPress-数据库及各表结构\"><a href=\"#10-WordPress-数据库及各表结构\" class=\"headerlink\" title=\"10. WordPress 数据库及各表结构\"></a>10. WordPress 数据库及各表结构</h2><p>转载自 <a href=\"http://blog.csdn.net/ppiao1970hank/article/details/6301812\">csdn</a>，相信知道这些数据表的结构之后，可以对自己的 Wordpress 网站进行更加个性化的设置，当然如果你的英文还可以的话，推荐 <a href=\"https://codex.wordpress.org/Database_Description#Table_Overview\">WordPress官方文档</a>，官方已经给出了比较详细的表格</p>\n<h2 id=\"11-建立数据库连接时出错\"><a href=\"#11-建立数据库连接时出错\" class=\"headerlink\" title=\"11. 建立数据库连接时出错\"></a>11. 建立数据库连接时出错</h2><p>某一天，我心血来潮想搞个 https，结果刷新网页的时候发现显示“建立数据库连接时出错”，后来在服务器上重启 mysql 就没问题了= =。。</p>\n<h2 id=\"12-升级至-HTTPS-时图片路径仍然为-HTTP\"><a href=\"#12-升级至-HTTPS-时图片路径仍然为-HTTP\" class=\"headerlink\" title=\"12. 升级至 HTTPS 时图片路径仍然为 HTTP\"></a>12. 升级至 HTTPS 时图片路径仍然为 HTTP</h2><p>前几天把网站升级至 HTTPS 了，不过随之而来的就是一堆 bug 报错，首先就是文章中的图片路径，仍然是 HTTP 的话浏览器会报 <code>Mixed Content</code> 错，但是我通过修改数据库的方式仍然不管用，后来不知不觉把两个插件禁用了，然后就好了，这两个插件就是七牛云的相关插件：<strong>WPJAM BASIC、WPJAM 七牛镜像存储</strong>，不过禁用掉之后就用不了七牛云了，后续有时间我再深入研究一下= =</p>\n<h2 id=\"13-WordPress：基于-JWT-的身份验证\"><a href=\"#13-WordPress：基于-JWT-的身份验证\" class=\"headerlink\" title=\"13. WordPress：基于 JWT 的身份验证\"></a>13. WordPress：基于 JWT 的身份验证</h2><p>如果你想基于 WordPress 去创建前端 App 或者移动端 App，解决用户的身份验证可以使用 JWT 这种方法，它是一种基于 Token 的验证身份的方法。</p>\n","more":"<p>本人玩 Wordpress 到目前为止也只有 3 天，但是发现 Wordpress 是异常庞大的，可能在开发的过程中会遇到各种各样的 bug，同时也会运用到各种小技巧和“黑科技”，所以就索性写篇文章用来记录我在这个过程中的收获与教训吧。</p>\n<h2 id=\"1-Wordpress-的插件\"><a href=\"#1-Wordpress-的插件\" class=\"headerlink\" title=\"1. Wordpress 的插件\"></a>1. Wordpress 的插件</h2><p>Wordpress 的插件使 Wordpress 的功能得到了无限扩展，所以想用 Wordpress 搭建网站或者开发插件的话，一定要多用它的插件，并且多了解一些插件的功能，其中我在做博客的过程中用到的一些好用的插件都在我的另一篇文章里了，可以点击查看 -&gt;：<a href=\"/20170314/wordpress-plugin-recommendation.html\">Wordpress插件推荐</a></p>\n<h2 id=\"2-自动为-WordPress-文章设置特色图像代码\"><a href=\"#2-自动为-WordPress-文章设置特色图像代码\" class=\"headerlink\" title=\"2. 自动为 WordPress 文章设置特色图像代码\"></a>2. 自动为 WordPress 文章设置特色图像代码</h2><p>这里有一段很实用的代码，可以自动将文章中的第一张图片设置为特色图像，如果你手动设置了特色图像，可以覆盖这段代码。将下面的代码丢到当前主题的 functions.php 里，以后就不用担心忘记设置特色图像了。（这个到底有什么用呢，反正我没用= =）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">autoset_featured</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">global</span> <span class=\"variable\">$post</span>;</span><br><span class=\"line\">  <span class=\"variable\">$already_has_thumb</span> = <span class=\"title function_ invoke__\">has_post_thumbnail</span>(<span class=\"variable\">$post</span>-&gt;ID);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"variable\">$already_has_thumb</span>)  &#123;</span><br><span class=\"line\">    <span class=\"variable\">$attached_image</span> = <span class=\"title function_ invoke__\">get_children</span>( <span class=\"string\">&quot;post_parent=<span class=\"subst\">$post</span>-&gt;ID&amp;post_type=attachment&amp;post_mime_type=image&amp;numberposts=1&quot;</span> );</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$attached_image</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">foreach</span> (<span class=\"variable\">$attached_image</span> <span class=\"keyword\">as</span> <span class=\"variable\">$attachment_id</span> =&gt; <span class=\"variable\">$attachment</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">set_post_thumbnail</span>(<span class=\"variable\">$post</span>-&gt;ID, <span class=\"variable\">$attachment_id</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;  <span class=\"comment\">//end function</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;the_post&#x27;</span>, <span class=\"string\">&#x27;autoset_featured&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;save_post&#x27;</span>, <span class=\"string\">&#x27;autoset_featured&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;draft_to_publish&#x27;</span>, <span class=\"string\">&#x27;autoset_featured&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;new_to_publish&#x27;</span>, <span class=\"string\">&#x27;autoset_featured&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;pending_to_publish&#x27;</span>, <span class=\"string\">&#x27;autoset_featured&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;future_to_publish&#x27;</span>, <span class=\"string\">&#x27;autoset_featured&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-为某篇文章添加特定的样式或-js-代码\"><a href=\"#3-为某篇文章添加特定的样式或-js-代码\" class=\"headerlink\" title=\"3. 为某篇文章添加特定的样式或 js 代码\"></a>3. 为某篇文章添加特定的样式或 js 代码</h2><p>将下面代码添加到你的 WordPress 主题模板的 functions.php 中：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">为特定文章添加特定css最简单的方式.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">/*添加自定义CSS的meta box*/</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;admin_menu&#x27;</span>, <span class=\"string\">&#x27;cwp_add_my_custom_css_meta_box&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">/*保存自定义CSS的内容*/</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;save_post&#x27;</span>, <span class=\"string\">&#x27;cwp_save_my_custom_css&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">/*将自定义CSS添加到特定文章(适用于Wordpress中文章、页面、自定义文章类型等)的头部*/</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;wp_head&#x27;</span>,<span class=\"string\">&#x27;cwp_insert_my_custom_css&#x27;</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_add_my_custom_css_meta_box</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_meta_box</span>(<span class=\"string\">&#x27;my_custom_css&#x27;</span>, <span class=\"string\">&#x27;自定义CSS&#x27;</span>, <span class=\"string\">&#x27;cwp_output_my_custom_css_input_fields&#x27;</span>, <span class=\"string\">&#x27;post&#x27;</span>, <span class=\"string\">&#x27;normal&#x27;</span>, <span class=\"string\">&#x27;high&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_meta_box</span>(<span class=\"string\">&#x27;my_custom_css&#x27;</span>, <span class=\"string\">&#x27;自定义CSS&#x27;</span>, <span class=\"string\">&#x27;cwp_output_my_custom_css_input_fields&#x27;</span>, <span class=\"string\">&#x27;page&#x27;</span>, <span class=\"string\">&#x27;normal&#x27;</span>, <span class=\"string\">&#x27;high&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_output_my_custom_css_input_fields</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">global</span> <span class=\"variable\">$post</span>;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;input type=&quot;hidden&quot; name=&quot;my_custom_css_noncename&quot; id=&quot;my_custom_css_noncename&quot; value=&quot;&#x27;</span>.<span class=\"title function_ invoke__\">wp_create_nonce</span>(<span class=\"string\">&#x27;custom-css&#x27;</span>).<span class=\"string\">&#x27;&quot; /&gt;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;textarea name=&quot;my_custom_css&quot; id=&quot;my_custom_css&quot; rows=&quot;5&quot; cols=&quot;30&quot; style=&quot;width:100%;&quot;&gt;&#x27;</span>.<span class=\"title function_ invoke__\">get_post_meta</span>(<span class=\"variable\">$post</span>-&gt;ID,<span class=\"string\">&#x27;_my_custom_css&#x27;</span>,<span class=\"literal\">true</span>).<span class=\"string\">&#x27;&lt;/textarea&gt;&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_save_my_custom_css</span>(<span class=\"params\"><span class=\"variable\">$post_id</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">wp_verify_nonce</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;my_custom_css_noncename&#x27;</span>], <span class=\"string\">&#x27;custom-css&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"variable\">$post_id</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">defined</span>(<span class=\"string\">&#x27;DOING_AUTOSAVE&#x27;</span>) &amp;&amp; DOING_AUTOSAVE) <span class=\"keyword\">return</span> <span class=\"variable\">$post_id</span>;</span><br><span class=\"line\">  <span class=\"variable\">$my_custom_css</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;my_custom_css&#x27;</span>];</span><br><span class=\"line\">  <span class=\"title function_ invoke__\">update_post_meta</span>(<span class=\"variable\">$post_id</span>, <span class=\"string\">&#x27;_my_custom_css&#x27;</span>, <span class=\"variable\">$my_custom_css</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_insert_my_custom_css</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">is_page</span>() || <span class=\"title function_ invoke__\">is_single</span>()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">have_posts</span>()) : <span class=\"keyword\">while</span> (<span class=\"title function_ invoke__\">have_posts</span>()) : <span class=\"title function_ invoke__\">the_post</span>();</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;style type=&quot;text/css&quot;&gt;&#x27;</span>.<span class=\"title function_ invoke__\">get_post_meta</span>(<span class=\"title function_ invoke__\">get_the_ID</span>(), <span class=\"string\">&#x27;_my_custom_css&#x27;</span>, <span class=\"literal\">true</span>).<span class=\"string\">&#x27;&lt;/style&gt;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">endwhile</span>; <span class=\"keyword\">endif</span>;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">rewind_posts</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在文章的编辑页面就会出现如下输入框：</p>\n<div align='center'><img src='/images/hexo_post_135.png' alt='' width='500'/></div>\n\n<p>它是在字数统计的下面，我一开始没注意到，以为没生效呢，差点就把这段代码否定了，不过这个方法只能用来定义特定 CSS 样式，如果想插入特定 js 代码的话，可以考虑用下面一个方法：</p>\n<p>首先还是要将下面代码添加到你的 WordPress 主题模板的 functions.php 中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&quot;wp_head&quot;</span>,<span class=\"string\">&quot;ruikeedu_custom_head&quot;</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ruikeedu_custom_head</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">is_single</span>() || <span class=\"title function_ invoke__\">is_page</span>()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> <span class=\"variable\">$post</span>;</span><br><span class=\"line\">    <span class=\"variable\">$custom_head</span> = <span class=\"title function_ invoke__\">get_post_meta</span>(<span class=\"variable\">$post</span>-&gt;ID, <span class=\"string\">&#x27;custom_head&#x27;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$custom_head</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在文章的编辑页面设置显示自定义栏目：</p>\n<div align='center'><img src='/images/hexo_post_136.png' alt='' width='700'/></div>\n\n<p>然后在文章编辑的后面会出现自定义栏目的输入框，名称为 custom_head，值就是你想插入的 css 代码或 js 代码（css 代码需要有 <code>&lt;style&gt;&lt;/style&gt;</code>，js 代码同理，因为该方法不会自动添加标签）</p>\n<p>总结：网上虽然关于这个问题的回答很多，但是基本上都是抄来抄去，而且有的方法亲测不可用，所以推荐以上这两种方法一起用，既可以添加 css 代码又可以添加 js 代码。</p>\n<h2 id=\"4-允许分类描述添加-html-代码\"><a href=\"#4-允许分类描述添加-html-代码\" class=\"headerlink\" title=\"4. 允许分类描述添加 html 代码\"></a>4. 允许分类描述添加 html 代码</h2><p>出于安全等因素考虑，WordPress 后台的文本框一般是不允许添加 html 代码的（也就是被过滤掉）。所以如果有 WP 用户需要在分类描述中添加 html 代码，下面这个实现方法就可以实现。直接将下面的代码添加到当前主题的 functions.php 文件即可：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 允许分类描述添加html代码</span></span><br><span class=\"line\"><span class=\"comment\"> * https://www.wpdaxue.com/category-description-support-html.html</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">remove_filter</span>(<span class=\"string\">&#x27;pre_term_description&#x27;</span>, <span class=\"string\">&#x27;wp_filter_kses&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">remove_filter</span>(<span class=\"string\">&#x27;term_description&#x27;</span>, <span class=\"string\">&#x27;wp_kses_data&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>如果你还想让 链接描述和备注、用户描述 也一样支持 html 代码，可以试试下面的代码，同样是添加到 functions.php：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Disables Kses only for textarea saves</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;pre_term_description&#x27;</span>, <span class=\"string\">&#x27;pre_link_description&#x27;</span>, <span class=\"string\">&#x27;pre_link_notes&#x27;</span>, <span class=\"string\">&#x27;pre_user_description&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"variable\">$filter</span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_ invoke__\">remove_filter</span>(<span class=\"variable\">$filter</span>, <span class=\"string\">&#x27;wp_filter_kses&#x27;</span>);</span><br><span class=\"line\">&#125;<span class=\"comment\">// Disables Kses only for textarea admin displays</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;term_description&#x27;</span>, <span class=\"string\">&#x27;link_description&#x27;</span>, <span class=\"string\">&#x27;link_notes&#x27;</span>, <span class=\"string\">&#x27;user_description&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"variable\">$filter</span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_ invoke__\">remove_filter</span>(<span class=\"variable\">$filter</span>, <span class=\"string\">&#x27;wp_kses_data&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果你需要进一步了解实现原理，可以自己阅读以下文档：</p>\n<ul>\n<li><a href=\"http://codex.wordpress.org/Function_Reference/wp_filter_kses\">http://codex.wordpress.org/Function_Reference/wp_filter_kses</a></li>\n<li><a href=\"http://codex.wordpress.org/Function_Reference/wp_kses_data\">http://codex.wordpress.org/Function_Reference/wp_kses_data</a></li>\n</ul>\n<h2 id=\"5-在文章中插入动图\"><a href=\"#5-在文章中插入动图\" class=\"headerlink\" title=\"5. 在文章中插入动图\"></a>5. 在文章中插入动图</h2><p>Wordpress 对于文章中的图片是默认进行缩略处理的，而文章中的 gif 动图在经过处理后就变成了静态文件，就不会“动”了，所以需要插入动图之后对其进行编辑，然后选择完整尺寸就可以了，如果在编辑文章时，该 gif 动图就已经“动”了起来，那证明已经成功了。</p>\n<div align='center'><img src='/images/hexo_post_8.png' alt='' width='500'/></div>\n\n<h2 id=\"6-编辑文章上传图片时提示-HTTP-错误\"><a href=\"#6-编辑文章上传图片时提示-HTTP-错误\" class=\"headerlink\" title=\"6.编辑文章上传图片时提示 HTTP 错误\"></a>6.编辑文章上传图片时提示 HTTP 错误</h2><p>这个错误发生在我刚把项目从本地部署到服务器之后，然后我就上网搜了一下，有的人说是因为图片太长或太大了，但是我将图片压缩之后还是提示这个错误，所以又尝试了一些其他方法：</p>\n<ol>\n<li>如果使用的是服务器，那应该是安全设置问题，修改服务器的 httpd.conf 文件，删除里面关于 mod_security 部分就可以了</li>\n<li>如果使用的是虚拟主机，在 .htaccess 文件里面加上一行（这个方法亲测有效）：</li>\n</ol>\n<blockquote>\n<p>SetEnvIfNoCase Request_URI /wp-admin/async-upload.php$ MODSEC_ENABLE=Off</p>\n</blockquote>\n<ol start=\"3\">\n<li>如果上述方法都不能解决，有可能你的图片确实是太长或者太大了，还是压缩一下再上传试一下吧</li>\n</ol>\n<h2 id=\"7-更改新域名\"><a href=\"#7-更改新域名\" class=\"headerlink\" title=\"7. 更改新域名\"></a>7. 更改新域名</h2><p>这个问题的故事是这样的：因为想给自己的网站备案，所以就买了一个可以备案的域名 merrier.wang，而之前是 merrier.online，在买完域名并解析之后，在 Wordpress 后台将域名配置成 merrier.wang 之后就出现问题了，因为 merrier.wang 是没有备案的，所以就无法访问：</p>\n<div align='center'><img src='/images/hexo_post_144.png' alt='' width='500'/></div>\n\n<p>但是访问之前的 merrier.online 又会重定向到 merrier.wang（应该是 Wordpress 自带的重定向），所以就相当于连后台也访问不了了，只能修改域名。在这里顺便提醒一下，如果你也给域名申请备案中，先不要在后台修改 Wordpress 的域名，因为备案不成功是访问不了的；接下来总结一下网上几种更改新域名的方法：</p>\n<h3 id=\"方法一：修改-wp-config-php\"><a href=\"#方法一：修改-wp-config-php\" class=\"headerlink\" title=\"方法一：修改 wp-config.php\"></a>方法一：修改 wp-config.php</h3><p>在 wp-config.php 中，添加以下两行内容：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">define</span>(<span class=\"string\">&#x27;WP_HOME&#x27;</span>,<span class=\"string\">&#x27;http://\byourwebsite&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">define</span>(<span class=\"string\">&#x27;WP_SITEURL&#x27;</span>,<span class=\"string\">&#x27;http://yourwebsite&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>然后登录后台，在 “常规 -&gt; 设置”重新配置新博客地址（HOME）和安装地址（SITEURL），<strong>成功后一定记得删除上面添加的内容。</strong></p>\n<h3 id=\"方法二：修改-functions-php\"><a href=\"#方法二：修改-functions-php\" class=\"headerlink\" title=\"方法二：修改 functions.php\"></a>方法二：修改 functions.php</h3><p>functions.php 位于当前博客主题目录内，在其中添加以下两行内容：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">update_option</span>(<span class=\"string\">&#x27;siteurl&#x27;</span>,<span class=\"string\">&#x27;http://yourwebsite&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">update_option</span>(<span class=\"string\">&#x27;home&#x27;</span>,<span class=\"string\">&#x27;http://yourwebsite&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>然后登录后台，在 “常规 -&gt; 设置”重新配置新博客地址（HOME）和安装地址（SITEURL），<strong>成功后一定记得删除上面添加的内容。</strong></p>\n<h3 id=\"方法三：修改-wp-config-php（自动更新地址）\"><a href=\"#方法三：修改-wp-config-php（自动更新地址）\" class=\"headerlink\" title=\"方法三：修改 wp-config.php（自动更新地址）\"></a>方法三：修改 wp-config.php（自动更新地址）</h3><p>在 wp-config.php 中，添加下面一行内容</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">define</span>(<span class=\"string\">&#x27;RELOCATE&#x27;</span>,<span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n<p>然后登录后台地址，WP 将自动更新安装地址（SITEURL），手动修改博客地址（HOME）地址即可，<strong>成功后一定要记得删除上面添加的内容</strong></p>\n<h3 id=\"方法四：修改数据库\"><a href=\"#方法四：修改数据库\" class=\"headerlink\" title=\"方法四：修改数据库\"></a>方法四：修改数据库</h3><p>通过某些方法（phpmyadmin 等）登陆到数据库，找到 wp_options 表，将表中的 siteurl 和 home 字段修改为当前的新域名</p>\n<h2 id=\"8-页面下开启评论框\"><a href=\"#8-页面下开启评论框\" class=\"headerlink\" title=\"8.页面下开启评论框\"></a>8.页面下开启评论框</h2><p>我在更新了一些页面（比如标签云、读者墙、网址导航）之后，发现这些页面下没有评论框，非常的不爽，就上网查了一下，然后大部分答案都是修改代码，我试了之后发现还是不行，后来在 <a href=\"http://tieba.baidu.com/p/2309858682\">wordpress吧</a>发现了问题出在了哪里：</p>\n<p>首先，在后台的页面设置界面，显示讨论栏目：</p>\n<div align='center'><img src='/images/hexo_post_145.png' alt='' width='700'/></div>\n\n<p>然后在文章的下面开启允许评论：</p>\n<div align='center'><img src='/images/hexo_post_146.png' alt='' width='700'/></div>\n\n<p>经过这两个步骤之后刷新页面（别忘了更新），就会发现评论框出现了！</p>\n<h2 id=\"9-Wordpress-后台安装主题或插件时需要-FTP-帐号怎么办\"><a href=\"#9-Wordpress-后台安装主题或插件时需要-FTP-帐号怎么办\" class=\"headerlink\" title=\"9. Wordpress 后台安装主题或插件时需要 FTP 帐号怎么办\"></a>9. Wordpress 后台安装主题或插件时需要 FTP 帐号怎么办</h2><p>在我把代码部署到服务器上之后发现在更新插件或者安装插件的时候需要输入 FTP 用户名和密码，去阿里云控制台也没有找到，所以就上网找了一些解决教程，试了一下下面的解决方法，实测有效：</p>\n<p>主要原因是 Wordpress 主目录的权限所有者不属于 apache 造成的；</p>\n<p>第一步：找到 apache 服务所使用的用户名和用户组，具体做法为打开终端，输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -aux</span><br></pre></td></tr></table></figure>\n<p>找到 <code>/usr/sbin/apach</code>（或 <code>/usr/sbin/httpd</code>）的用户名，它就是 apache 的所有者，我这里是 apache</p>\n<p>第二步：终端输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">chown</span> \bapache:apache -R /var/www/</span><br></pre></td></tr></table></figure>\n<p>这里的 <code>/var/www/</code> 是我的 web 主目录也是 Wordpress 主目录；<br>好了，这样就 OK 了，再进入 Wordpress 后台安装主题和插件就不再需要 FTP 帐户和密码了！！</p>\n<h2 id=\"10-WordPress-数据库及各表结构\"><a href=\"#10-WordPress-数据库及各表结构\" class=\"headerlink\" title=\"10. WordPress 数据库及各表结构\"></a>10. WordPress 数据库及各表结构</h2><p>转载自 <a href=\"http://blog.csdn.net/ppiao1970hank/article/details/6301812\">csdn</a>，相信知道这些数据表的结构之后，可以对自己的 Wordpress 网站进行更加个性化的设置，当然如果你的英文还可以的话，推荐 <a href=\"https://codex.wordpress.org/Database_Description#Table_Overview\">WordPress官方文档</a>，官方已经给出了比较详细的表格</p>\n<h2 id=\"11-建立数据库连接时出错\"><a href=\"#11-建立数据库连接时出错\" class=\"headerlink\" title=\"11. 建立数据库连接时出错\"></a>11. 建立数据库连接时出错</h2><p>某一天，我心血来潮想搞个 https，结果刷新网页的时候发现显示“建立数据库连接时出错”，后来在服务器上重启 mysql 就没问题了= =。。</p>\n<h2 id=\"12-升级至-HTTPS-时图片路径仍然为-HTTP\"><a href=\"#12-升级至-HTTPS-时图片路径仍然为-HTTP\" class=\"headerlink\" title=\"12. 升级至 HTTPS 时图片路径仍然为 HTTP\"></a>12. 升级至 HTTPS 时图片路径仍然为 HTTP</h2><p>前几天把网站升级至 HTTPS 了，不过随之而来的就是一堆 bug 报错，首先就是文章中的图片路径，仍然是 HTTP 的话浏览器会报 <code>Mixed Content</code> 错，但是我通过修改数据库的方式仍然不管用，后来不知不觉把两个插件禁用了，然后就好了，这两个插件就是七牛云的相关插件：<strong>WPJAM BASIC、WPJAM 七牛镜像存储</strong>，不过禁用掉之后就用不了七牛云了，后续有时间我再深入研究一下= =</p>\n<h2 id=\"13-WordPress：基于-JWT-的身份验证\"><a href=\"#13-WordPress：基于-JWT-的身份验证\" class=\"headerlink\" title=\"13. WordPress：基于 JWT 的身份验证\"></a>13. WordPress：基于 JWT 的身份验证</h2><p>如果你想基于 WordPress 去创建前端 App 或者移动端 App，解决用户的身份验证可以使用 JWT 这种方法，它是一种基于 Token 的验证身份的方法。</p>\n","categories":[{"name":"Wordpress","path":"api/categories/Wordpress.json"}],"tags":[{"name":"指南","path":"api/tags/指南.json"},{"name":"Wordpress","path":"api/tags/Wordpress.json"}]}