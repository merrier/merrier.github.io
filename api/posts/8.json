{"total":120,"pageSize":10,"pageCount":12,"data":[{"title":"CSS深入理解系列","slug":"CSS深入理解系列","date":"2017-04-21T13:52:56.000Z","updated":"2019-02-28T12:34:16.852Z","comments":true,"path":"api/articles/CSS深入理解系列.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>此系列的文章是我对张鑫旭的讲解的总结，张鑫旭作为很早入行前端的代表人物，其对 html 以及 css 的理解很深刻，所以他的系列文章“<a href=\"http://www.imooc.com/search/course?words=%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3css\" target=\"_blank\" rel=\"noopener\">深入理解 CSS</a>”是一个不错的前端基础教材，虽然我将其讲解进行了总结，但是还是希望你有时间能够看一下他的视频，风趣幽默又不失教学性，一定会有所收获。</p>\n<ul>\n<li><a href=\"/20170421/line-height-of-css.html\">CSS深入理解之line-height</a></li>\n<li><a href=\"/20170420/margin-of-css.html\">CSS深入理解之margin</a></li>\n<li><a href=\"/20170420/padding-of-css.html\">CSS深入理解之padding</a></li>\n<li><a href=\"/20170420/z-index-of-css.html\">CSS深入理解之z-index</a></li>\n<li><a href=\"/20170421/relative-of-css.html\">CSS深入理解之relative</a></li>\n<li><a href=\"/20170421/vertical-align-of-css.html\">CSS深入理解之vertical-align</a></li>\n<li><a href=\"/20170421/absolute-of-css.html\">CSS深入理解之absolute</a></li>\n<li><a href=\"/20170421/overflow-of-css.html\">CSS深入理解之overflow</a></li>\n<li><a href=\"/20170421/float-of-css.html\">CSS深入理解之float</a></li>\n<li><a href=\"/20170423/border-of-css.html\">CSS深入理解之border</a></li>\n</ul>\n","raw":null,"categories":[{"name":"series","path":"api/categories/series.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]},{"title":"CSS深入理解之float","slug":"CSS深入理解之float","date":"2017-04-21T13:41:31.000Z","updated":"2019-02-28T12:34:16.852Z","comments":true,"path":"api/articles/CSS深入理解之float.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<h2 id=\"1-float-的历史\"><a href=\"#1-float-的历史\" class=\"headerlink\" title=\"1. float 的历史\"></a>1. float 的历史</h2><p>浮动设计的初衷: 实现文字环绕</p>\n<h2 id=\"2-float-感性认知\"><a href=\"#2-float-感性认知\" class=\"headerlink\" title=\"2. float 感性认知\"></a>2. float 感性认知</h2><p>float 具有<strong>包裹性</strong>和<strong>破坏性</strong></p>\n<h3 id=\"具有包裹性的小伙伴\"><a href=\"#具有包裹性的小伙伴\" class=\"headerlink\" title=\"具有包裹性的小伙伴:\"></a>具有包裹性的小伙伴:</h3><ul>\n<li>display: inline-block / table-cell / …</li>\n<li>position: absolute(近亲) / fixed / sticky</li>\n<li>overflow: hidden / scroll</li>\n</ul>\n<h3 id=\"具有破坏性的小伙伴-父级元素容器塌陷，高度变为-0\"><a href=\"#具有破坏性的小伙伴-父级元素容器塌陷，高度变为-0\" class=\"headerlink\" title=\"具有破坏性的小伙伴: (父级元素容器塌陷，高度变为 0)\"></a>具有破坏性的小伙伴: (父级元素容器塌陷，高度变为 0)</h3><ul>\n<li>display: none</li>\n<li>position: absolute(近亲) / fixed / sticky</li>\n</ul>\n<h2 id=\"3-如何解决浮动让父元素高度塌陷的问题\"><a href=\"#3-如何解决浮动让父元素高度塌陷的问题\" class=\"headerlink\" title=\"3. 如何解决浮动让父元素高度塌陷的问题\"></a>3. 如何解决浮动让父元素高度塌陷的问题</h2><p>浮动的破坏性只是单纯为了实现文字环绕效果而已<br>关于<strong>浮动塌陷</strong>：给父元素设置了宽高，那么父元素不会塌陷；如果设置了宽度没有设置高度，会塌陷，宽度值还是设定的值，高度为0；如果没有设置宽高，发生塌陷，宽度为页面宽度，高度为0。</p>\n<h2 id=\"4-清除浮动\"><a href=\"#4-清除浮动\" class=\"headerlink\" title=\"4. 清除浮动\"></a>4. 清除浮动</h2><h3 id=\"底部插入-clear-both\"><a href=\"#底部插入-clear-both\" class=\"headerlink\" title=\"底部插入 clear:both\"></a>底部插入 <code>clear:both</code></h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">:after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.clearfix</span>&#123;</span><br><span class=\"line\">  *zoom: 1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>更好的方法：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">:after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.clearfix</span>&#123;</span><br><span class=\"line\">  *zoom: 1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-BFC\"><a href=\"#5-BFC\" class=\"headerlink\" title=\"5. BFC\"></a>5. BFC</h2><p>BFC：Block Formatting Context，<strong>块级格式化上下文</strong>，一个独立的块级渲染区域，该区域拥有一套渲染规则来约束块级盒子的布局，且与区域外部无关</p>\n<h3 id=\"产生条件：\"><a href=\"#产生条件：\" class=\"headerlink\" title=\"产生条件：\"></a>产生条件：</h3><p>满足其一即可：</p>\n<ol>\n<li>html 根元素</li>\n<li>float 的值不为 none</li>\n<li>display 的值为 inline-block、table-cell、table-caption</li>\n<li>position 的值为 absolute 或 fix</li>\n</ol>\n<h3 id=\"约束规则：\"><a href=\"#约束规则：\" class=\"headerlink\" title=\"约束规则：\"></a>约束规则：</h3><ol>\n<li>生成 BFC 元素的子元素会一个接着一个防止垂直方向上他们的起点是一个包含块的顶部，两个相邻子元素之间的垂直距离取决于元素的 margin 特性。在 BFC 中相邻的块级元素外边距会折叠，同属一个 BFC 的两个相邻 Box 的 margin 会发生重叠。</li>\n<li>生成 BFC 元素的子元素中，每一个子元素左外边距与包含块的左边界接触，即使浮动元素也是如此（除非这个子元素自身也是一个浮动元素）。</li>\n<li>BFC 的区域不会与 float 的元素区域重叠。</li>\n<li>计算 BFC 高度时，浮动元素也参与计算。</li>\n<li>BFC 就是页面上一个隔离的独立容器，容器里面的子元素不会影响到外面元素，反之亦然。</li>\n</ol>\n<h2 id=\"6-浮动的优劣\"><a href=\"#6-浮动的优劣\" class=\"headerlink\" title=\"6. 浮动的优劣\"></a>6. 浮动的优劣</h2><h3 id=\"浮动的影响\"><a href=\"#浮动的影响\" class=\"headerlink\" title=\"浮动的影响\"></a>浮动的影响</h3><ul>\n<li>元素 block 块状化(砖头化)</li>\n<li>破坏性造成的紧密排列特性(去空格化，和 inline-block 不同)</li>\n</ul>\n<h3 id=\"浮动存在的问题\"><a href=\"#浮动存在的问题\" class=\"headerlink\" title=\"浮动存在的问题:\"></a>浮动存在的问题:</h3><ul>\n<li>容错性比较糟糕，容易出问题</li>\n<li>全部用固定尺寸，代码不易重用</li>\n<li>与 IE7 及以下版本不兼容</li>\n</ul>\n<h2 id=\"7-两侧自适应布局\"><a href=\"#7-两侧自适应布局\" class=\"headerlink\" title=\"7.两侧自适应布局\"></a>7.两侧自适应布局</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.left&#123;  // 左侧</span><br><span class=\"line\">  <span class=\"selector-tag\">float</span>: <span class=\"selector-tag\">left</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.right&#123;  // 右侧</span><br><span class=\"line\">  <span class=\"selector-tag\">width</span>: <span class=\"selector-tag\">max-width</span>;</span><br><span class=\"line\">  *<span class=\"selector-tag\">width</span>: <span class=\"selector-tag\">auto</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">table-cell</span>;</span><br><span class=\"line\">  *<span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">inline-block</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","raw":null,"categories":[{"name":"css","path":"api/categories/css.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]},{"title":"CSS深入理解之overflow","slug":"CSS深入理解之overflow","date":"2017-04-21T13:29:13.000Z","updated":"2019-02-28T12:34:16.852Z","comments":true,"path":"api/articles/CSS深入理解之overflow.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_124.png","content":"<h2 id=\"1-overflow-起作用的前提\"><a href=\"#1-overflow-起作用的前提\" class=\"headerlink\" title=\"1. overflow 起作用的前提\"></a>1. overflow 起作用的前提</h2><ol>\n<li>非 display:inline水 平</li>\n<li>对应方位的尺寸限制 .width / height / max-width / max-height / absolute 拉伸</li>\n<li>对于单元格 td 等，还需要 table 为 table-layout:fixed 状态才行</li>\n</ol>\n<p><strong>Tips</strong>: 如果 overflow-x，overflow-y 相同，则等同于 overflow；如果不同，其中一个为 visible，另外一个为 auto / hidden / scroll，则 visible 会重置为 auto</p>\n<h2 id=\"2-JS-与滚动高度\"><a href=\"#2-JS-与滚动高度\" class=\"headerlink\" title=\"2. JS 与滚动高度\"></a>2. JS 与滚动高度</h2><p>无论什么浏览器，默认滚动条均来自 <code>&lt;html&gt;</code>，而不是 <code>&lt;body&gt;</code> 标签.所以，如果想要去除页面默认滚动条，只需要 <strong>html{ overflow: hidden }</strong>，而没必要把 <code>&lt;body&gt;</code> 也拉下水。</p>\n<h3 id=\"关于scrollTop\"><a href=\"#关于scrollTop\" class=\"headerlink\" title=\"关于scrollTop\"></a>关于scrollTop</h3><p>Chrome 浏览器: document.body.scrollTop<br>其他浏览器: document.documentElement.scrollTop</p>\n<p>目前，两者不会同时存在，建议使用: </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> st = <span class=\"built_in\">document</span>.body.scrollTop || <span class=\"built_in\">document</span>.documentElement.scrollTop</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-水平居中跳动问题的修复\"><a href=\"#3-水平居中跳动问题的修复\" class=\"headerlink\" title=\"3. 水平居中跳动问题的修复\"></a>3. 水平居中跳动问题的修复</h2><p>由于滚动条会使网页可用内容宽度变小，所以水平居中的页面出现滚动条时会有跳动的问题，解决方案： </p>\n<ol>\n<li>html{ overflow-y: scroll } // 滚动栏一直存在</li>\n<li>container{ padding-left: calc(100vw - 100%) } // <strong>100vw-浏览器宽度;100%-可用内容宽度</strong></li>\n</ol>\n<h2 id=\"4-iOS-原生滚动回调效果\"><a href=\"#4-iOS-原生滚动回调效果\" class=\"headerlink\" title=\"4. iOS 原生滚动回调效果:\"></a>4. iOS 原生滚动回调效果:</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">-webkit-overflow-scrolling</span><span class=\"selector-pseudo\">:touch</span>;</span><br></pre></td></tr></table></figure>\n<p>会使滚动出现缓冲效果</p>\n<h2 id=\"5-overflow-与块状格式上下文\"><a href=\"#5-overflow-与块状格式上下文\" class=\"headerlink\" title=\"5. overflow 与块状格式上下文\"></a>5. overflow 与块状格式上下文</h2><h3 id=\"两栏自适应布局\"><a href=\"#两栏自适应布局\" class=\"headerlink\" title=\"两栏自适应布局\"></a>两栏自适应布局</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.cell</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table-cell;</span><br><span class=\"line\">  width: 2000px; // IE8+ BFC特性</span><br><span class=\"line\">  <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">inline-block</span>;</span><br><span class=\"line\">  width: auto; // IE7- 伪BFC特性</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>只适用于 block 属性的元素，之间的空隙推荐使用浮动元素的 margin 来实现</p>\n<h3 id=\"父元素设置-overflow-scroll-overflow-auto-overflow-hidden，可以解决父元素因内部浮动塌陷问题。\"><a href=\"#父元素设置-overflow-scroll-overflow-auto-overflow-hidden，可以解决父元素因内部浮动塌陷问题。\" class=\"headerlink\" title=\"父元素设置 overflow: scroll; overflow: auto; overflow:hidden，可以解决父元素因内部浮动塌陷问题。\"></a>父元素设置 overflow: scroll; overflow: auto; overflow:hidden，可以解决父元素因内部浮动塌陷问题。</h3><p>更多请参见：<a href=\"http://harttle.com/2016/05/11/block-formatting-context.html\" target=\"_blank\" rel=\"noopener\">overflow 与布局上下文（BFC）</a></p>\n<h2 id=\"6-overflow-与-absolute-绝对定位\"><a href=\"#6-overflow-与-absolute-绝对定位\" class=\"headerlink\" title=\"6. overflow 与 absolute 绝对定位\"></a>6. overflow 与 absolute 绝对定位</h2><p>overflow: hidden 在子元素绝对定位失效，可以理解成，父元素与子元素所在的层级不一样了，子元素完全脱离文档流了，因而无法被剪裁。而给父元素加上除 static 以外的定位属性（使之成为包含块），只不过是提高了父元素的层级，从而约束绝对定位的表现。使之可以被溢出隐藏</p>\n<h3 id=\"如何避免-overflow-失效\"><a href=\"#如何避免-overflow-失效\" class=\"headerlink\" title=\"如何避免 overflow 失效?\"></a>如何避免 overflow 失效?</h3><ol>\n<li>overflow 元素自身为包含块;</li>\n<li>overflow 元素的子元素为包含块;</li>\n<li>任意合法 transform 声明当作包含块;</li>\n</ol>\n<h4 id=\"overflow-元素自身-transform\"><a href=\"#overflow-元素自身-transform\" class=\"headerlink\" title=\"overflow 元素自身 transform:\"></a>overflow 元素自身 transform:</h4><ul>\n<li>IE9+/Firefox √</li>\n<li>Chrome/Safari(win)/Opera ×</li>\n</ul>\n<h4 id=\"overflow-子元素-transform\"><a href=\"#overflow-子元素-transform\" class=\"headerlink\" title=\"overflow 子元素 transform\"></a>overflow 子元素 transform</h4><ul>\n<li>IE9+/Firefox √</li>\n<li>Chrome/Safari(win)/Opera √</li>\n</ul>\n<p>动态渲染异常: Chrome 包含块重定位 / Opera 同，但点击重绘自修正 / Safari 非定位 overflow 元素左上角</p>\n<h3 id=\"overflow-失效妙用\"><a href=\"#overflow-失效妙用\" class=\"headerlink\" title=\"overflow 失效妙用\"></a>overflow 失效妙用</h3><p>右侧图片会紧挨左侧内容，并实现自适应跟随，<code>&amp;nbsp</code> 可以辅助将图片设置在右方；将 <code>&amp;nbsp</code> 的高度设置为 0 以及 overflow: hidden 可以让 <code>&amp;nbsp</code> 不影响布局，但图片是绝对定位，不会受 overflow: hidden 影响：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_124.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"7-依赖-overflow-的样式表现\"><a href=\"#7-依赖-overflow-的样式表现\" class=\"headerlink\" title=\"7. 依赖 overflow 的样式表现\"></a>7. 依赖 overflow 的样式表现</h2><h3 id=\"resize\"><a href=\"#resize\" class=\"headerlink\" title=\"resize\"></a>resize</h3><p>可以拉伸元素尺寸，但是，此声明要想起作用，元素的 overflow 属性值不能是 visible</p>\n<h3 id=\"text-overflow-ellipsis\"><a href=\"#text-overflow-ellipsis\" class=\"headerlink\" title=\"text-overflow:ellipsis\"></a>text-overflow:ellipsis</h3><p>文本溢出时用 … 代替，经常与 white-space: nowrap 一起使用，但是，<strong>不设置 overflow: hidden 属性，无法实现效果</strong></p>\n<h2 id=\"8-overflow-与锚点技术\"><a href=\"#8-overflow-与锚点技术\" class=\"headerlink\" title=\"8. overflow 与锚点技术\"></a>8. overflow 与锚点技术</h2><h3 id=\"锚点定位\"><a href=\"#锚点定位\" class=\"headerlink\" title=\"锚点定位:\"></a>锚点定位:</h3><p>寻找妹子5: <code>&lt;a href=&quot;#mm5&quot;&gt;</code></p>\n<h3 id=\"锚点定位实现的前提\"><a href=\"#锚点定位实现的前提\" class=\"headerlink\" title=\"锚点定位实现的前提:\"></a>锚点定位实现的前提:</h3><ul>\n<li>容器可滚动;</li>\n<li>锚点元素在容器内;</li>\n</ul>\n<h3 id=\"锚点定位的本质\"><a href=\"#锚点定位的本质\" class=\"headerlink\" title=\"锚点定位的本质\"></a>锚点定位的本质</h3><ol>\n<li>触发锚点定位;</li>\n<li>锚点元素通过 scrollTop 值改变向上偏移定位;</li>\n<li>锚元素的上边缘和可滚动容器上边缘对齐</li>\n</ol>\n<h3 id=\"锚点定位的触发\"><a href=\"#锚点定位的触发\" class=\"headerlink\" title=\"锚点定位的触发\"></a>锚点定位的触发</h3><ul>\n<li>url 地址中的锚链与锚点元素;</li>\n<li>可 focus 的锚点元素处于 focus 态</li>\n</ul>\n<h3 id=\"锚点定位的作用\"><a href=\"#锚点定位的作用\" class=\"headerlink\" title=\"锚点定位的作用\"></a>锚点定位的作用</h3><ul>\n<li>快速定位</li>\n<li>选项卡技术(有严重的不足)</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_68.png\" alt=\"\" width=\"400\"></div>","raw":null,"categories":[{"name":"css","path":"api/categories/css.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]},{"title":"CSS深入理解之absolute","slug":"CSS深入理解之absolute","date":"2017-04-21T13:11:24.000Z","updated":"2019-02-28T12:34:16.852Z","comments":true,"path":"api/articles/CSS深入理解之absolute.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_64.png","content":"<h2 id=\"1-超越-overflow\"><a href=\"#1-超越-overflow\" class=\"headerlink\" title=\"1. 超越 overflow\"></a>1. 超越 overflow</h2><p>独立的 absolute 可以摆脱 overflow 的限制，无论是滚动还是隐藏</p>\n<h2 id=\"2-无依赖的-absolute\"><a href=\"#2-无依赖的-absolute\" class=\"headerlink\" title=\"2. 无依赖的 absolute\"></a>2. 无依赖的 absolute</h2><p>不受 relative 限制的 absolute 定位，行为表现上是不使用 top / right / bottom / left 任何一个属性或使用 auto 作为值</p>\n<h2 id=\"3-定位的行为表现\"><a href=\"#3-定位的行为表现\" class=\"headerlink\" title=\"3. 定位的行为表现\"></a>3. 定位的行为表现</h2><ul>\n<li>脱离文档流</li>\n<li>去浮动：absolute 生效的时候，float 是失效的</li>\n<li>位置跟随：原来是什么位置，绝对定位后依然是什么位置(元素是 block，absolute 之后依然是 block，inline 时 absolute 后依然是 inline)</li>\n<li>可以配合 margin 来精确定位</li>\n<li>注释 <code>&lt;!\\-\\- --&gt;</code> 可以消除换行后的空白，同时保持代码可读性</li>\n</ul>\n<h2 id=\"4-居中以及边缘对齐定位\"><a href=\"#4-居中以及边缘对齐定位\" class=\"headerlink\" title=\"4. 居中以及边缘对齐定位\"></a>4. 居中以及边缘对齐定位</h2><h3 id=\"居中\"><a href=\"#居中\" class=\"headerlink\" title=\"居中\"></a>居中</h3><p>采用 <code>text-align:center</code> 使 div 中的空格居中，利用 <code>absolute 的跟随性</code> 配合 <code>margin 负值自身宽度 50%</code> 实现居中。</p>\n<p>html：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"course-loading-x\"</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://img.mukewang.com/5453077400015bba00010001.gif\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"course-loading\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"加载中...\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>css：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.course-loading-x</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">20px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center; </span><br><span class=\"line\">  <span class=\"attribute\">letter-spacing</span>: -.<span class=\"number\">25em</span>; </span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.course-loading</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute; </span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: -<span class=\"number\">26px</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_64.png\" alt=\"\" width=\"600\"></div>\n\n<h3 id=\"边缘定位\"><a href=\"#边缘定位\" class=\"headerlink\" title=\"边缘定位\"></a>边缘定位</h3><p>采用 <code>text-align:right</code> 使 div 中的空格居右(fixed 是直接相对于窗口定位，而直接用 absolute 和 right，bottom 是会受到父级 relative 限制的。所以为了避免受到父级影响，使用fixed) </p>\n<p>html：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"course-fixed-x\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"course-fixed\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://www.imooc.com/activity/diaocha\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"goto_top_diaocha\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://www.imooc.com/user/feedback\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"goto_top_feed\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>css：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.course-fixed-x</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: right; </span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.course-fixed</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline; </span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed; </span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">20px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">100px</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_53.png\" alt=\"\" width=\"600\"></div>\n\n<h2 id=\"5-处理对齐、溢出技巧\"><a href=\"#5-处理对齐、溢出技巧\" class=\"headerlink\" title=\"5. 处理对齐、溢出技巧\"></a>5. 处理对齐、溢出技巧</h2><h3 id=\"处理文字前的星号\"><a href=\"#处理文字前的星号\" class=\"headerlink\" title=\"处理文字前的星号\"></a>处理文字前的星号</h3><p>将星号绝对定位后其不占据任何空间，方便后面的文字左对齐</p>\n<p>html：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">class</span>=<span class=\"string\">\"regist-label\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"regist-star\"</span>&gt;</span>*<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>登录密码</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>css：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.regist-star</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute; </span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: -<span class=\"number\">1em</span>; </span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: simsun; </span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#f30</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"图片与文字垂直对齐\"><a href=\"#图片与文字垂直对齐\" class=\"headerlink\" title=\"图片与文字垂直对齐\"></a>图片与文字垂直对齐</h3><p>对图标设置绝对定位，并设置 margin 为负值</p>\n<p>html：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"regist-remark regist-warn\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-warn\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>邮箱格式不准确（演示）</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>css：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.regist-warn</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">20px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#be3948</span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.regist-warn</span> &gt; <span class=\"selector-class\">.icon-warn</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute; </span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: -<span class=\"number\">20px</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理文字溢出\"><a href=\"#处理文字溢出\" class=\"headerlink\" title=\"处理文字溢出\"></a>处理文字溢出</h3><p>利用 absolute 绝对定位使 span 不占据任何空间，从而使其不换行（注 <code>&lt;span&gt;</code> 必须紧跟前一个标签，不能有空格）</p>\n<p>html：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"regist-remark\"</span>&gt;</span>请输入6-16位密码，区分大小写，不能使用空格<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>css：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.regist-remark</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute; </span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">21px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">9px</span>; </span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#666</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-脱离文档流\"><a href=\"#6-脱离文档流\" class=\"headerlink\" title=\"6. 脱离文档流\"></a>6. 脱离文档流</h2><h3 id=\"回流与重绘\"><a href=\"#回流与重绘\" class=\"headerlink\" title=\"回流与重绘\"></a>回流与重绘</h3><p>由于回流与重绘的缘故，动画尽量作用在绝对定位元素上</p>\n<h3 id=\"垂直空间的等级\"><a href=\"#垂直空间的等级\" class=\"headerlink\" title=\"垂直空间的等级\"></a>垂直空间的等级</h3><p>z-index 潜在『误区』:绝对定位元素都需要 z-index 控制等级以确定其显示的位置</p>\n<h4 id=\"absolute-是-z-index-无依赖的：\"><a href=\"#absolute-是-z-index-无依赖的：\" class=\"headerlink\" title=\"absolute 是 z-index 无依赖的：\"></a>absolute 是 z-index 无依赖的：</h4><ol>\n<li>如果只有一个绝对定位元素，则会自动<strong>覆盖普通元素</strong></li>\n<li>如果有两个绝对定位，可以控制 DOM 流的前后顺序达到覆盖效果(<strong>后来居上</strong>)</li>\n<li>如果多个绝对定位交错（非常少见），则用 <strong>z-index：1 控制</strong></li>\n<li>如果非弹框类的绝对定位元素 <strong>z-index &gt; 2，必定 z-index 冗余</strong>，需要优化</li>\n</ol>\n<h2 id=\"7-absolute-的-top-right-bottom-left-和-width-height\"><a href=\"#7-absolute-的-top-right-bottom-left-和-width-height\" class=\"headerlink\" title=\"7. absolute 的 top / right / bottom / left 和 width / height\"></a>7. absolute 的 top / right / bottom / left 和 width / height</h2><h3 id=\"absolute-元素使用-top-right-bottom-left-可以让元素在容器内自由定位\"><a href=\"#absolute-元素使用-top-right-bottom-left-可以让元素在容器内自由定位\" class=\"headerlink\" title=\"absolute 元素使用 top / right / bottom / left 可以让元素在容器内自由定位\"></a>absolute 元素使用 top / right / bottom / left 可以让元素在容器内自由定位</h3><p>但是遇到属性为 <strong>position: relative / absolute / fixed / sticky</strong> 的 <code>&lt;div&gt;</code> 时，则只能到这一层为止，无法突破这一层。</p>\n<h3 id=\"使用-top-right-bottom-left-实现『拉伸』\"><a href=\"#使用-top-right-bottom-left-实现『拉伸』\" class=\"headerlink\" title=\"使用 top / right / bottom / left 实现『拉伸』\"></a>使用 top / right / bottom / left 实现『拉伸』</h3><p>当绝对定位的方向是『对立』的(如 left 和 right)，则不是瞬间位移，而是『拉伸』效果 『position: absolute;left: 0;top: 0;width: 50%』等价于『position: absolute;left: 0;top: 0;right: 50%』</p>\n<h4 id=\"没有宽度和高度声明实现的全屏自适应效果：\"><a href=\"#没有宽度和高度声明实现的全屏自适应效果：\" class=\"headerlink\" title=\"没有宽度和高度声明实现的全屏自适应效果：\"></a>没有宽度和高度声明实现的全屏自适应效果：</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.overlay</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: .<span class=\"number\">5</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"高度自适应的九宫格效果\"><a href=\"#高度自适应的九宫格效果\" class=\"headerlink\" title=\"高度自适应的九宫格效果\"></a>高度自适应的九宫格效果</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.page</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.list</span> &#123;\t</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">33.3%</span>; </span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">33.3%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"left-right-和-width-同时存在\"><a href=\"#left-right-和-width-同时存在\" class=\"headerlink\" title=\"left / right 和 width 同时存在\"></a>left / right 和 width 同时存在</h3><p>相互支持性：</p>\n<ul>\n<li>容器无需固定 width / height 值，内部元素亦可拉伸(可实现图片上一张 / 下一张的遮盖层效果)</li>\n<li>容器拉伸，内部元素支持百分比 width / height 值</li>\n</ul>\n<p><strong>优先级：width / height &gt; left / right</strong></p>\n","raw":null,"categories":[{"name":"css","path":"api/categories/css.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]},{"title":"CSS深入理解之line-height","slug":"CSS深入理解之line-height","date":"2017-04-21T08:56:36.000Z","updated":"2019-02-28T12:34:16.852Z","comments":true,"path":"api/articles/CSS深入理解之line-height.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_89.png","content":"<h2 id=\"1-baseline-与-line-height\"><a href=\"#1-baseline-与-line-height\" class=\"headerlink\" title=\"1. baseline 与 line-height\"></a>1. baseline 与 line-height</h2><p>两条 baseline 之间的距离即为行高(不同的字体所在位置不同，可能偏离基线)</p>\n<div align=\"center\"><img src=\"/images/hexo_post_89.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"2-行内框盒子模型\"><a href=\"#2-行内框盒子模型\" class=\"headerlink\" title=\"2. 行内框盒子模型\"></a>2. 行内框盒子模型</h2><p>一共有 4 种模型：</p>\n<ol>\n<li><strong>内容区域</strong>(content area)，是一种围绕文字看不见的盒子。”内容区域”(content area)的大小与 font-size 的大小相关；</li>\n<li><strong>内联盒子</strong>(inline boxes)，内联盒子不会让内容成块显示，而是排成一行。如果外部含 inline 水平的标签(span，a，em等)，则属于内联盒子。如果是个光秃秃的文字，则属于匿名内联盒子；</li>\n<li><strong>行框盒子</strong>(line boxes)，每一行就是一个行框盒子，每个行框盒子又是由一个一个内联盒子组成；</li>\n<li><code>&lt;p&gt;</code> 标签所在的<strong>包含盒子</strong>(containing box)，此盒子由一行一行的行框盒子组成；</li>\n</ol>\n<h2 id=\"3-line-height-与内联元素的高度机制\"><a href=\"#3-line-height-与内联元素的高度机制\" class=\"headerlink\" title=\"3. line-height 与内联元素的高度机制\"></a>3. line-height 与内联元素的高度机制</h2><ul>\n<li><strong>内联元素的高度是由 line-height 决定的；</strong></li>\n<li>行高由于其继承性，影响无处不在，即使单行文本也不例外；</li>\n<li>行高只是幕后黑手，高度的表现不是行高，而是内容区域和行间距；</li>\n<li><strong>内容区域高度(content area) + 行间距(vertical spacing) = 行高(line-height)；</strong></li>\n<li>内容区域高度只与字号以及字体有关，与 line-height 没有任何关系；在 simsun 字体下，内容区域高度等于文字大小值；</li>\n<li>行间距上下拆分，就有了”半行间距”；</li>\n<li><strong>行高决定内联盒子高度;行间距墙头草，可大可小(甚至负值)，保证高度正好等同于行高；</strong></li>\n<li>含多个行框盒子的包含容器–多行文本的高度就是单行文本高度累加。</li>\n</ul>\n<h2 id=\"4-line-height-各类属性值\"><a href=\"#4-line-height-各类属性值\" class=\"headerlink\" title=\"4. line-height 各类属性值\"></a>4. line-height 各类属性值</h2><h3 id=\"normal\"><a href=\"#normal\" class=\"headerlink\" title=\"normal\"></a>normal</h3><p>默认属性值.跟着用户的浏览器走，且与元素字体关联</p>\n<h3 id=\"lt-number-gt\"><a href=\"#lt-number-gt\" class=\"headerlink\" title=\"&lt;number&gt;\"></a><code>&lt;number&gt;</code></h3><p>使用数值作为行高值，根据当前元素的 font-size 大小计算</p>\n<h3 id=\"lt-length-gt\"><a href=\"#lt-length-gt\" class=\"headerlink\" title=\"&lt;length&gt;\"></a><code>&lt;length&gt;</code></h3><p>使用具体长度值作为行高值，如 1.5em; 1.5rem; 20px; 20pt</p>\n<h3 id=\"lt-percent-gt\"><a href=\"#lt-percent-gt\" class=\"headerlink\" title=\"&lt;percent&gt;\"></a><code>&lt;percent&gt;</code></h3><p>相对于设置了该 line-height 属性的元素的 font-size 大小计算</p>\n<h3 id=\"inherit\"><a href=\"#inherit\" class=\"headerlink\" title=\"inherit\"></a>inherit</h3><p>继承，input 框等元素默认行高是 normal，使用 inherit 可以让文本框样式可控性更强</p>\n<h2 id=\"5-line-height-设置为-1-5-150-1-5em-有何区别\"><a href=\"#5-line-height-设置为-1-5-150-1-5em-有何区别\" class=\"headerlink\" title=\"5. line-height 设置为 1.5 / 150% / 1.5em 有何区别\"></a>5. line-height 设置为 1.5 / 150% / 1.5em 有何区别</h2><p>计算上无差别，但是 <strong>150% / 1.5em 是根据父元素的 font-size 计算的，1.5 是根据自身的 font-size 计算；也就是 150% / 1.5em 是会将行高继承给后代元素的，而 1.5 只会将比例继承给后代元素，后代元素会根据自己的 font-size 重新计算行高</strong></p>\n<div align=\"center\"><img src=\"/images/hexo_post_83.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"6-body-全局数值行高使用经验\"><a href=\"#6-body-全局数值行高使用经验\" class=\"headerlink\" title=\"6. body 全局数值行高使用经验\"></a>6. body 全局数值行高使用经验</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: ?;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>为了方便心算，所以我们<strong>将行高设置为 20px</strong>，此时的 line-height 为：line-height = 20px / 14px ≈ 1.4287 -&gt; <strong>line-height: 1.4286</strong></p>\n<h2 id=\"7-line-height-与图片的表现\"><a href=\"#7-line-height-与图片的表现\" class=\"headerlink\" title=\"7. line-height 与图片的表现\"></a>7. line-height 与图片的表现</h2><h3 id=\"行高不会影响图片实际占据的高度\"><a href=\"#行高不会影响图片实际占据的高度\" class=\"headerlink\" title=\"行高不会影响图片实际占据的高度\"></a>行高不会影响图片实际占据的高度</h3><p>图片外面有隐藏的“幽灵”文本节点，所以 text-align: center 会使图片在p标签中居中</p>\n<div align=\"center\"><img src=\"/images/hexo_post_82.png\" alt=\"\" width=\"400\"></div>\n\n<p>内联元素的 vertical-align 默认为 baseline，所以文字的基线与图片的最下方对齐，但由于文字有行高，所以图片下方会有空隙：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_76.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"如何消除图片底部间隙\"><a href=\"#如何消除图片底部间隙\" class=\"headerlink\" title=\"如何消除图片底部间隙\"></a>如何消除图片底部间隙</h3><h4 id=\"图片块状化-无基线对齐\"><a href=\"#图片块状化-无基线对齐\" class=\"headerlink\" title=\"图片块状化-无基线对齐\"></a>图片块状化-无基线对齐</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">img</span>&#123; <span class=\"attribute\">display</span>: block; &#125;</span><br></pre></td></tr></table></figure>\n<p>块状化的元素没有 vertical-align 属性</p>\n<h4 id=\"图片底线对齐\"><a href=\"#图片底线对齐\" class=\"headerlink\" title=\"图片底线对齐\"></a>图片底线对齐</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">img</span>&#123;<span class=\"attribute\">vertical-align</span>: bottom&#125;</span><br></pre></td></tr></table></figure>\n<p>vertical-align 不再是 baseline，文本的最下方与图片的最下方对齐</p>\n<h4 id=\"行高足够小-基线位置上移\"><a href=\"#行高足够小-基线位置上移\" class=\"headerlink\" title=\"行高足够小-基线位置上移\"></a>行高足够小-基线位置上移</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span>&#123; <span class=\"attribute\">line-height</span>: <span class=\"number\">0</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>基线位置上移到图片的最下方</p>\n<h3 id=\"小图片和大文字\"><a href=\"#小图片和大文字\" class=\"headerlink\" title=\"小图片和大文字\"></a>小图片和大文字</h3><p>基本上高度受行高控制</p>\n<h2 id=\"8-line-height-的实际应用\"><a href=\"#8-line-height-的实际应用\" class=\"headerlink\" title=\"8. line-height 的实际应用\"></a>8. line-height 的实际应用</h2><h3 id=\"图片水平垂直居中\"><a href=\"#图片水平垂直居中\" class=\"headerlink\" title=\"图片水平垂直居中\"></a>图片水平垂直居中</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&gt;<span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"多行文本水平垂直居中\"><a href=\"#多行文本水平垂直居中\" class=\"headerlink\" title=\"多行文本水平垂直居中\"></a>多行文本水平垂直居中</h3><p>多行文字水平垂直居中实现的原理跟上一页图片的实现是一样的，区别在于要把多行文本所在的容器的 display 水平转换成和图片一样的，也就是 inline-block，以及重置外部继承的 text-align 和 line-height 属性值</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">250px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&gt;<span class=\"selector-class\">.text</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: normal;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","raw":null,"categories":[{"name":"css","path":"api/categories/css.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]},{"title":"CSS深入理解之vertical-align","slug":"CSS深入理解之vertical-align","date":"2017-04-21T08:40:08.000Z","updated":"2019-02-28T12:34:16.852Z","comments":true,"path":"api/articles/CSS深入理解之vertical-align.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_70.png","content":"<h2 id=\"1-vertical-align-支持的属性值\"><a href=\"#1-vertical-align-支持的属性值\" class=\"headerlink\" title=\"1. vertical-align 支持的属性值\"></a>1. vertical-align 支持的属性值</h2><ol>\n<li>线类：<strong>baseline</strong>，top，middle，bottom</li>\n<li>文本类：text-top，text-bottom</li>\n<li>上标下标类：sub，super</li>\n<li>数值百分比类：20px，2em，20%，…</li>\n</ol>\n<p>其中，默认为 baseline，百分之值是相对于 line-height 计算的</p>\n<h2 id=\"2-vertical-align-起作用的前提\"><a href=\"#2-vertical-align-起作用的前提\" class=\"headerlink\" title=\"2. vertical-align 起作用的前提\"></a>2. vertical-align 起作用的前提</h2><p>应用于 inline 水平和 table-cell 元素（图片，按钮，文字，单元格）</p>\n<h3 id=\"inline-水平：\"><a href=\"#inline-水平：\" class=\"headerlink\" title=\"inline 水平：\"></a>inline 水平：</h3><ul>\n<li>inline：<code>&lt;img&gt;</code>，<code>&lt;span&gt;</code>，<code>&lt;strong&gt;</code>，<code>&lt;em&gt;</code>，未知元素，…</li>\n<li>inline-block：<code>&lt;input&gt;</code>(IE8+)，<code>&lt;button&gt;</code>(IE8+)，…</li>\n</ul>\n<h3 id=\"table-cell-元素\"><a href=\"#table-cell-元素\" class=\"headerlink\" title=\"table-cell 元素\"></a>table-cell 元素</h3><ul>\n<li>table-cell：<code>&lt;td&gt;</code></li>\n</ul>\n<h2 id=\"3-个数不定文字与图片垂直对齐\"><a href=\"#3-个数不定文字与图片垂直对齐\" class=\"headerlink\" title=\"3. 个数不定文字与图片垂直对齐\"></a>3. 个数不定文字与图片垂直对齐</h2><p>html：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-list\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>文字<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"小公主.jpg\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>css：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.test-list</span>&gt;<span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">210px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test-list</span>&gt;<span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-vertical-align-与-line-height\"><a href=\"#4-vertical-align-与-line-height\" class=\"headerlink\" title=\"4. vertical-align 与 line-height\"></a>4. vertical-align 与 line-height</h2><h3 id=\"任何内联元素都会受到-vertical-align-与-line-height-的影响\"><a href=\"#任何内联元素都会受到-vertical-align-与-line-height-的影响\" class=\"headerlink\" title=\"任何内联元素都会受到 vertical-align 与 line-height 的影响\"></a>任何内联元素都会受到 vertical-align 与 line-height 的影响</h3><div align=\"center\"><img src=\"/images/hexo_post_70.png\" alt=\"\" width=\"500\"></div>\n\n<p>图片没有居中显示，因为<strong>受到了 vertical-align 与 line-height 的影响</strong>，此时的默认属性为vertical-align: baseline;line-height: 1.5;font-size: 24px</p>\n<h3 id=\"如何消除这种影响\"><a href=\"#如何消除这种影响\" class=\"headerlink\" title=\"如何消除这种影响\"></a>如何消除这种影响</h3><ol>\n<li>消灭 vertical-align：display: block; margin: auto</li>\n<li>改变 vertical-align：vertical-align: top / middle / bottom</li>\n<li>改变 line-height：line-height: 0; font-size: 0;</li>\n</ol>\n<h3 id=\"inline-block-的基线\"><a href=\"#inline-block-的基线\" class=\"headerlink\" title=\"inline-block 的基线\"></a>inline-block 的基线</h3><p>inline-block 的基线是正常流中最后一个 line box 的基线，除非，这个 line box 里面既没有 line boxes 或者本身 ‘overflow’ 属性的计算值不是 ‘visible’，这种情况下基线是 margin 底边缘</p>\n<div align=\"center\"><img src=\"/images/hexo_post_108.png\" alt=\"\" width=\"400\"></div>\n\n<p>左边的元素基线为边框下边缘，右边的元素基线为 X 文字下边缘</p>\n<h2 id=\"5-vertical-align-线性类属性值表现\"><a href=\"#5-vertical-align-线性类属性值表现\" class=\"headerlink\" title=\"5. vertical-align 线性类属性值表现\"></a>5. vertical-align 线性类属性值表现</h2><h3 id=\"vertical-align-bottom\"><a href=\"#vertical-align-bottom\" class=\"headerlink\" title=\"vertical-align: bottom\"></a>vertical-align: bottom</h3><ol>\n<li>inline / inline-block元素: 元素底部和整行的底部对齐</li>\n<li>table-cell 元素: 单元格底 padding 边缘和表格行的底部对齐</li>\n</ol>\n<h3 id=\"vertical-align-top\"><a href=\"#vertical-align-top\" class=\"headerlink\" title=\"vertical-align: top\"></a>vertical-align: top</h3><ol>\n<li>inline / inline-block 元素: 元素顶部和整行的顶部对齐</li>\n<li>table-cell 元素: 单元格顶 padding 边缘和表格行的顶部对齐</li>\n</ol>\n<h3 id=\"vertical-align-middle\"><a href=\"#vertical-align-middle\" class=\"headerlink\" title=\"vertical-align: middle\"></a>vertical-align: middle</h3><ul>\n<li>inline / inline-block 元素: 元素垂直中心点和父元素基线上 1/2x - height 处对齐</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_63.png\" alt=\"\" width=\"500\"></div>\n\n<p>文字具有下沉的特性，而父容器的高度是由文字撑开的，所以父容器的中心点与元素垂直中心点是不重合的，可以设置 <strong>font-size: 0</strong> 解决这个问题</p>\n<ul>\n<li>table-cell 元素: 单元格填充盒子相对于外面的表格行居中对齐</li>\n</ul>\n<h2 id=\"6-vertical-align-文本类属性值\"><a href=\"#6-vertical-align-文本类属性值\" class=\"headerlink\" title=\"6. vertical-align 文本类属性值\"></a>6. vertical-align 文本类属性值</h2><h3 id=\"vertical-align-text-top\"><a href=\"#vertical-align-text-top\" class=\"headerlink\" title=\"vertical-align: text-top\"></a>vertical-align: text-top</h3><p>盒子的顶部和父级 content area 的顶部对齐</p>\n<h3 id=\"vertical-align-text-bottom\"><a href=\"#vertical-align-text-bottom\" class=\"headerlink\" title=\"vertical-align: text-bottom\"></a>vertical-align: text-bottom</h3><p>盒子的底部和父级 content area 的底部对齐</p>\n<div align=\"center\"><img src=\"/images/hexo_post_224.png\" alt=\"\" width=\"400\"></div>\n\n<ul>\n<li>vertical-align 垂直对齐的位置与前后的元素都没有关系;</li>\n<li>元素 vertical-align 垂直对齐的位置与行高 line-height 没有关系，只与字体大小 font-size 有关</li>\n</ul>\n<h2 id=\"7-vertical-align-前后不一致的行为表现\"><a href=\"#7-vertical-align-前后不一致的行为表现\" class=\"headerlink\" title=\"7. vertical-align 前后不一致的行为表现\"></a>7. vertical-align 前后不一致的行为表现</h2><p>关注当前元素和父级，因为前后并没有直接影响</p>\n<div align=\"center\"><img src=\"/images/hexo_post_62.png\" alt=\"\" width=\"400\"></div>\n\n<p>在 img 后面加一个内联元素，并且设置 vertical-align: middle 就可以实现图片的垂直居中</p>\n<h2 id=\"8-vertical-align-的实际应用\"><a href=\"#8-vertical-align-的实际应用\" class=\"headerlink\" title=\"8. vertical-align 的实际应用\"></a>8. vertical-align 的实际应用</h2><h3 id=\"小图片和文字对齐\"><a href=\"#小图片和文字对齐\" class=\"headerlink\" title=\"小图片和文字对齐\"></a>小图片和文字对齐</h3><p>vertical-align 设置为负值</p>\n<div align=\"center\"><img src=\"/images/hexo_post_79.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"不定尺寸图片和多行文字的垂直居中\"><a href=\"#不定尺寸图片和多行文字的垂直居中\" class=\"headerlink\" title=\"不定尺寸图片和多行文字的垂直居中\"></a>不定尺寸图片和多行文字的垂直居中</h3><p>三个步骤：</p>\n<ol>\n<li>主体元素 inline-block化;</li>\n<li>0 宽度 100% 高度辅助元素;</li>\n<li>vertical-align: middle;</li>\n</ol>\n<p>如果已经是 inline-block（img）水平元素，就不需要额外设置 display 属性</p>\n<div align=\"center\"><img src=\"/images/hexo_post_54.png\" alt=\"\" width=\"600\"></div>","raw":null,"categories":[{"name":"css","path":"api/categories/css.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]},{"title":"CSS深入理解之relative","slug":"CSS深入理解之relative","date":"2017-04-21T07:33:18.000Z","updated":"2019-02-28T12:34:16.852Z","comments":true,"path":"api/articles/CSS深入理解之relative.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<h2 id=\"1-relative-和-absolute-的相煎关系\"><a href=\"#1-relative-和-absolute-的相煎关系\" class=\"headerlink\" title=\"1. relative 和 absolute 的相煎关系\"></a>1. relative 和 absolute 的相煎关系</h2><ol>\n<li>限制 left / top / right / bottom 定位；</li>\n<li>限制 z-index 层级：relative 中的 absolute 层级不起作用，只看 relative 层级；</li>\n<li>限制在 overflow 下的嚣张气焰：消除 absolute 不受 overflow 限制的能力</li>\n</ol>\n<h2 id=\"2-relative-和定位\"><a href=\"#2-relative-和定位\" class=\"headerlink\" title=\"2. relative 和定位\"></a>2. relative 和定位</h2><ol>\n<li>相对自身：top: 100px; left: 100px 为相对于自身原位置移动</li>\n<li>无侵入：不会影响到其他元素，可应用于自定义拖拽</li>\n<li>同时设置 top / bottom / left / right 的行为表现：绝对定位是拉伸，相对定位是斗争–top &gt; bottom，left &gt; right</li>\n</ol>\n<h2 id=\"3-relative-与-z-index\"><a href=\"#3-relative-与-z-index\" class=\"headerlink\" title=\"3. relative 与 z-index\"></a>3. relative 与 z-index</h2><ol>\n<li>提高层叠上下文</li>\n<li>新建层叠上下文与层级</li>\n</ol>\n<p>z-index：auto 是不会产生层叠上下文的</p>\n<h2 id=\"4-relative-的最小化影响原则\"><a href=\"#4-relative-的最小化影响原则\" class=\"headerlink\" title=\"4. relative 的最小化影响原则\"></a>4. relative 的最小化影响原则</h2><h3 id=\"尽量避免使用relative\"><a href=\"#尽量避免使用relative\" class=\"headerlink\" title=\"尽量避免使用relative\"></a>尽量避免使用relative</h3><p>absolute 定位不依赖使用 relative，不要为了使用 absolute 而设置 relative</p>\n<h3 id=\"最小化原则\"><a href=\"#最小化原则\" class=\"headerlink\" title=\"最小化原则\"></a>最小化原则</h3><p>如果必须要使用 relative，就把 absolute 定位的元素放进一个空 div 里，使 relative 的 div 只有定位为 absolute 的子元素</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"position:relative\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"pig_head.png\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"position:absolute;top:0;right:0;\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  ......</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>","raw":null,"categories":[{"name":"css","path":"api/categories/css.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]},{"title":"CSS深入理解之z-index","slug":"CSS深入理解之z-index","date":"2017-04-20T15:38:25.000Z","updated":"2019-02-28T12:34:16.852Z","comments":true,"path":"api/articles/CSS深入理解之z-index.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_85.png","content":"<h2 id=\"1-z-index-基础\"><a href=\"#1-z-index-基础\" class=\"headerlink\" title=\"1. z-index 基础\"></a>1. z-index 基础</h2><h3 id=\"z-index-含义\"><a href=\"#z-index-含义\" class=\"headerlink\" title=\"z-index 含义\"></a>z-index 含义</h3><p>z-index 属性指定了元素及其子元素的 [z顺序]，而 [z顺序] 可以决定当元素发生覆盖的时候，哪个元素在上面.通常一个较大 z-index 值的元素会覆盖较低的那一个</p>\n<h3 id=\"属性值\"><a href=\"#属性值\" class=\"headerlink\" title=\"属性值\"></a>属性值</h3><ul>\n<li><code>auto</code> –&gt; 默认值</li>\n<li><code>&lt;integer&gt;</code> –&gt; 整数值</li>\n<li><code>inherit</code> –&gt; 继承</li>\n</ul>\n<h3 id=\"基本特性\"><a href=\"#基本特性\" class=\"headerlink\" title=\"基本特性\"></a>基本特性</h3><ul>\n<li>支持负值</li>\n<li>支持 CSS3 animation 动画</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">keyframes</span> zIndex &#123;</span><br><span class=\"line\">  0%&#123; <span class=\"attribute\">z-index</span>:-<span class=\"number\">1</span>; &#125;</span><br><span class=\"line\">  100%&#123; <span class=\"attribute\">z-index</span>:<span class=\"number\">51</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在 CSS2.1 时代，需要和定位元素配合使用</li>\n</ul>\n<p>如果不考虑 CSS3，只有定位元素(position:relative / absolute / fixed / sticky，没有 static)的 z-index 才有作用！在 CSS3 中有例外……</p>\n<h2 id=\"2-z-index-与定位元素\"><a href=\"#2-z-index-与定位元素\" class=\"headerlink\" title=\"2. z-index 与定位元素\"></a>2. z-index 与定位元素</h2><h3 id=\"如果定位元素-z-index-没有发生嵌套\"><a href=\"#如果定位元素-z-index-没有发生嵌套\" class=\"headerlink\" title=\"如果定位元素 z-index 没有发生嵌套\"></a>如果定位元素 z-index 没有发生嵌套</h3><ul>\n<li>后来居上</li>\n<li>哪个大，哪个在上面</li>\n</ul>\n<h3 id=\"如果定位元素发生嵌套\"><a href=\"#如果定位元素发生嵌套\" class=\"headerlink\" title=\"如果定位元素发生嵌套\"></a>如果定位元素发生嵌套</h3><p>祖先优先原则（前提：z-index 为数值，不是 auto）：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_85.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"3-层叠上下文\"><a href=\"#3-层叠上下文\" class=\"headerlink\" title=\"3. 层叠上下文\"></a>3. 层叠上下文</h2><p>层叠上下文(stacking context)是 HTML 元素中的一个三维概念，表示元素在 z 轴上有了”可以高人一等”的能力，含义：</p>\n<ul>\n<li>皇帝(你)</li>\n<li>当官(层叠上下文元素)</li>\n<li>家族(嵌套)</li>\n</ul>\n<p>层叠上下文是表示普通老百姓 HTML 元素当官了，离皇帝更近了</p>\n<h3 id=\"产生层叠上下文：\"><a href=\"#产生层叠上下文：\" class=\"headerlink\" title=\"产生层叠上下文：\"></a>产生层叠上下文：</h3><ol>\n<li>页面根元素天生具有层叠上下文，称之为”根层叠上下文” –&gt; 皇亲国戚</li>\n<li>z-index 值为数值的定位元素也具有层叠上下文 –&gt; 科考入选</li>\n<li>其他属性 –&gt; 其他当官途径</li>\n</ol>\n<h3 id=\"层叠上下文特性\"><a href=\"#层叠上下文特性\" class=\"headerlink\" title=\"层叠上下文特性\"></a>层叠上下文特性</h3><ul>\n<li>层叠上下文可以嵌套，组合成一个分层次的层叠上下文</li>\n</ul>\n<p>一个家里，爸爸可以当官，孩子也是可以同时当官的。这个家族的官就当得比较有层次</p>\n<ul>\n<li>每个层叠上下文和兄弟元素独立: 当进行层叠变化或渲染的时候，只需要考虑后代元素</li>\n</ul>\n<p>自己当官，兄弟不沾光。有什么福利或者变故只会影响自己的孩子们</p>\n<ul>\n<li>每个层叠上下文是自成体系的: 当元素的内容被层叠后，整个元素被认为是在父层的层叠顺序中</li>\n</ul>\n<p>每个当官的都有属于自己的小团体。当子孙或属下发生的排辈摩擦什么的，都是自己宅院的事情，不会影响官员自己和皇帝之间的距离</p>\n<h2 id=\"4-层叠水平\"><a href=\"#4-层叠水平\" class=\"headerlink\" title=\"4. 层叠水平\"></a>4. 层叠水平</h2><p>层叠上下文中的每个元素都有一个层叠水平(stacking level)，决定了同一个层叠上下文中元素在 z 轴上的显示顺序，<strong>遵循”后来居上”和”谁大谁上”的层叠准则</strong> 层<strong>叠水平和 z-index 不是一个东西</strong>。普通元素也有层叠水平，每一个当官的家里儿孙啊，仆人什么的，都有一个论资排辈(即层叠水平)，决定了在一起的时候，谁排在前面，离官员更近。</p>\n<h2 id=\"5-层叠顺序\"><a href=\"#5-层叠顺序\" class=\"headerlink\" title=\"5. 层叠顺序\"></a>5. 层叠顺序</h2><p>元素发生层叠时候有着特定的垂直显示顺序，即内容 &gt; 布局 &gt; 装饰</p>\n<div align=\"center\"><img src=\"/images/hexo_post_3.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"6-z-index-与层叠上下文\"><a href=\"#6-z-index-与层叠上下文\" class=\"headerlink\" title=\"6. z-index 与层叠上下文\"></a>6. z-index 与层叠上下文</h2><ol>\n<li>定位元素默认 z-index: auto，同时可以看成是 z-index: 0;</li>\n<li>z-index 不为 auto 的定位元素会创建层叠上下文;</li>\n<li>z-index 层叠顺序的比较止步于父级层叠上下文;</li>\n</ol>\n<div align=\"center\"><img src=\"/images/hexo_post_294.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"7-其他-CSS-属性与层叠上下文\"><a href=\"#7-其他-CSS-属性与层叠上下文\" class=\"headerlink\" title=\"7. 其他 CSS 属性与层叠上下文\"></a>7. 其他 CSS 属性与层叠上下文</h2><p>其他参与层叠上下文的属性们</p>\n<ol>\n<li>z-index 值不为 auto 的 flex 项（父元素display：flex | inline-flex）</li>\n<li>元素的 opacity 值不是 1</li>\n<li>元素的 transform 值不是 none</li>\n<li>元素 mix-blend-mode 值不是 normal</li>\n<li>元素的 filter 值不是 none</li>\n<li>元素的 isolation 值是 isolate</li>\n<li>position: fixed 声明</li>\n<li>will-change 指定的属性值为上面任意一个</li>\n<li>元素的 -webkit-overflow-scrolling 设为 touch</li>\n</ol>\n<h2 id=\"8-z-index-与其他-CSS-属性层叠上下文\"><a href=\"#8-z-index-与其他-CSS-属性层叠上下文\" class=\"headerlink\" title=\"8. z-index 与其他 CSS 属性层叠上下文\"></a>8. z-index 与其他 CSS 属性层叠上下文</h2><h3 id=\"不支持-z-index-的层叠上下文元素的层叠顺序均是-z-index-auto-级别\"><a href=\"#不支持-z-index-的层叠上下文元素的层叠顺序均是-z-index-auto-级别\" class=\"headerlink\" title=\"不支持 z-index 的层叠上下文元素的层叠顺序均是 z-index: auto 级别\"></a>不支持 z-index 的层叠上下文元素的层叠顺序均是 z-index: auto 级别</h3><div align=\"center\"><img src=\"/images/hexo_post_57.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"依赖-z-index-值创建层叠上下文的情况\"><a href=\"#依赖-z-index-值创建层叠上下文的情况\" class=\"headerlink\" title=\"依赖 z-index 值创建层叠上下文的情况\"></a>依赖 z-index 值创建层叠上下文的情况</h3><ol>\n<li>position 值为 relative / absolute 或 fixed(部分浏览器)</li>\n<li>display: flex | inline-flex 容器的子 flex 项</li>\n</ol>\n<h2 id=\"9-z-index-相关实践\"><a href=\"#9-z-index-相关实践\" class=\"headerlink\" title=\"9. z-index 相关实践\"></a>9. z-index 相关实践</h2><h3 id=\"最小化影响原则\"><a href=\"#最小化影响原则\" class=\"headerlink\" title=\"最小化影响原则\"></a>最小化影响原则</h3><ul>\n<li>避免使用定位属性；</li>\n<li>定位属性从大容器平级分离为私有小容器</li>\n</ul>\n<h3 id=\"不犯二原则\"><a href=\"#不犯二原则\" class=\"headerlink\" title=\"不犯二原则\"></a>不犯二原则</h3><p>对于非浮层元素(浮层元素为弹框，蒙版之类)，避免设置 z-index 值，z-index 值没有任何道理需要超过 2–不犯二准则；</p>\n<h3 id=\"组件层级计数器\"><a href=\"#组件层级计数器\" class=\"headerlink\" title=\"组件层级计数器\"></a>组件层级计数器</h3><p>通过 js 获得 body 下子元素的最大 z-index 值</p>\n<h3 id=\"可访问性隐藏\"><a href=\"#可访问性隐藏\" class=\"headerlink\" title=\"可访问性隐藏\"></a>可访问性隐藏</h3><p>z-index 负值元素在层叠上下文的背景之上，其他元素之下</p>\n<div align=\"center\"><img src=\"/images/hexo_post_65.png\" alt=\"\" width=\"500\"></div>","raw":null,"categories":[{"name":"css","path":"api/categories/css.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]},{"title":"CSS深入理解之margin","slug":"CSS深入理解之margin","date":"2017-04-20T14:58:44.000Z","updated":"2019-02-28T12:34:16.852Z","comments":true,"path":"api/articles/CSS深入理解之margin.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_80.png","content":"<h2 id=\"1-margin-与容器的尺寸\"><a href=\"#1-margin-与容器的尺寸\" class=\"headerlink\" title=\"1. margin 与容器的尺寸\"></a>1. margin 与容器的尺寸</h2><ul>\n<li>适用于没有设定 width / height 的普通 block 水平元素(float 元素，absolute / fixed 元素，inline 水平，table-cell 元素虽然 block 化，但是不是普通的 block 水平元素)</li>\n<li>只适用于水平方向尺寸</li>\n<li>一侧定宽的自适应布局</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_80.png\" alt=\"\" width=\"400\"></div>\n\n<ul>\n<li>滚动容器内上下留白</li>\n</ul>\n<p>外部容器设置 padding 值，只有 chrome 才会有留白，此时可以在给内部容器设置 margin 值</p>\n<div align=\"center\"><img src=\"/images/hexo_post_59.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"2-margin-与百分比单位\"><a href=\"#2-margin-与百分比单位\" class=\"headerlink\" title=\"2. margin 与百分比单位\"></a>2. margin 与百分比单位</h2><h3 id=\"计算规则\"><a href=\"#计算规则\" class=\"headerlink\" title=\"计算规则\"></a>计算规则</h3><p>普通元素的百分比 margin 都是相对于容器的宽度计算的，绝对定位元素的百分比 margin 是相对于第一个定位祖先元素(relative / absolute / fixed)的宽度计算的</p>\n<h3 id=\"应用-宽度-2-1-自适应矩形\"><a href=\"#应用-宽度-2-1-自适应矩形\" class=\"headerlink\" title=\"应用-宽度 2:1 自适应矩形\"></a>应用-宽度 2:1 自适应矩形</h3><p>由于 margin 百分比的计算规则是相对于容器进行计算的，而 margin 又可以影响普通 block 水平元素的可视尺寸，所以当设置为 margin: 50% 时，由于 margin 重叠特性，所以会让元素的宽高始终保持 2:1 的比例</p>\n<div align=\"center\"><img src=\"/images/hexo_post_84.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"3-margin-重叠\"><a href=\"#3-margin-重叠\" class=\"headerlink\" title=\"3. margin 重叠\"></a>3. margin 重叠</h2><h3 id=\"通常特性\"><a href=\"#通常特性\" class=\"headerlink\" title=\"通常特性\"></a>通常特性</h3><p>发生在 block 水平元素（不包括 float 和 absolute 元素） 不考虑 writing-mode，只发生在垂直方向（margin-top / margin-bottom）</p>\n<h3 id=\"3-种情境\"><a href=\"#3-种情境\" class=\"headerlink\" title=\"3 种情境\"></a>3 种情境</h3><h4 id=\"相邻的兄弟元素\"><a href=\"#相邻的兄弟元素\" class=\"headerlink\" title=\"相邻的兄弟元素\"></a>相邻的兄弟元素</h4><div align=\"center\"><img src=\"/images/hexo_post_78.png\" alt=\"\" width=\"400\"></div>\n\n<h4 id=\"父级和第一个-最后一个子元素\"><a href=\"#父级和第一个-最后一个子元素\" class=\"headerlink\" title=\"父级和第一个 / 最后一个子元素\"></a>父级和第一个 / 最后一个子元素</h4><p>下面这3种书写形式的效果是相同的，都是子元素向下偏移了 80px，而父级的尺寸并没有改变</p>\n<div align=\"center\"><img src=\"/images/hexo_post_56.png\" alt=\"\" width=\"400\"></div>\n\n<p>父子 margin 重叠的其他条件</p>\n<p><strong>margin-top 重叠：</strong></p>\n<ol>\n<li>父元素非块状格式化上下文元素</li>\n<li>父元素没有 border-top 设置</li>\n<li>父元素没有 padding-top 值</li>\n<li>父元素和第一个子元素之间没有 inline 元素分隔</li>\n</ol>\n<p><strong>margin-bottom 重叠：</strong></p>\n<ol>\n<li>父元素非块状格式化上下文元素</li>\n<li>父元素没有 border-bottom 设置</li>\n<li>父元素没有 padding-bottom 值</li>\n<li>父元素没有和最后一个子元素之间没有 inline 元素分隔</li>\n<li>父元素没有 height，min-height，max-height 限制</li>\n</ol>\n<h4 id=\"空的-block-元素\"><a href=\"#空的-block-元素\" class=\"headerlink\" title=\"空的 block 元素\"></a>空的 block 元素</h4><div align=\"center\"><img src=\"/images/hexo_post_66.png\" alt=\"\" width=\"400\"></div>\n\n<p><strong>空的 block 元素 margin 重叠其他条件：</strong></p>\n<ol>\n<li>元素没有 border 设置</li>\n<li>元素没有 padding 值</li>\n<li>里面没有 inline 元素</li>\n<li>没有 height，或者 min-height</li>\n</ol>\n<h3 id=\"margin-重叠计算规则\"><a href=\"#margin-重叠计算规则\" class=\"headerlink\" title=\"margin 重叠计算规则\"></a>margin 重叠计算规则</h3><ul>\n<li>正正取大值：50 和 20 –&gt; 50</li>\n<li>正负值相加：50 和 -20 –&gt; 30</li>\n<li>负负最负值：-50 和 -30 –&gt; -50</li>\n</ul>\n<h3 id=\"margin-重叠的意义\"><a href=\"#margin-重叠的意义\" class=\"headerlink\" title=\"margin 重叠的意义\"></a>margin 重叠的意义</h3><ol>\n<li>连续段落或列表之类，如果没有 margin 重叠，首尾项间距会和其他兄弟标签 1:2 关系，排版不自然</li>\n<li>web 中任何地方嵌套或直接放入任何裸 div，都不会影响原来的布局</li>\n<li>遗落的空任意多个 <code>&lt;p&gt;</code> 元素，不要影响原来的阅读排版</li>\n</ol>\n<h3 id=\"善用-margin-重叠\"><a href=\"#善用-margin-重叠\" class=\"headerlink\" title=\"善用 margin 重叠\"></a>善用 margin 重叠</h3><div align=\"center\"><img src=\"/images/hexo_post_73.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"4-margin-auto\"><a href=\"#4-margin-auto\" class=\"headerlink\" title=\"4. margin auto\"></a>4. margin auto</h2><p>如果一侧定值，一侧 auto，auto 为剩余空间大小；如果两侧都是 auto，则平分剩余空间(居中显示)，但是不能计算负值</p>\n<h3 id=\"writing-mode-与垂直居中\"><a href=\"#writing-mode-与垂直居中\" class=\"headerlink\" title=\"writing-mode 与垂直居中\"></a>writing-mode 与垂直居中</h3><p>更改流为垂直方向，实现垂直方向的 margin: auto 居中</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.father</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">writing-mode</span>: vertical-lr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.son</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"absolut-与-margin-居中\"><a href=\"#absolut-与-margin-居中\" class=\"headerlink\" title=\"absolut 与 margin 居中\"></a>absolut 与 margin 居中</h3><p><code>top:0; right:0; bottom:0; left:0;</code> 会使子元素的宽度和高度拉伸到与父元素相同大小，当没有 width / height 属性时，absolute 元素自动填满了容器；但设置了 width / height 属性后，会限制 absolute 元素自动填满容器，此时 margin: auto 就会自动平分被变更的尺寸空间，从而实现子元素的水平垂直居中</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.father</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.son</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-margin-负值定位\"><a href=\"#5-margin-负值定位\" class=\"headerlink\" title=\"5. margin 负值定位\"></a>5. margin 负值定位</h2><h3 id=\"margin-负值下的两端对齐\"><a href=\"#margin-负值下的两端对齐\" class=\"headerlink\" title=\"margin 负值下的两端对齐\"></a>margin 负值下的两端对齐</h3><p>margin 可以改变元素尺寸</p>\n<div align=\"center\"><img src=\"/images/hexo_post_118.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"margin-负值下的等高布局\"><a href=\"#margin-负值下的等高布局\" class=\"headerlink\" title=\"margin 负值下的等高布局\"></a>margin 负值下的等高布局</h3><p>margin 改变元素占据空间：给每个框设置大的底部内边距，然后用数值相似的负外边距消除这个高度。这会导致每一列溢出容器元素，如果把外包容器的 overflow 属性设为 hidden，列就在最高点被裁切</p>\n<div align=\"center\"><img src=\"/images/hexo_post_116.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"margin-负值下的两栏自适应布局\"><a href=\"#margin-负值下的两栏自适应布局\" class=\"headerlink\" title=\"margin 负值下的两栏自适应布局\"></a>margin 负值下的两栏自适应布局</h3><p>元素占据空间跟随 margin 移动</p>\n<div align=\"center\"><img src=\"/images/hexo_post_117.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"6-margin-无效情形解析\"><a href=\"#6-margin-无效情形解析\" class=\"headerlink\" title=\"6. margin 无效情形解析\"></a>6. margin 无效情形解析</h2><h3 id=\"inline-元素的垂直-margin-无效\"><a href=\"#inline-元素的垂直-margin-无效\" class=\"headerlink\" title=\"inline 元素的垂直 margin 无效\"></a>inline 元素的垂直 margin 无效</h3><p>前提：</p>\n<ul>\n<li>非替换元素：替换元素为 <code>&lt;img&gt;</code> <code>&lt;button&gt;</code> 元素</li>\n<li>正常书写模式</li>\n</ul>\n<div align=\"center\"><img src=\"/images/hexo_post_109.png\" alt=\"\" width=\"400\"></div>\n\n<div align=\"center\"><img src=\"/images/hexo_post_67.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"margin-重叠\"><a href=\"#margin-重叠\" class=\"headerlink\" title=\"margin 重叠\"></a>margin 重叠</h3><p>上面讲过了</p>\n<h3 id=\"display-table-cell-与-margin\"><a href=\"#display-table-cell-与-margin\" class=\"headerlink\" title=\"display: table-cell 与 margin\"></a>display: table-cell 与 margin</h3><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/margin\" target=\"_blank\" rel=\"noopener\">MDN上的解释</a>：</p>\n<blockquote>\n<p>除了 display 为 table 相关类型（不包括 table-caption，table 以及 inline-table）的所有，甚至也可应用于 ::first-letter</p>\n</blockquote>\n<h3 id=\"position-absolute-与-margin\"><a href=\"#position-absolute-与-margin\" class=\"headerlink\" title=\"position: absolute 与 margin\"></a>position: absolute 与 margin</h3><p>绝对定位元素<strong>非定位方位</strong>的 margin 值”无效”，绝对定位的 margin 值一直有效，只是不像普通元素那样，可以和兄弟元素插科打诨!</p>\n<h3 id=\"鞭长莫及导致的-margin-无效\"><a href=\"#鞭长莫及导致的-margin-无效\" class=\"headerlink\" title=\"鞭长莫及导致的 margin 无效\"></a>鞭长莫及导致的 margin 无效</h3><p>浮动元素和绝对定位元素会破坏布局，此时的 margin-left 会从整个父容器的左侧开始算起，所以当 margin-left 值小于图片的宽度的时候，会看不到效果，但其实是有效的</p>\n<h3 id=\"内联特性导致的-margin-无效\"><a href=\"#内联特性导致的-margin-无效\" class=\"headerlink\" title=\"内联特性导致的 margin 无效\"></a>内联特性导致的 margin 无效</h3><p>内联元素默认基线对齐(vertical-align: baseline)，当 margin-top 是一个很大的负值的时候，由于字母 x (内敛元素)的拖累(x 没有添加任何样式，所以不会跑到父容器外面)，内联元素仍然在与 x 基线对齐的位置</p>\n<div align=\"center\"><img src=\"/images/hexo_post_69.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"7-margin-start-和-margin-end\"><a href=\"#7-margin-start-和-margin-end\" class=\"headerlink\" title=\"7. margin-start 和 margin-end\"></a>7. margin-start 和 margin-end</h2><p>正常流下：</p>\n<ul>\n<li>margin-start –&gt; margin-left</li>\n<li>margin-end –&gt; margin-right</li>\n<li>margin-before –&gt; margin-top</li>\n<li>margin-after –&gt; margin-bottom</li>\n</ul>\n<p>如果水平流是从右往左，margin-start 等同于 margin-right<br>在垂直流下（writing-mode: vertical-*），margin-start 等同于 margin-top</p>\n<h2 id=\"8-margin-collapse\"><a href=\"#8-margin-collapse\" class=\"headerlink\" title=\"8. margin-collapse\"></a>8. margin-collapse</h2><p>决定 margin 重叠时该如何表现</p>\n<blockquote>\n<p>-webkit-margin-collapse:<collapse> | <discard> | <separate></separate></discard></collapse></p>\n</blockquote>\n<ul>\n<li>collapse（默认-重叠）</li>\n<li>discard（取消）–&gt; 此时 margin 将变为 0</li>\n<li>separate（分隔）–&gt; 此时 margin 将不再重叠，而是相加</li>\n</ul>\n","raw":null,"categories":[{"name":"css","path":"api/categories/css.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]},{"title":"CSS深入理解之padding","slug":"CSS深入理解之padding","date":"2017-04-20T12:30:24.000Z","updated":"2019-02-28T12:34:16.852Z","comments":true,"path":"api/articles/CSS深入理解之padding.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_60.png","content":"<h2 id=\"1-padding-和元素尺寸的关系\"><a href=\"#1-padding-和元素尺寸的关系\" class=\"headerlink\" title=\"1. padding 和元素尺寸的关系\"></a>1. padding 和元素尺寸的关系</h2><h3 id=\"对于-block-水平元素\"><a href=\"#对于-block-水平元素\" class=\"headerlink\" title=\"对于 block 水平元素\"></a>对于 block 水平元素</h3><ul>\n<li>padding 太大时，一定会影响尺寸</li>\n<li>width 非 auto，padding 影响尺寸</li>\n<li>width 为 auto 或 box-sizing 为 border-box，同时 padding 值没有过大，此时不会影响尺寸</li>\n</ul>\n<h3 id=\"对于-inline-水平元素\"><a href=\"#对于-inline-水平元素\" class=\"headerlink\" title=\"对于 inline 水平元素\"></a>对于 inline 水平元素</h3><p>水平 padding 影响尺寸，垂直 padding 不影响尺寸，<strong>但是会影响背景色(占据空间)</strong></p>\n<div align=\"center\"><img src=\"/images/hexo_post_60.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"inline-元素-padding-特性应用-gt-gt-高度可控的分割线\"><a href=\"#inline-元素-padding-特性应用-gt-gt-高度可控的分割线\" class=\"headerlink\" title=\"inline 元素 padding 特性应用 &gt;&gt; 高度可控的分割线\"></a>inline 元素 padding 特性应用 &gt;&gt; 高度可控的分割线</h3><ol>\n<li>直接使用字符：注册 | 退出登录</li>\n<li>inline-block 控制：注册丨退出登录</li>\n<li>使用 inline 和 padding：注册丨退出登录</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">注册<span class=\"tag\">&lt;<span class=\"name\">sapn</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>退出登录</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">16px</span> <span class=\"number\">6px</span> <span class=\"number\">1px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">2px</span> solid;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-padding-负值\"><a href=\"#2-padding-负值\" class=\"headerlink\" title=\"2. padding 负值\"></a>2. padding 负值</h2><p>padding 不支持任何形式的负值</p>\n<h2 id=\"3-padding-百分比值\"><a href=\"#3-padding-百分比值\" class=\"headerlink\" title=\"3. padding 百分比值\"></a>3. padding 百分比值</h2><p>padding 百分比均是相对于宽度计算的，所以可以用来实现一个正方形（<strong>padding: 50%</strong>）</p>\n<h3 id=\"inline-元素的-padding-百分比值\"><a href=\"#inline-元素的-padding-百分比值\" class=\"headerlink\" title=\"inline 元素的 padding 百分比值\"></a>inline 元素的 padding 百分比值</h3><ul>\n<li>同样相对于宽度计算</li>\n<li>默认的高度宽度细节有差异</li>\n<li>padding 会断行</li>\n</ul>\n<p>因为文字的换行导致表现诡异，当 padding 变小以至于文字不会换行时就会正常表现</p>\n<div align=\"center\"><img src=\"/images/hexo_post_61.png\" alt=\"\" width=\"400\"></div>\n\n<p>空 inline 元素 + padding 高度也不等(高度大于宽度)，此时如果设置 font-size: 0 就可以正常表现了</p>\n<p>原因：inline 元素的垂直 padding 会让”幽灵空白节点”显现，也就是规范中的 “strut” 出现</p>\n<h2 id=\"4-标签元素的内置-padding\"><a href=\"#4-标签元素的内置-padding\" class=\"headerlink\" title=\"4. 标签元素的内置 padding\"></a>4. 标签元素的内置 padding</h2><h3 id=\"ol-ul-列表\"><a href=\"#ol-ul-列表\" class=\"headerlink\" title=\"ol / ul 列表\"></a>ol / ul 列表</h3><ul>\n<li>ol / li 元素内置 padding-left，但是单位是 px 不是 em；</li>\n<li>例如 Chrome 浏览器下是 40px；</li>\n<li>如果字号很小，间距就会很开；</li>\n<li>如果字号很大，序号会爬到容器外面；</li>\n</ul>\n<h3 id=\"表单元素\"><a href=\"#表单元素\" class=\"headerlink\" title=\"表单元素\"></a>表单元素</h3><ul>\n<li>所有浏览器 input / textarea 输入框内置 padding</li>\n<li>所有浏览器 button 按钮内置 padding</li>\n<li>部分浏览器 select 下拉内置 padding，如 FireFox、IE8+ 可以设置 padding</li>\n<li>所有浏览器 radio / checkbox 单复选框无内置 padding</li>\n<li>button 按钮元素的 padding 最难控制</li>\n</ul>\n<h3 id=\"button按钮\"><a href=\"#button按钮\" class=\"headerlink\" title=\"button按钮\"></a>button按钮</h3><h4 id=\"Chrome-浏览器\"><a href=\"#Chrome-浏览器\" class=\"headerlink\" title=\"Chrome 浏览器\"></a>Chrome 浏览器</h4><p>可以完美设置 padding</p>\n<h4 id=\"FireFox-浏览器\"><a href=\"#FireFox-浏览器\" class=\"headerlink\" title=\"FireFox 浏览器\"></a>FireFox 浏览器</h4><p>设置 padding: 0 左右依然有 padding，只能通过：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">button</span><span class=\"selector-pseudo\">::-moz-focus-inner</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"IE-浏览器\"><a href=\"#IE-浏览器\" class=\"headerlink\" title=\"IE 浏览器\"></a>IE 浏览器</h4><p>IE7 文字越多，左右 padding 逐渐变大，解决方案：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">button</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: visible;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-padding-与高度计算的不兼容\"><a href=\"#4-padding-与高度计算的不兼容\" class=\"headerlink\" title=\"4.padding 与高度计算的不兼容\"></a>4.padding 与高度计算的不兼容</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">button</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>IE7: 45px</li>\n<li>IE8+: 40px</li>\n<li>FireFox: 42px</li>\n<li>Chrome: 40px</li>\n</ul>\n<p>button 按钮会有以上的各种 bug，所以建议是<strong>通过 label 按钮模拟按钮</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"btn\"</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">label</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-padding-与图形绘制\"><a href=\"#5-padding-与图形绘制\" class=\"headerlink\" title=\"5. padding 与图形绘制\"></a>5. padding 与图形绘制</h2><h3 id=\"三道杠\"><a href=\"#三道杠\" class=\"headerlink\" title=\"三道杠\"></a>三道杠</h3><p>第一道杠用 border-top，第二道杠用 background-color，第三道杠用 border-bottom，中间空白用padding：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_72.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"白眼效果\"><a href=\"#白眼效果\" class=\"headerlink\" title=\"白眼效果\"></a>白眼效果</h3><p>中间大的圆用 background-color，最外面的环用 border，中间空白用 padding</p>\n<div align=\"center\"><img src=\"/images/hexo_post_52.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"6-padding-与布局\"><a href=\"#6-padding-与布局\" class=\"headerlink\" title=\"6. padding 与布局\"></a>6. padding 与布局</h2><h3 id=\"使用百分比单位构建固定比例布局结构\"><a href=\"#使用百分比单位构建固定比例布局结构\" class=\"headerlink\" title=\"使用百分比单位构建固定比例布局结构\"></a>使用百分比单位构建固定比例布局结构</h3><p>移动端 1:1 头图布局</p>\n<div align=\"center\"><img src=\"/images/hexo_post_75.png\" alt=\"\" width=\"200\"></div>\n\n<h3 id=\"配合-margin-等高布局\"><a href=\"#配合-margin-等高布局\" class=\"headerlink\" title=\"配合 margin 等高布局\"></a>配合 margin 等高布局</h3><div align=\"center\"><img src=\"/images/hexo_post_71.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"两栏自适应布局\"><a href=\"#两栏自适应布局\" class=\"headerlink\" title=\"两栏自适应布局\"></a>两栏自适应布局</h3><h4 id=\"padding-在容器上\"><a href=\"#padding-在容器上\" class=\"headerlink\" title=\"padding 在容器上\"></a>padding 在容器上</h4><div align=\"center\"><img src=\"/images/hexo_post_125.png\" alt=\"\" width=\"500\"></div>\n\n<h4 id=\"padding-在子元素上\"><a href=\"#padding-在子元素上\" class=\"headerlink\" title=\"padding 在子元素上\"></a>padding 在子元素上</h4><div align=\"center\"><img src=\"/images/hexo_post_126.png\" alt=\"\" width=\"500\"></div>","raw":null,"categories":[{"name":"css","path":"api/categories/css.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]}]}