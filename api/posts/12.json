{"total":120,"pageSize":10,"pageCount":12,"data":[{"title":"八大排序算法的python实现","slug":"八大排序算法的python实现","date":"2017-03-18T14:17:57.000Z","updated":"2019-04-15T04:45:42.148Z","comments":true,"path":"api/articles/八大排序算法的python实现.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>其实我的 python 水平相当于初学者，但是由于要找实习，所以刷算法是必然的，而经常刷 leetcode 的小伙伴应该知道，用 javascript 实现各种复杂算法的人比较少（排序算法还好，尤其是那些比较知名的排序算法，想看 Javascript 代码实现排序算法的可以点下面那个链接），所以就导致没有思路的时候也看不到别人是如何用 JS 代码实现的，所以必须要懂其他一种语言才能行，而 python 同样作为一种脚本语言，其语法非常简单，也很适合算法的实现，所以就决定在学习 JS 的同时兼顾 python 的学习。<br>这篇文章当然不是我的原创，而是在逛伯乐在线的时候看到的，感觉总结的很好，代码也很规范，故转载至此处，如果作者不允许转载，将及时处理；如果没弄明白排序算法的步骤，想理解的更生动的话，可以查看我的另外一篇文章：<a href=\"/20170318/js-implementation-of-ten-sorting-algorithms.html\">十大排序算法的Javascript实现</a>。</p>\n<h2 id=\"1-插入排序\"><a href=\"#1-插入排序\" class=\"headerlink\" title=\"1. 插入排序\"></a>1. 插入排序</h2><p>插入排序的基本操作就是将一个数据插入到已经排好序的有序数据中，从而得到一个新的、个数加一的有序数据，算法适用于少量数据的排序，时间复杂度为 O(n^2)。是稳定的排序方法。插入算法把要排序的数组分成两部分：第一部分包含了这个数组的所有元素，但将最后一个元素除外（让数组多一个空间才有插入的位置），而第二部分就只包含这一个元素（即待插入元素）。在第一部分排序完成后，再将这个最后元素插入到已排好序的第一部分中。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">insert_sort</span><span class=\"params\">(lists)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 插入排序</span></span><br><span class=\"line\">    count = len(lists)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, count):</span><br><span class=\"line\">        key = lists[i]</span><br><span class=\"line\">        j = i - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> j &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> lists[j] &gt; key:</span><br><span class=\"line\">                lists[j + <span class=\"number\">1</span>] = lists[j]</span><br><span class=\"line\">                lists[j] = key</span><br><span class=\"line\">            j -= <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> lists</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-希尔排序\"><a href=\"#2-希尔排序\" class=\"headerlink\" title=\"2. 希尔排序\"></a>2. 希尔排序</h2><p>希尔排序（Shell Sort）是插入排序的一种。也称缩小增量排序，是直接插入排序算法的一种更高效的改进版本。希尔排序是非稳定排序算法。该方法因 DL．Shell 于 1959 年提出而得名。<br>希尔排序是把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至 1 时，整个文件恰被分成一组，算法便终止。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">shell_sort</span><span class=\"params\">(lists)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 希尔排序</span></span><br><span class=\"line\">    count = len(lists)</span><br><span class=\"line\">    step = <span class=\"number\">2</span></span><br><span class=\"line\">    group = count / step</span><br><span class=\"line\">    <span class=\"keyword\">while</span> group &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, group):</span><br><span class=\"line\">            j = i + group</span><br><span class=\"line\">            <span class=\"keyword\">while</span> j &lt; count:</span><br><span class=\"line\">                k = j - group</span><br><span class=\"line\">                key = lists[j]</span><br><span class=\"line\">                <span class=\"keyword\">while</span> k &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> lists[k] &gt; key:</span><br><span class=\"line\">                        lists[k + group] = lists[k]</span><br><span class=\"line\">                        lists[k] = key</span><br><span class=\"line\">                    k -= group</span><br><span class=\"line\">                j += group</span><br><span class=\"line\">        group /= step</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lists</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-冒泡排序\"><a href=\"#3-冒泡排序\" class=\"headerlink\" title=\"3. 冒泡排序\"></a>3. 冒泡排序</h2><p>它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bubble_sort</span><span class=\"params\">(lists)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 冒泡排序</span></span><br><span class=\"line\">    count = len(lists)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, count):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i + <span class=\"number\">1</span>, count):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> lists[i] &gt; lists[j]:</span><br><span class=\"line\">                lists[i], lists[j] = lists[j], lists[i]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lists</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-快速排序\"><a href=\"#4-快速排序\" class=\"headerlink\" title=\"4. 快速排序\"></a>4. 快速排序</h2><p>通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">quick_sort</span><span class=\"params\">(lists, left, right)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 快速排序</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> left &gt;= right:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> lists</span><br><span class=\"line\">    key = lists[left]</span><br><span class=\"line\">    low = left</span><br><span class=\"line\">    high = right</span><br><span class=\"line\">    <span class=\"keyword\">while</span> left &lt; right:</span><br><span class=\"line\">        <span class=\"keyword\">while</span> left &lt; right <span class=\"keyword\">and</span> lists[right] &gt;= key:</span><br><span class=\"line\">            right -= <span class=\"number\">1</span></span><br><span class=\"line\">        lists[left] = lists[right]</span><br><span class=\"line\">        <span class=\"keyword\">while</span> left &lt; right <span class=\"keyword\">and</span> lists[left] &lt;= key:</span><br><span class=\"line\">            left += <span class=\"number\">1</span></span><br><span class=\"line\">        lists[right] = lists[left]</span><br><span class=\"line\">    lists[right] = key</span><br><span class=\"line\">    quick_sort(lists, low, left - <span class=\"number\">1</span>)</span><br><span class=\"line\">    quick_sort(lists, left + <span class=\"number\">1</span>, high)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lists</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-直接选择排序\"><a href=\"#5-直接选择排序\" class=\"headerlink\" title=\"5. 直接选择排序\"></a>5. 直接选择排序</h2><p>基本思想：第 1 趟，在待排序记录 r1 ~ r[n] 中选出最小的记录，将它与 r1 交换；第 2 趟，在待排序记录 r2 ~ r[n] 中选出最小的记录，将它与 r2 交换；以此类推，第 i 趟在待排序记录 r[i] ~ r[n] 中选出最小的记录，将它与 r[i] 交换，使有序序列不断增长直到全部排序完毕。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">select_sort</span><span class=\"params\">(lists)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 选择排序</span></span><br><span class=\"line\">    count = len(lists)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, count):</span><br><span class=\"line\">        min = i</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i + <span class=\"number\">1</span>, count):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> lists[min] &gt; lists[j]:</span><br><span class=\"line\">                min = j</span><br><span class=\"line\">        lists[min], lists[i] = lists[i], lists[min]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lists</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-堆排序\"><a href=\"#6-堆排序\" class=\"headerlink\" title=\"6. 堆排序\"></a>6. 堆排序</h2><p>堆排序（Heapsort）是指利用堆积树（堆）这种数据结构所设计的一种排序算法，它是选择排序的一种。可以利用数组的特点快速定位指定索引的元素。堆分为大根堆和小根堆，是完全二叉树。大根堆的要求是每个节点的值都不大于其父节点的值，即 A[PARENT[i]] &gt;= A[i]。在数组的非降序排序中，需要使用的就是大根堆，因为根据大根堆的要求可知，最大的值一定在堆顶。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">adjust_heap</span><span class=\"params\">(lists, i, size)</span>:</span></span><br><span class=\"line\">    lchild = <span class=\"number\">2</span> * i + <span class=\"number\">1</span></span><br><span class=\"line\">    rchild = <span class=\"number\">2</span> * i + <span class=\"number\">2</span></span><br><span class=\"line\">    max = i</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i &lt; size / <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> lchild &lt; size <span class=\"keyword\">and</span> lists[lchild] &gt; lists[max]:</span><br><span class=\"line\">            max = lchild</span><br><span class=\"line\">        <span class=\"keyword\">if</span> rchild &lt; size <span class=\"keyword\">and</span> lists[rchild] &gt; lists[max]:</span><br><span class=\"line\">            max = rchild</span><br><span class=\"line\">        <span class=\"keyword\">if</span> max != i:</span><br><span class=\"line\">            lists[max], lists[i] = lists[i], lists[max]</span><br><span class=\"line\">            adjust_heap(lists, max, size)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">build_heap</span><span class=\"params\">(lists, size)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, (size/<span class=\"number\">2</span>))[::<span class=\"number\">-1</span>]:</span><br><span class=\"line\">        adjust_heap(lists, i, size)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">heap_sort</span><span class=\"params\">(lists)</span>:</span></span><br><span class=\"line\">    size = len(lists)</span><br><span class=\"line\">    build_heap(lists, size)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, size)[::<span class=\"number\">-1</span>]:</span><br><span class=\"line\">        lists[<span class=\"number\">0</span>], lists[i] = lists[i], lists[<span class=\"number\">0</span>]</span><br><span class=\"line\">        adjust_heap(lists, <span class=\"number\">0</span>, i)</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-归并排序\"><a href=\"#7-归并排序\" class=\"headerlink\" title=\"7. 归并排序\"></a>7. 归并排序</h2><p>归并排序是建立在归并操作上的一种有效的排序算法,该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为二路归并。<br>归并过程为：比较 a[i] 和 a[j] 的大小，若 a[i] ≤ a[j]，则将第一个有序表中的元素 a[i] 复制到 r[k] 中，并令 i 和 k 分别加上 1；否则将第二个有序表中的元素 a[j] 复制到 r[k] 中，并令 j 和 k 分别加上 1，如此循环下去，直到其中一个有序表取完，然后再将另一个有序表中剩余的元素复制到 r 中从下标 k 到下标 t 的单元。归并排序的算法我们通常用递归实现，先把待排序区间 [s,t] 以中点二分，接着把左边子区间排序，再把右边子区间排序，最后把左区间和右区间用一次归并操作合并成有序的区间 [s,t]。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">merge</span><span class=\"params\">(left, right)</span>:</span></span><br><span class=\"line\">    i, j = <span class=\"number\">0</span>, <span class=\"number\">0</span></span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt; len(left) <span class=\"keyword\">and</span> j &lt; len(right):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> left[i] &lt;= right[j]:</span><br><span class=\"line\">            result.append(left[i])</span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            result.append(right[j])</span><br><span class=\"line\">            j += <span class=\"number\">1</span></span><br><span class=\"line\">    result += left[i:]</span><br><span class=\"line\">    result += right[j:]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">merge_sort</span><span class=\"params\">(lists)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># 归并排序</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(lists) &lt;= <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> lists</span><br><span class=\"line\">    num = len(lists) / <span class=\"number\">2</span></span><br><span class=\"line\">    left = merge_sort(lists[:num])</span><br><span class=\"line\">    right = merge_sort(lists[num:])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> merge(left, right)</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-基数排序\"><a href=\"#8-基数排序\" class=\"headerlink\" title=\"8. 基数排序\"></a>8. 基数排序</h2><p>基数排序（radix sort）属于“分配式排序”（distribution sort），又称“桶子法”（bucket sort）或 bin sort，顾名思义，它是透过键值的部份资讯，将要排序的元素分配至某些“桶”中，藉以达到排序的作用，基数排序法是属于稳定性的排序，其时间复杂度为 O(nlog(r)m)，其中 r 为所采取的基数，而 m 为堆数，在某些时候，基数排序法的效率高于其它的稳定性排序法。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">radix_sort</span><span class=\"params\">(lists, radix=<span class=\"number\">10</span>)</span>:</span></span><br><span class=\"line\">    k = int(math.ceil(math.log(max(lists), radix)))</span><br><span class=\"line\">    bucket = [[] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(radix)]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, k+<span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> lists:</span><br><span class=\"line\">            bucket[j/(radix**(i<span class=\"number\">-1</span>)) % (radix**i)].append(j)</span><br><span class=\"line\">        <span class=\"keyword\">del</span> lists[:]</span><br><span class=\"line\">        <span class=\"keyword\">for</span> z <span class=\"keyword\">in</span> bucket:</span><br><span class=\"line\">            lists += z</span><br><span class=\"line\">            <span class=\"keyword\">del</span> z[:]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lists</span><br></pre></td></tr></table></figure>","raw":null,"categories":[{"name":"algorithm","path":"api/categories/algorithm.json"}],"tags":[{"name":"python","path":"api/tags/python.json"},{"name":"排序","path":"api/tags/排序.json"},{"name":"算法","path":"api/tags/算法.json"}]},{"title":"前端面试系列（2）——CSS3新特性","slug":"前端面试系列（2）——CSS3新特性","date":"2017-03-18T10:37:57.000Z","updated":"2019-04-15T04:45:42.148Z","comments":true,"path":"api/articles/前端面试系列（2）——CSS3新特性.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_138.png","content":"<p>CSS3 是 CSS 的 v3 版本，这套新标准提供了更加丰富且实用的规范，如：盒子模型、列表模块、超链接方式、语言模块、背景和边框、文字特效、多栏布局等等；和 HTML5 不同，CSS3 的新特性基本上得到了广泛应用，而知道并熟练运用这些新特性已经成为前端人员的必修课：</p>\n<h2 id=\"更方便快捷的选择器\"><a href=\"#更方便快捷的选择器\" class=\"headerlink\" title=\"更方便快捷的选择器\"></a>更方便快捷的选择器</h2><blockquote>\n<p>:nth-child、:nth-last-child、:nth-of-type、:last-child、:only-child、:empty</p>\n</blockquote>\n<p>CSS3 新增的选择器有很多，就不一一介绍了，这里有一篇关于 CSS3 新增选择器的文章总结的很好：<a href=\"http://www.cnblogs.com/libingql/p/4375354.html\" target=\"_blank\" rel=\"noopener\">CSS系列：CSS3新增选择器</a></p>\n<h2 id=\"框模型\"><a href=\"#框模型\" class=\"headerlink\" title=\"框模型\"></a>框模型</h2><blockquote>\n<p>border-radius（圆角）、box-shadow（盒子阴影）、border-image（边框图片）</p>\n</blockquote>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><blockquote>\n<p>background-size（背景大小）、background-origin（背景的定位）、background-clip（背景的绘制区域）、支持多重背景图片（background-image: url(bg_flower.gif), url(bg_flower_2.gif);）</p>\n</blockquote>\n<h2 id=\"渐变效果\"><a href=\"#渐变效果\" class=\"headerlink\" title=\"渐变效果\"></a>渐变效果</h2><p>gradient 属性可以非常方便的实现渐变色，同时可以设置渐变的方向和渐变方式等，实现各种复杂的效果。文末有一篇讲解 gradient 的文章讲的很不错，感兴趣的可以去瞅瞅。</p>\n<h2 id=\"文本效果\"><a href=\"#文本效果\" class=\"headerlink\" title=\"文本效果\"></a>文本效果</h2><blockquote>\n<p>text-shadow（文本阴影）、word-break（规定非中日韩文本的换行规则）、word-wrap（允许对长的不可分割的单词进行分割并换行到下一行）</p>\n</blockquote>\n<p>CSS3 的文本属性比较多，还是用一张图片代替吧（来自 w3c）：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_138.png\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"font-face\"><a href=\"#font-face\" class=\"headerlink\" title=\"@font-face\"></a>@font-face</h2><p>可以在网页中使用除默认字体之外的其他字体，先定义字体的名称，然后引入字体文件，在需要使用该字体的时候就通过 font-family 属性引用字体的名称</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"css\">@<span class=\"keyword\">font-face</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  font-family: myFirstFont;</span></span><br><span class=\"line\"><span class=\"undefined\">  src: url('Sansation_Light.ttf'),</span></span><br><span class=\"line\"><span class=\"undefined\">      url('Sansation_Light.eot'); /* IE9+ */</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">div&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  font-family: myFirstFont;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"transform\"><a href=\"#transform\" class=\"headerlink\" title=\"transform\"></a>transform</h2><p>我认为这是 CSS3 最“好用”的特性，也正是因为这个属性（当然，下面那个属性也功不可没），通过 CSS3 转换就可以能够堆元素进行移动、缩放、转动、拉长或拉伸；同时结合对持续时间和延迟时间的控制，可以“创造”出非常炫的动画效果，大大提升了网页的展示效果。同时分为 2D 和 3D 转换，由于内容繁多，就不一一介绍了，感兴趣的小伙伴可以点击文末的链接进行进一步的学习。</p>\n<h2 id=\"transtion\"><a href=\"#transtion\" class=\"headerlink\" title=\"transtion\"></a>transtion</h2><p>当元素从一种样式变换为另一种样式时为元素添加效果，使动画更加“圆润”流畅</p>\n<h2 id=\"keyframes\"><a href=\"#keyframes\" class=\"headerlink\" title=\"@keyframes\"></a>@keyframes</h2><p>这是个面试中会经常问到的属性，原因是其应用领域非常广泛，因为如今用户的时间非常宝贵，同时网络上的信息又是鱼龙混杂，如何在有限的时间内抓住用户眼球是一个重要的课题，而 @keyframes 就可以让自己的网页焕然一新并且与众不同，通过 @keyframes 规则可以创建关键帧动画，再结合 animation 就可以使元素“动”起来。</p>\n<h2 id=\"多列布局\"><a href=\"#多列布局\" class=\"headerlink\" title=\"多列布局\"></a>多列布局</h2><p>通过column-count（列数）、column-fill（如何填充列）、column-gap（列之间的间隔）、column-width（列的宽度）可以创建多个列来对文本进行布局，就像报纸那样。</p>\n<h2 id=\"用户界面\"><a href=\"#用户界面\" class=\"headerlink\" title=\"用户界面\"></a>用户界面</h2><ul>\n<li>resize：是否可由用户调整元素尺寸</li>\n<li>box-sizing：border-box / content-box，这个属性我也很喜欢，可以改变传统的“盒子模型”，方便进行布局</li>\n<li>outline-offset：对轮廓进行偏移，并在超出边框边缘的位置绘制轮廓（轮廓不占用空间并且可能是非矩形，这两点和边框不同）</li>\n</ul>\n<h2 id=\"Flex-弹性布局\"><a href=\"#Flex-弹性布局\" class=\"headerlink\" title=\"Flex 弹性布局\"></a>Flex 弹性布局</h2><p>这个属性让开发者非常头疼的“居中”问题找到了一种十分简便的答案，可以非常方便地实现让一个或多个元素在其父元素中垂直居中，建议大家去看阮一峰对其的讲解，很全面并且简单易懂（链接在文末）。</p>\n<h2 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h2><ul>\n<li><a href=\"http://www.w3school.com.cn/css3/index.asp\" target=\"_blank\" rel=\"noopener\">CSS3 教程</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\" target=\"_blank\" rel=\"noopener\">Flex 布局教程：语法篇</a></li>\n<li><a href=\"http://www.w3cplus.com/css3/new-css3-radial-gradient.html\" target=\"_blank\" rel=\"noopener\">再说CSS3渐变——径向渐变</a></li>\n</ul>\n","raw":null,"categories":[{"name":"css","path":"api/categories/css.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"},{"name":"面试","path":"api/tags/面试.json"}]},{"title":"前端面试系列（1）——HTML5新特性","slug":"前端面试系列（1）——HTML5新特性","date":"2017-03-18T10:32:25.000Z","updated":"2019-04-15T04:45:42.148Z","comments":true,"path":"api/articles/前端面试系列（1）——HTML5新特性.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_320.jpeg","content":"<p>这道问题被问的比较少，因为在如今前端框架大行其道的趋势下，对于 HTML 的理解似乎已经变得不那么重要了，况且浏览器对 H5（是的，我们通常说的 H5 其实就是 HTML5，5 代表版本）的支持还不那么完美，但是了解一下还是有助于自己前端水平的提升的，在查阅资料的过程中我发现有些特性我也是第一次知道，不过有些特性已经显示了其强大之处，比如：canvas，高能预警，大量干货：</p>\n<h2 id=\"摒弃了旧特性\"><a href=\"#摒弃了旧特性\" class=\"headerlink\" title=\"摒弃了旧特性\"></a>摒弃了旧特性</h2><h3 id=\"1-原-HTML-声明方式将失效，将采用简单的声明方式\"><a href=\"#1-原-HTML-声明方式将失效，将采用简单的声明方式\" class=\"headerlink\" title=\"1. 原 HTML 声明方式将失效，将采用简单的声明方式\"></a>1. 原 HTML 声明方式将失效，将采用简单的声明方式</h3><p>原来：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" </span></span><br><span class=\"line\"><span class=\"meta\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></span><br></pre></td></tr></table></figure>\n<p>现在：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-脚本和链接无需-type，在-HTML5-中，你只需要用简化的代码来给你的网页添加-CSS-和-JavaScript-文件，而不再需要指定类型属性\"><a href=\"#2-脚本和链接无需-type，在-HTML5-中，你只需要用简化的代码来给你的网页添加-CSS-和-JavaScript-文件，而不再需要指定类型属性\" class=\"headerlink\" title=\"2. 脚本和链接无需 type，在 HTML5 中，你只需要用简化的代码来给你的网页添加 CSS 和 JavaScript 文件，而不再需要指定类型属性\"></a>2. 脚本和链接无需 type，在 HTML5 中，你只需要用简化的代码来给你的网页添加 CSS 和 JavaScript 文件，而不再需要指定类型属性</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"path/to/stylesheet.css\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"path/to/script.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"新的内容元素\"><a href=\"#新的内容元素\" class=\"headerlink\" title=\"新的内容元素\"></a>新的内容元素</h2><h3 id=\"1-figure\"><a href=\"#1-figure\" class=\"headerlink\" title=\"1. figure\"></a>1. figure</h3><p>可以更加语义化地表示带标题的图片</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">figure</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">”path/to/image”</span> <span class=\"attr\">alt</span>=<span class=\"string\">”About</span> <span class=\"attr\">image</span>” /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">figcaption</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>This is an image of something interesting. <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">figcaption</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">figure</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-hgroup\"><a href=\"#2-hgroup\" class=\"headerlink\" title=\"2. hgroup\"></a>2. hgroup</h3><p>一般在 header 里面用来将一组标题组合在一起</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">hgroup</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span> Recall Fan Page <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span> Only for people who want the memory of a lifetime. <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">hgroup</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-mark\"><a href=\"#3-mark\" class=\"headerlink\" title=\"3. mark\"></a>3. mark</h3><p>高亮的作用，比如用户的搜索内容可以在文章中用 <code>&lt;mark&gt;</code> 进行修饰</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span> Search Results <span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> They were interrupted, just after Quato said, <span class=\"tag\">&lt;<span class=\"name\">mark</span>&gt;</span>”Open your Mind”<span class=\"tag\">&lt;/<span class=\"name\">mark</span>&gt;</span>. <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-output\"><a href=\"#4-output\" class=\"headerlink\" title=\"4. output\"></a>4. output</h3><p>用来显示计算结果，也有一个和 label 一样的 for 属性</p>\n<h3 id=\"5-small\"><a href=\"#5-small\" class=\"headerlink\" title=\"5. small\"></a>5. small</h3><p>重新定义了 <code>&lt;small&gt;</code>，现在被用来表示小的排版，如网站底部的版权声明</p>\n<h3 id=\"6-article\"><a href=\"#6-article\" class=\"headerlink\" title=\"6. article\"></a>6. article</h3><p>定义文章</p>\n<h3 id=\"7-footer\"><a href=\"#7-footer\" class=\"headerlink\" title=\"7. footer\"></a>7. footer</h3><p>定义尾部</p>\n<h3 id=\"8-header\"><a href=\"#8-header\" class=\"headerlink\" title=\"8. header\"></a>8. header</h3><p>定义头部</p>\n<h3 id=\"9-nav\"><a href=\"#9-nav\" class=\"headerlink\" title=\"9. nav\"></a>9. nav</h3><p>定义导航栏</p>\n<h3 id=\"10-section\"><a href=\"#10-section\" class=\"headerlink\" title=\"10. section\"></a>10. section</h3><p>定义 section 区域</p>\n<h2 id=\"新的属性：\"><a href=\"#新的属性：\" class=\"headerlink\" title=\"新的属性：\"></a>新的属性：</h2><h3 id=\"1-contenteditable\"><a href=\"#1-contenteditable\" class=\"headerlink\" title=\"1. contenteditable\"></a>1. contenteditable</h3><p>让你的内容可编辑</p>\n<h3 id=\"2-placeholder\"><a href=\"#2-placeholder\" class=\"headerlink\" title=\"2. placeholder\"></a>2. placeholder</h3><p>不必通过javascript就可以显示提示内容了</p>\n<h3 id=\"3-input-的-新type\"><a href=\"#3-input-的-新type\" class=\"headerlink\" title=\"3. input 的 新type\"></a>3. input 的 新type</h3><p>包括 email（如果给 input 的 type 设置为 email，浏览器就会验证这个输入是否是 email 类型）、range（可以创建滑块，它接受 min，max，step 和 value 属性）、color（颜色选择器）等等</p>\n<h3 id=\"4-input-的新属性\"><a href=\"#4-input-的新属性\" class=\"headerlink\" title=\"4. input 的新属性\"></a>4. input 的新属性</h3><p>包括 autocomplete（on / off，是否使用输入字段的自动完成功能）、autofocus（规定输入字段在页面加载时是否获得焦点，但不试用于 type=”hidden”）、required（指示输入字段的值是必须的）、form（规定输入字段所属的一个或多个表单）-&gt; 其实新属性还有很多，可以点击文末 w3c 官网链接进行查看</p>\n<h3 id=\"5-pattern-属性\"><a href=\"#5-pattern-属性\" class=\"headerlink\" title=\"5. pattern 属性\"></a>5. pattern 属性</h3><p>可以在 input 里直接使用正则表达式验证了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">”</span>\" <span class=\"attr\">method</span>=<span class=\"string\">”post”</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">”username”</span>&gt;</span>Create a Username: <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">”text”</span> <span class=\"attr\">name</span>=<span class=\"string\">”username”</span> <span class=\"attr\">id</span>=<span class=\"string\">”username”</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">”4-10″</span> <span class=\"attr\">pattern</span>=<span class=\"string\">”\\[A-Za-z\\]&#123;4,10&#125;”</span> <span class=\"attr\">autofocus</span> <span class=\"attr\">required</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">”submit”</span>&gt;</span>Go <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"新的重要的元素\"><a href=\"#新的重要的元素\" class=\"headerlink\" title=\"新的重要的元素\"></a>新的重要的元素</h2><h3 id=\"1-canvas\"><a href=\"#1-canvas\" class=\"headerlink\" title=\"1. canvas\"></a>1. canvas</h3><p>使用 Javascript 在网页上绘制图像，canvas 拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法；将在游戏、图表制作、banner 广告、模拟器、远程计算机控制、字体设计、图形编辑器、其他可嵌入网站的内容等方面大有可为；</p>\n<h4 id=\"SVG-与-Canvas-两者间的区别：\"><a href=\"#SVG-与-Canvas-两者间的区别：\" class=\"headerlink\" title=\"SVG 与 Canvas 两者间的区别：\"></a>SVG 与 Canvas 两者间的区别：</h4><ol>\n<li>SVG 是一种使用 XML 描述 2D 图形的语言。Canvas 通过 JavaScript 来绘制 2D 图形。</li>\n<li>SVG 基于 XML，这意味着 SVG DOM 中的每个元素都是可用的。您可以为某个元素附加 JavaScript 事件处理器。</li>\n<li>在 SVG 中，每个被绘制的图形均被视为对象。如果 SVG 对象的属性发生变化，那么浏览器能够自动重现图形。Canvas 是逐像素进行渲染的。在 canvas 中，一旦图形被绘制完成，它就不会继续得到浏览器的关注。如果其位置发生变化，那么整个场景也需要重新绘制，包括任何或许已被图形覆盖的对象。</li>\n</ol>\n<p>下表列出了 canvas 与 SVG 之间的一些不同之处：</p>\n<table>\n<thead>\n<tr>\n<th>Canvas</th>\n<th>SVG</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>依赖分辨率</td>\n<td>不依赖分辨率</td>\n</tr>\n<tr>\n<td>不支持事件处理器</td>\n<td>支持事件处理器</td>\n</tr>\n<tr>\n<td>弱的文本渲染能力</td>\n<td>最适合带有大型渲染区域的应用程序（比如谷歌地图）</td>\n</tr>\n<tr>\n<td>能够以 .png 或 .jpg 格式保存结果图像</td>\n<td>复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）</td>\n</tr>\n<tr>\n<td>最适合图像密集型的游戏，其中的许多对象会被频繁重绘</td>\n<td>不适合游戏应用</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-视频-video-元素\"><a href=\"#2-视频-video-元素\" class=\"headerlink\" title=\"2. 视频 video 元素\"></a>2. 视频 video 元素</h3><p>今天，大多数视频是通过插件（比如 Flash）来显示的。然而，并非所有浏览器都拥有同样的插件。通用的视频播放解决方案是 flash 和 flv（flash 从 9 开始支持 h.264 的 mp4）。但是随着 iOS 设备的流行，flash 已经不是万能药了，越来越多的视频网站提供多元的解决方案，而且偏向于 HTML5：也就是说，通过检测 agent 是否支持 html5 来决定使用 video 还是 flash。在面对 IE8 以下的浏览器时，flash 几乎是唯一的选择(silverlight 的接受度普遍不高)。</p>\n<h3 id=\"3-音频-audio-元素\"><a href=\"#3-音频-audio-元素\" class=\"headerlink\" title=\"3. 音频 audio 元素\"></a>3. 音频 audio 元素</h3><p>同理可见 video 元素</p>\n<h2 id=\"对本地离线存储的更好的支持\"><a href=\"#对本地离线存储的更好的支持\" class=\"headerlink\" title=\"对本地离线存储的更好的支持\"></a>对本地离线存储的更好的支持</h2><h3 id=\"1-Web-worker\"><a href=\"#1-Web-worker\" class=\"headerlink\" title=\"1. Web worker\"></a>1. Web worker</h3><p>运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能。您可以继续做任何愿意做的事情：点击、选取内容等等，而此时 web worker 在后台运行。</p>\n<h3 id=\"2-Web-Storage\"><a href=\"#2-Web-Storage\" class=\"headerlink\" title=\"2. Web Storage\"></a>2. Web Storage</h3><p>将数据存储在本地，而不会和服务器发生任何交互，使得数据操作更加简便</p>\n<ul>\n<li>Web Storage 与 Cookie 相比存在不少的优势，概括为以下几点：存储空间更大，能提供 5MB 的存储空间（不同浏览器的提供的空间不同），Cookie 仅 4KB</li>\n<li>存储内容不会发送到服务器：当设置了 Cookie 后，Cookie 的内容会随着请求一并发送的服务器，这对于本地存储的数据是一种带宽浪费。而 Web Storage 中的数据则仅仅是存在本地，不会与服务器发生任何交互。</li>\n<li>更多丰富易用的接口：Web Storage 提供了一套更为丰富的接口，使得数据操作更为简便。(开发者的福利)</li>\n<li>独立的存储空间：每个域（包括子域）有独立的存储空间，各个存储空间是完全独立的，因此不会造成数据混乱。</li>\n</ul>\n<h3 id=\"3-Application-Cache\"><a href=\"#3-Application-Cache\" class=\"headerlink\" title=\"3. Application Cache\"></a>3. Application Cache</h3><p>使用 HTML5，通过创建 cache manifest 文件，可以轻松地创建 web 应用的离线版本，HTML5 引入了应用程序缓存，这意味着 web 应用可进行缓存，并可在没有因特网连接时进行访问。应用程序缓存为应用带来三个优势：</p>\n<ul>\n<li>离线浏览 - 用户可在应用离线时使用它们</li>\n<li>速度 - 已缓存资源加载得更快</li>\n<li>减少服务器负载 - 浏览器将只从服务器下载更新过或更改过的资源。</li>\n</ul>\n<h2 id=\"地理位置-API\"><a href=\"#地理位置-API\" class=\"headerlink\" title=\"地理位置 API\"></a>地理位置 API</h2><p>Geolacation API 用于获得用户的地理位置，实例：</p>\n<ul>\n<li>更新本地信息</li>\n<li>显示用户周围的兴趣点</li>\n<li>交互式车载导航系统（GPS）</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>下面一张图展示了这些新特性的应用场景和可用玩法：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_320.jpeg\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h2><ul>\n<li><a href=\"http://www.w3school.com.cn/html5/index.asp\" target=\"_blank\" rel=\"noopener\">HTML 5 教程</a></li>\n</ul>\n","raw":null,"categories":[{"name":"html","path":"api/categories/html.json"}],"tags":[{"name":"HTML","path":"api/tags/HTML.json"},{"name":"面试","path":"api/tags/面试.json"}]},{"title":"JS几种数组遍历方式","slug":"JS几种数组遍历方式","date":"2017-03-18T08:50:29.000Z","updated":"2019-04-15T04:45:42.144Z","comments":true,"path":"api/articles/JS几种数组遍历方式.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>这是从 Lichun Dai 博客中看到的一篇文章，作者对 JS 中的数组遍历方式进行了总结，同时进行了性能对比。但根据评论者的回答，性能分析需要结合具体环境，单纯在浏览器中进行测试是难下结论的，所以我只会展示实现的方式，至于在浏览器中的性能可以点击文末的链接跳转至原作者的分析工具 demo。</p>\n<h2 id=\"第一种：普通-for-循环\"><a href=\"#第一种：普通-for-循环\" class=\"headerlink\" title=\"第一种：普通 for 循环\"></a>第一种：普通 for 循环</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; arr.length; j++) &#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>简要说明：最简单的一种，也是使用频率最高的一种，虽然性能不弱，但仍有优化空间</p>\n<h2 id=\"第二种：优化版-for-循环\"><a href=\"#第二种：优化版-for-循环\" class=\"headerlink\" title=\"第二种：优化版 for 循环\"></a>第二种：优化版 for 循环</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>,len=arr.length; j &lt; len; j++) &#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>简要说明: 使用临时变量，将长度缓存起来，避免重复获取数组长度，当数组较大时优化效果才会比较明显。 <strong>这种方法基本上是所有循环遍历方法中性能最高的一种</strong></p>\n<h2 id=\"第三种：弱化版-for-循环\"><a href=\"#第三种：弱化版-for-循环\" class=\"headerlink\" title=\"第三种：弱化版 for 循环\"></a>第三种：弱化版 for 循环</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; arr\\[j\\]!=<span class=\"literal\">null</span>; j++) &#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>简要说明: 这种方法其实严格上也属于 for 循环，只不过是没有使用 length 判断，而使用变量本身判断 <strong>实际上，这种方法的性能要远远小于普通 for 循环</strong></p>\n<h2 id=\"第四种：foreach-循环\"><a href=\"#第四种：foreach-循环\" class=\"headerlink\" title=\"第四种：foreach 循环\"></a>第四种：foreach 循环</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;  </span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>简要说明: 数组自带的 foreach 循环，使用频率较高，实际上性能比普通 for 循环弱</p>\n<h2 id=\"第五种：foreach-变种\"><a href=\"#第五种：foreach-变种\" class=\"headerlink\" title=\"第五种：foreach 变种\"></a>第五种：foreach 变种</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Array</span>.prototype.forEach.call(arr,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">el</span>)</span>&#123;  </span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>简要说明: 由于 foreach 是 Array 型自带的，对于一些非这种类型的，无法直接使用(如 NodeList)，所以才有了这个变种，使用这个变种可以让类似的数组拥有 foreach 功能。 实际性能要比普通 foreach 弱</p>\n<h2 id=\"第六种：forin-循环\"><a href=\"#第六种：forin-循环\" class=\"headerlink\" title=\"第六种：forin 循环\"></a>第六种：forin 循环</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(j <span class=\"keyword\">in</span> arr) &#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>简要说明: 这个循环很多人爱用，但实际上，经分析测试，在众多的循环遍历方式中 <strong>它的效率是最低的</strong></p>\n<h2 id=\"第七种：map-遍历\"><a href=\"#第七种：map-遍历\" class=\"headerlink\" title=\"第七种：map 遍历\"></a>第七种：map 遍历</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">n</span>)</span>&#123;  </span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>简要说明: 这种方式也是用的比较广泛的，虽然用起来比较优雅，但实际效率还比不上 foreach</p>\n<h2 id=\"第八种：forof-遍历（ES6）\"><a href=\"#第八种：forof-遍历（ES6）\" class=\"headerlink\" title=\"第八种：forof 遍历（ES6）\"></a>第八种：forof 遍历（ES6）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> value <span class=\"keyword\">of</span> arr) &#123;  </span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>简要说明: 这种方式是 ES6 里面用到的，性能要好于 forin，但仍然比不上普通 for 循环</p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p><strong>普通 for 循环才是最优雅的</strong></p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://dailc.github.io/2016/11/25/baseKnowlenge_javascript_jsarrayGoThrough.html\" target=\"_blank\" rel=\"noopener\">JS几种数组遍历方式以及性能分析对比</a></li>\n<li><a href=\"https://dailc.github.io/jsfoundation-perfanalysis/html/performanceAnalysis/demo_performanceAnalysis_jsarrayGoThrough.html\" target=\"_blank\" rel=\"noopener\">Js中几种常用数组遍历方式分析比较工具</a></li>\n</ul>\n","raw":null,"categories":[{"name":"js","path":"api/categories/js.json"}],"tags":[{"name":"JS","path":"api/tags/JS.json"},{"name":"数组","path":"api/tags/数组.json"}]},{"title":"前端面试系列","slug":"前端面试系列","date":"2017-03-17T09:19:17.000Z","updated":"2019-04-15T04:45:42.148Z","comments":true,"path":"api/articles/前端面试系列.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>首先声明一下，这个系列的文章基本上都是摘抄自其他途径的，包括一些大牛小牛的博客、微信公众号或其他人的文章里，而且我会争取持续更新，最后形成一篇对前端基础薄弱的同学也友好的讲解文章，如果该系列中的任何一个知识点能够帮到你（我相信肯定会帮到我的，因为我也要开始找实习了。。），就达到我的目的了；而且该系列文章只会涉及到前端的技术点，像算法和智力题那种是不会涉及的，至于智力题的话，根据我的经验，只能 practice makes perfect (<em>^__^</em>) </p>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"/20170318/new-features-of-html5.html\">HTML5新特性</a></li>\n<li><a href=\"/20170318/new-features-of-css3.html\">CSS3新特性</a></li>\n<li><a href=\"/20170319/new-features-of-http2.html\">HTTP2新特性</a></li>\n<li><a href=\"/20170403/css-selector.html\">CSS选择器</a></li>\n<li><a href=\"/20170403/css-box-model.html\">CSS盒子模型</a></li>\n<li><a href=\"/20170404/status-code-of-http-request.html\">HTTP请求的状态码</a></li>\n<li><a href=\"/20170404/session-and-cookie.html\">session&amp;cookie</a></li>\n<li><a href=\"/20170405/tcp-three-handshakes-and-four-breakups.html\">TCP的三次握手与四次分手</a></li>\n<li><a href=\"/20170405/js-implements-inheritance.html\">JS实现继承</a></li>\n<li><a href=\"/20170405/closure-in-js.html\">JS中的闭包</a></li>\n<li><a href=\"/20170412/the-difference-between-window.onload-and-document.read.html\">window.onload和document.ready的区别</a></li>\n<li><a href=\"/20170416/front-end-performance-optimization.html\">前端性能优化</a></li>\n</ul>\n<h2 id=\"其他面试题整理\"><a href=\"#其他面试题整理\" class=\"headerlink\" title=\"其他面试题整理\"></a>其他面试题整理</h2><ul>\n<li><a href=\"https://juejin.im/post/5c64d15d6fb9a049d37f9c20\" target=\"_blank\" rel=\"noopener\">中高级前端大厂面试秘籍，为你保驾护航金三银四，直通大厂(上)</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000013325778\" target=\"_blank\" rel=\"noopener\">50道CSS基础面试题（附答案）</a></li>\n<li><a href=\"https://yuchengkai.cn/docs/\" target=\"_blank\" rel=\"noopener\">InterviewMap</a></li>\n<li><a href=\"http://markyun.github.io/2015/Front-end-Developer-Questions/\" target=\"_blank\" rel=\"noopener\">前端工程师面试题汇总</a></li>\n<li><a href=\"http://blog.poetries.top/2017/03/12/front-end-interview-summary/\" target=\"_blank\" rel=\"noopener\">前端面试题整理</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000008785931\" target=\"_blank\" rel=\"noopener\">20个必会的JavaScript面试题</a></li>\n<li><a href=\"http://markyun.github.io/2015/Front-end-Developer-Questions/\" target=\"_blank\" rel=\"noopener\">Front End Developer Questions</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s/2EcqlN_lE2AbBmaBagrD0w\" target=\"_blank\" rel=\"noopener\">魔法哥 2013 前端笔试题曝光（附完整解答）</a></li>\n<li><a href=\"https://www.reddit.com/r/cscareerquestions/comments/20ahfq/heres_a_pretty_big_list_of_programming_interview/\" target=\"_blank\" rel=\"noopener\">关于4种数据结构的算法面试问题列表</a></li>\n<li><a href=\"https://www.nowcoder.com/discuss/35805\" target=\"_blank\" rel=\"noopener\">阿里巴巴2018秋招面经之前端岗(1~5面)</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s/PrHwzQBrQCEx_w_8HcSNgg\" target=\"_blank\" rel=\"noopener\">阿里-蚂蚁金服三轮面试总结</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s/HzS7bPeLTbBwlJacNv7uSA\" target=\"_blank\" rel=\"noopener\">技术面试宝典：很全面的算法和数据结构知识（含代码实现）</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000011172965\" target=\"_blank\" rel=\"noopener\">18届校招求职面经及总结</a></li>\n</ul>\n","raw":null,"categories":[{"name":"series","path":"api/categories/series.json"}],"tags":[{"name":"JS","path":"api/tags/JS.json"},{"name":"CSS","path":"api/tags/CSS.json"},{"name":"HTML","path":"api/tags/HTML.json"},{"name":"面试","path":"api/tags/面试.json"}]},{"title":"游戏心得&伪攻略","slug":"游戏心得&伪攻略","date":"2017-03-17T08:20:58.000Z","updated":"2019-04-15T04:45:42.152Z","comments":true,"path":"api/articles/游戏心得&伪攻略.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>自认为玩过了好多游戏，从最开始的英雄联盟、天下3到后来的全民超神、王者荣耀以及各种大型小型 RPG、MOBA、CAG、SIM 类游戏，当然有时候也会查查攻略看看平民适合什么职业，或者玩过一阵子之后会等新区冲个排名，也会因为队友的菜b操作而心生愤懑。<br>细细算来，自己的游戏生涯也有 15 年左右了吧，从小学时候的抢滩登陆、美丽的伊苏？（具体名字我忘了，不过记得是一个角色冒险类游戏，还是蛮经典的），到中学时候的 DNF（现在有时候还会登一下，都开到 90 级了啊）、跑跑卡丁车，后来高中流行的穿越火线、QQ炫舞、QQ音乐，再后来大学和舍友们一起玩过的天下3、英雄联盟，到如今的守望先锋、风暴英雄（现在也还是没火起来啊），这些游戏陪伴了我们十几年，基本上见证了我们的青春和成长。淡已经扯够了，进入正题吧：</p>\n<blockquote>\n<p>更新自 2017-10-10：我发现竟然有很多人会看我的这篇文章，要知道我的个人博客可是技术型的啊~！所以这让我坚定了一个信念，就是——好好打游戏，好好写攻略。</p>\n</blockquote>\n<h2 id=\"手游\"><a href=\"#手游\" class=\"headerlink\" title=\"手游\"></a>手游</h2><h3 id=\"通用套路\"><a href=\"#通用套路\" class=\"headerlink\" title=\"通用套路\"></a>通用套路</h3><ol>\n<li>周卡（6元），月卡（30元）-&gt; 基本上是目前为止所有手游都会有的吧，不管是什么类型的游戏，但是究竟是从哪个手游开始的呢？</li>\n<li>首冲送好礼 -&gt; 这个和周卡月卡类似，但是首冲的钱不定</li>\n<li>装备升级、升阶、升星 -&gt; 这个在 RPG 游戏里会比较常见，当然有些 MOBA 类游戏也会有（比如说全民超神）</li>\n<li>十连抽必中好东西 -&gt; 这个玩卡牌游戏的人肯定不陌生吧，当然有的游戏十连比较简单，有的游戏十连可就得攒个十天半月了</li>\n</ol>\n<h3 id=\"狂暴之翼（iOS）\"><a href=\"#狂暴之翼（iOS）\" class=\"headerlink\" title=\"狂暴之翼（iOS）\"></a>狂暴之翼（iOS）</h3><p>狂暴之翼就是一款数值游戏，前期数值基本上都比较固定</p>\n<h4 id=\"感受\"><a href=\"#感受\" class=\"headerlink\" title=\"感受\"></a>感受</h4><ol>\n<li>主线任务会提示百分比，譬如任务：寻找小仙女（90%），这样可以对玩家起到一定的心理暗示</li>\n</ol>\n<h4 id=\"首先：主线先到-17-级\"><a href=\"#首先：主线先到-17-级\" class=\"headerlink\" title=\"首先：主线先到 17 级\"></a>首先：主线先到 17 级</h4><p>然后扫荡地图，全身装备精炼到全身到5，再打第三章，第三章通关后扫荡全身精炼到全身到 10，以此类推；装备图纸和石头不够的魔晶商店可以购买，只买自己需要的，扫荡卷不够的黑钻买。(注意！有强迫症的孩子就打慢一点，把装备做完在推图，第二章的 13 节请手动，自动是过不去的)</p>\n<h4 id=\"22-级进公会拿升星石\"><a href=\"#22-级进公会拿升星石\" class=\"headerlink\" title=\"22 级进公会拿升星石\"></a>22 级进公会拿升星石</h4><p>公会钻石膜拜每次 6 个，转 4-5 只神兽每次 10 个(注意！打底转 4 个龙)，全身装备都升 1 星后，做戒指和项链先到 5 星，然后再平均精炼升星上去。(注意！一定要戒指和项链升星先到 5 星)</p>\n<h4 id=\"关于钻石\"><a href=\"#关于钻石\" class=\"headerlink\" title=\"关于钻石\"></a>关于钻石</h4><p>前期幸运转盘是最超值的来源，建议在把装盘的次数耗尽后再开始使用钻石，平民玩家建议在转三次转盘之前都不要花钻石，然后商店和 7 日目标买体力和升星石头，然后再单抽一次 288 钻石的宝藏得 4 阶装备</p>\n<h3 id=\"王者荣耀（iOS-android）\"><a href=\"#王者荣耀（iOS-android）\" class=\"headerlink\" title=\"王者荣耀（iOS / android）\"></a>王者荣耀（iOS / android）</h3><h4 id=\"感受-1\"><a href=\"#感受-1\" class=\"headerlink\" title=\"感受\"></a>感受</h4><ol>\n<li>画面比类似游戏要精致，阴影和怪物做的细节都很到位，同时英雄的打击动作也比较真实有料</li>\n<li>社交系统蛮不错的，仅仅通过一起打几局游戏就可以结为恋人，相比其他游戏而言真的良心</li>\n<li>吐槽一下装备系统，魔抗装备实在太少，这使得大家都比较喜欢玩法师，同时在 ban pick 中也是绝大部分都是法师，不知道为什么这样设计</li>\n</ol>\n<blockquote>\n<p>更新自2017-9-23：开发者们似乎听到了我内心的呐喊，现在魔抗装备稍微多了点。。</p>\n</blockquote>\n<p>以下介绍的攻略仅仅限于平民或小资玩家，目的是让你通过这篇攻略可以更快的获取金币、钻石、铭文碎片，从而可以购买更多的英雄，而不是教你怎么快速升王者，因为对于 MOBA 类游戏来说，“熟能生巧”是唯一真理。</p>\n<h4 id=\"前期\"><a href=\"#前期\" class=\"headerlink\" title=\"前期\"></a>前期</h4><p>首先，王者荣耀的新手任务很简单，可以很快速的获取一定量的金币，所以一定要完成；同时，师徒任务给的奖励很丰厚，最好在开始的时候找个师傅，然后按照师徒任务每天打几局，这样基本上一周之内就完成 13 个师徒任务了，可以获取大量金币和大量钻石<br>至于钻石夺宝，我的建议是每周就来个五连抽就行，因为可以领取88钻石的奖励，同时还可以涨幸运度，抽再多次的话就不划算了<br>活动最好抽时间完成，王者荣耀的活动很频繁，基本上每周都有，而且有时候会有免费英雄兑换活动，这种机会千万不要错过，你要知道这可是钱啊~！</p>\n<h4 id=\"中期\"><a href=\"#中期\" class=\"headerlink\" title=\"中期\"></a>中期</h4><p>王者荣耀每周通过对战获取金币数是有限制的（如果没有挂机等违规记录的话，每周上限 4200），所以最好保证每周把这 4200 都拿到，如果没有时间对战的话，可以尝试刷冒险（我一般刷精英难度的“稷下战场”，如果铭文比较好的话，可以尝试大师难度的“稷下战场”，具体如何刷可以自行搜索）；<br>而除了对战获取金币，每天的活跃度奖励也有很多金币、钻石、铭文碎片可以拿到，所以最好保证每天满活跃度以及一周满 1000 活跃度，其实王者荣耀的活跃度很容易打满，没时间的话可以找个战队的人组队打 3 局人机，然后把黄色任务完成（黄色任务加 30 活跃度，击杀 10 英雄、20 助攻、塔伤 10000 是可以人机完成的，其他类型的任务需要打对战，所以从概率学上讲还是很好完成的）<br>另外最好和认识的同学或同事一个战队，这样的话活跃度会比较简单地完成。同时别忘了战队商店可以拿活跃度换东西的，我是先换了高渐离，后面就一直换铭文碎片大宝箱了，一般 2-3 周就可以换一个宝箱了（500 铭文碎片）。每周的战队赛参加 4 次和获胜 1 次也有铭文碎片奖励，有时间的话可以参加一下。</p>\n<h4 id=\"后期\"><a href=\"#后期\" class=\"headerlink\" title=\"后期\"></a>后期</h4><p>我是不建议钻石抽铭文碎片的，因为抽到 5 级铭文的几率实在太小了，而且王者荣耀有时候会办那种消耗钻石兑换奖励的活动，这时候再消耗钻石的话不仅可以抽东西，还可以间接地参加活动获取奖励（我记得 9 月份的时候王者荣耀就出了类似的活动，我直接把攒的 12000 多钻石全抽铭文了）<br>相信几个月下来，你一定积攒了很多铭文碎片了，这时候可以根据自己的实际情况合成5级铭文了，如果你比较喜欢玩物理系的英雄，可以尝试合成“百穿”，如果你喜欢法师系的英雄，就合成一套法师通用铭文就可以了<br>如果你的排位等级比较靠前同时在线时间比较长，可以加一个排名比较靠前的战队，这样每周、每赛季获取的奖励都会有很多，同时战队赛也更容易组到人。</p>\n<h4 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h4><p>王者荣耀不是一个烧钱的游戏（这条广告没有钱），但是没有铭文和有铭文是两个游戏，所以如果没有钱就花时间吧。。</p>\n<h3 id=\"阴阳师（iOS-android）\"><a href=\"#阴阳师（iOS-android）\" class=\"headerlink\" title=\"阴阳师（iOS / android）\"></a>阴阳师（iOS / android）</h3><h4 id=\"感受-2\"><a href=\"#感受-2\" class=\"headerlink\" title=\"感受\"></a>感受</h4><ol>\n<li>新服预约活动，这个不算是亮点，但是经常玩手游的人一般是喜欢去新区玩的，这样可以冲一下排名，而在官网有着很明显的新服预约页面可以让玩家省去找新区开服时间的麻烦</li>\n<li>一些副本的动画可以快进也可以暂停，这样可以让玩家暂停截图留念，同样对于那些老玩家来说，也可以快进节省时间。</li>\n<li>战斗的时间有点太长，如果可以跳过动画或者直接出一个扫荡的选项会节省玩家很多时间</li>\n</ol>\n<h3 id=\"全民超神（iOS-android）\"><a href=\"#全民超神（iOS-android）\" class=\"headerlink\" title=\"全民超神（iOS / android）\"></a>全民超神（iOS / android）</h3><h4 id=\"感受-3\"><a href=\"#感受-3\" class=\"headerlink\" title=\"感受\"></a>感受</h4><ol>\n<li>活动很良心，会各种送皮肤，玩家只需要在一段时间打一阵子游戏就可以获得，同时钻石获得也很容易，只要花一些时间，就可以购买很多喜欢的英雄</li>\n<li>可以向其他游戏学习，当击杀数或助攻数到达一定数量，比如 8888，6666，10000 的时候进行提示（在游戏中就算了，如果打完游戏正好达到就可以），并生成一张比较有纪念意义的图片，可以提升用户粘性</li>\n<li>为什么镜头不能拖拽呢，只能看到自己周围而无法看到其他地方的话会很影响用户体验，可以向王者荣耀学习一下。</li>\n<li>希望可以交换英雄，这样可以使玩家更大几率玩到自己喜欢玩的英雄，同时也有助于排位赛的发展</li>\n<li>目前对于挂机掉线的惩罚太轻，而且举报之后没有反馈，这一点根本比不上王者荣耀</li>\n<li>游戏内聊天系统有问题，连续输入4个汉字时会直接变成英文</li>\n</ol>\n<h3 id=\"soul-knight（iOS、单机）\"><a href=\"#soul-knight（iOS、单机）\" class=\"headerlink\" title=\"soul knight（iOS、单机）\"></a>soul knight（iOS、单机）</h3><h4 id=\"感受-4\"><a href=\"#感受-4\" class=\"headerlink\" title=\"感受\"></a>感受</h4><ol>\n<li>作为一个单机游戏，却内容很庞大，不仅有成就系统，还有多种多样的武器</li>\n<li>摒弃了之前职业差距很大的惯例，多种职业之间的差距仅仅在于大招不同，而每种职业也只有一个技能，但是鉴于此款游戏考验的是玩家的走位，所以技能只有一个也就无伤大雅了</li>\n<li>武器之间的差距并不在于颜色，需要玩家在实战中进行实验而且可以考验玩家对武器的理解，因为打小怪和打 boss 时不同类型的武器会有不同的表现</li>\n</ol>\n<h3 id=\"龙之谷（iOS）\"><a href=\"#龙之谷（iOS）\" class=\"headerlink\" title=\"龙之谷（iOS）\"></a>龙之谷（iOS）</h3><h4 id=\"感受-5\"><a href=\"#感受-5\" class=\"headerlink\" title=\"感受\"></a>感受</h4><ol>\n<li>在 rpg 游戏中加入观战系统是个很不错的 idea，可以看其他玩家的 pvp 或者副本攻打策略</li>\n</ol>\n<h3 id=\"卧虎藏龙\"><a href=\"#卧虎藏龙\" class=\"headerlink\" title=\"卧虎藏龙\"></a>卧虎藏龙</h3><h4 id=\"感受-6\"><a href=\"#感受-6\" class=\"headerlink\" title=\"感受\"></a>感受</h4><ol>\n<li>是我所见过玩过的游戏中 3D 场景做的最好的</li>\n</ol>\n<h3 id=\"英雄战歌（卡牌）\"><a href=\"#英雄战歌（卡牌）\" class=\"headerlink\" title=\"英雄战歌（卡牌）\"></a>英雄战歌（卡牌）</h3><h4 id=\"感受-7\"><a href=\"#感受-7\" class=\"headerlink\" title=\"感受\"></a>感受</h4><ol>\n<li>不敢说抄袭，但是玩过炉石传说的人就都知道这游戏该怎么玩了</li>\n<li>将卡牌收藏和 3D 攻击动画特效结合到一起，虽然特效差强人意，但有此心实属不易</li>\n<li>惯用的首冲月卡，但是月卡并没有让我有买的冲动，因为月卡带来的福利并不是玩家能够<strong>迅速</strong>并且<strong>明显</strong>看到价值的</li>\n<li>玩家可以通过每天的对战或者“星星”，然后 5 个星星就可以获得一个宝箱，宝箱需要时间来解锁，从而获得卡牌，同时每一个宝箱都有相应的积分获得，当积分满足一定条件时就可以或者比较丰厚的奖励，为期一个月，不得不说，我被这个活动吸引了，因为作为一个卡牌收藏游戏，玩家还是希望自己能够有更多“稀有”的卡，这也是卡牌收藏游戏的成就感来源，所以腾讯的这个 idea 让我有了很多新的思路，就是结合游戏的成就感来源去吸引用户、“黏住”用户，那样才能先保证不亏钱的情况下再赚钱</li>\n<li>和炉石不同的是，卡包真的好贵，而且目前来看好的卡牌包只能用点券购买（简直就是个土豪才玩得起的游戏嘛），不知道后面会不会有活动赠送点券，先玩一个月再看</li>\n</ol>\n","raw":null,"categories":[{"name":"game","path":"api/categories/game.json"}],"tags":[{"name":"心得","path":"api/tags/心得.json"},{"name":"游戏","path":"api/tags/游戏.json"}]},{"title":"Wordpress开发行动指南","slug":"Wordpress开发行动指南","date":"2017-03-15T15:26:18.000Z","updated":"2019-04-15T04:45:42.144Z","comments":true,"path":"api/articles/Wordpress开发行动指南.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_135.png","content":"<p>本人玩 Wordpress 到目前为止也只有 3 天，但是发现 Wordpress 是异常庞大的，可能在开发的过程中会遇到各种各样的 bug，同时也会运用到各种小技巧和“黑科技”，所以就索性写篇文章用来记录我在这个过程中的收获与教训吧。</p>\n<h2 id=\"1-Wordpress-的插件\"><a href=\"#1-Wordpress-的插件\" class=\"headerlink\" title=\"1. Wordpress 的插件\"></a>1. Wordpress 的插件</h2><p>Wordpress 的插件使 Wordpress 的功能得到了无限扩展，所以想用 Wordpress 搭建网站或者开发插件的话，一定要多用它的插件，并且多了解一些插件的功能，其中我在做博客的过程中用到的一些好用的插件都在我的另一篇文章里了，可以点击查看 -&gt;：<a href=\"/20170314/wordpress-plugin-recommendation.html\">Wordpress插件推荐</a></p>\n<h2 id=\"2-自动为-WordPress-文章设置特色图像代码\"><a href=\"#2-自动为-WordPress-文章设置特色图像代码\" class=\"headerlink\" title=\"2. 自动为 WordPress 文章设置特色图像代码\"></a>2. 自动为 WordPress 文章设置特色图像代码</h2><p>这里有一段很实用的代码，可以自动将文章中的第一张图片设置为特色图像，如果你手动设置了特色图像，可以覆盖这段代码。将下面的代码丢到当前主题的 functions.php 里，以后就不用担心忘记设置特色图像了。（这个到底有什么用呢，反正我没用= =）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">autoset_featured</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">global</span> $post;</span><br><span class=\"line\">  $already_has_thumb = has_post_thumbnail($post-&gt;ID);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!$already_has_thumb)  &#123;</span><br><span class=\"line\">    $attached_image = get_children( <span class=\"string\">\"post_parent=$post-&gt;ID&amp;post_type=attachment&amp;post_mime_type=image&amp;numberposts=1\"</span> );</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($attached_image) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">foreach</span> ($attached_image <span class=\"keyword\">as</span> $attachment_id =&gt; $attachment) &#123;</span><br><span class=\"line\">        set_post_thumbnail($post-&gt;ID, $attachment_id);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;  <span class=\"comment\">//end function</span></span><br><span class=\"line\">add_action(<span class=\"string\">'the_post'</span>, <span class=\"string\">'autoset_featured'</span>);</span><br><span class=\"line\">add_action(<span class=\"string\">'save_post'</span>, <span class=\"string\">'autoset_featured'</span>);</span><br><span class=\"line\">add_action(<span class=\"string\">'draft_to_publish'</span>, <span class=\"string\">'autoset_featured'</span>);</span><br><span class=\"line\">add_action(<span class=\"string\">'new_to_publish'</span>, <span class=\"string\">'autoset_featured'</span>);</span><br><span class=\"line\">add_action(<span class=\"string\">'pending_to_publish'</span>, <span class=\"string\">'autoset_featured'</span>);</span><br><span class=\"line\">add_action(<span class=\"string\">'future_to_publish'</span>, <span class=\"string\">'autoset_featured'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-为某篇文章添加特定的样式或-js-代码\"><a href=\"#3-为某篇文章添加特定的样式或-js-代码\" class=\"headerlink\" title=\"3. 为某篇文章添加特定的样式或 js 代码\"></a>3. 为某篇文章添加特定的样式或 js 代码</h2><p>将下面代码添加到你的 WordPress 主题模板的 functions.php 中：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">为特定文章添加特定css最简单的方式.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">/*添加自定义CSS的meta box*/</span></span><br><span class=\"line\">add_action(<span class=\"string\">'admin_menu'</span>, <span class=\"string\">'cwp_add_my_custom_css_meta_box'</span>);</span><br><span class=\"line\"><span class=\"comment\">/*保存自定义CSS的内容*/</span></span><br><span class=\"line\">add_action(<span class=\"string\">'save_post'</span>, <span class=\"string\">'cwp_save_my_custom_css'</span>);</span><br><span class=\"line\"><span class=\"comment\">/*将自定义CSS添加到特定文章(适用于Wordpress中文章、页面、自定义文章类型等)的头部*/</span></span><br><span class=\"line\">add_action(<span class=\"string\">'wp_head'</span>,<span class=\"string\">'cwp_insert_my_custom_css'</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_add_my_custom_css_meta_box</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">add_meta_box(<span class=\"string\">'my_custom_css'</span>, <span class=\"string\">'自定义CSS'</span>, <span class=\"string\">'cwp_output_my_custom_css_input_fields'</span>, <span class=\"string\">'post'</span>, <span class=\"string\">'normal'</span>, <span class=\"string\">'high'</span>);</span><br><span class=\"line\">add_meta_box(<span class=\"string\">'my_custom_css'</span>, <span class=\"string\">'自定义CSS'</span>, <span class=\"string\">'cwp_output_my_custom_css_input_fields'</span>, <span class=\"string\">'page'</span>, <span class=\"string\">'normal'</span>, <span class=\"string\">'high'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_output_my_custom_css_input_fields</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">global</span> $post;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;input type=\"hidden\" name=\"my_custom_css_noncename\" id=\"my_custom_css_noncename\" value=\"'</span>.wp_create_nonce(<span class=\"string\">'custom-css'</span>).<span class=\"string\">'\" /&gt;'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;textarea name=\"my_custom_css\" id=\"my_custom_css\" rows=\"5\" cols=\"30\" style=\"width:100%;\"&gt;'</span>.get_post_meta($post-&gt;ID,<span class=\"string\">'_my_custom_css'</span>,<span class=\"keyword\">true</span>).<span class=\"string\">'&lt;/textarea&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_save_my_custom_css</span><span class=\"params\">($post_id)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!wp_verify_nonce($_POST[<span class=\"string\">'my_custom_css_noncename'</span>], <span class=\"string\">'custom-css'</span>)) <span class=\"keyword\">return</span> $post_id;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (defined(<span class=\"string\">'DOING_AUTOSAVE'</span>) &amp;&amp; DOING_AUTOSAVE) <span class=\"keyword\">return</span> $post_id;</span><br><span class=\"line\">  $my_custom_css = $_POST[<span class=\"string\">'my_custom_css'</span>];</span><br><span class=\"line\">  update_post_meta($post_id, <span class=\"string\">'_my_custom_css'</span>, $my_custom_css);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_insert_my_custom_css</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (is_page() || is_single()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (have_posts()) : <span class=\"keyword\">while</span> (have_posts()) : the_post();</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;style type=\"text/css\"&gt;'</span>.get_post_meta(get_the_ID(), <span class=\"string\">'_my_custom_css'</span>, <span class=\"keyword\">true</span>).<span class=\"string\">'&lt;/style&gt;'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">endwhile</span>; <span class=\"keyword\">endif</span>;</span><br><span class=\"line\">    rewind_posts();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在文章的编辑页面就会出现如下输入框：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_135.png\" alt=\"\" width=\"500\"></div>\n\n<p>它是在字数统计的下面，我一开始没注意到，以为没生效呢，差点就把这段代码否定了，不过这个方法只能用来定义特定 CSS 样式，如果想插入特定 js 代码的话，可以考虑用下面一个方法：</p>\n<p>首先还是要将下面代码添加到你的 WordPress 主题模板的 functions.php 中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add_action(<span class=\"string\">\"wp_head\"</span>,<span class=\"string\">\"ruikeedu_custom_head\"</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ruikeedu_custom_head</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (is_single() || is_page()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> $post;</span><br><span class=\"line\">    $custom_head = get_post_meta($post-&gt;ID, <span class=\"string\">'custom_head'</span>, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $custom_head;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在文章的编辑页面设置显示自定义栏目：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_136.png\" alt=\"\" width=\"700\"></div>\n\n<p>然后在文章编辑的后面会出现自定义栏目的输入框，名称为 custom_head，值就是你想插入的 css 代码或 js 代码（css 代码需要有 <code>&lt;style&gt;&lt;/style&gt;</code>，js 代码同理，因为该方法不会自动添加标签）</p>\n<p>总结：网上虽然关于这个问题的回答很多，但是基本上都是抄来抄去，而且有的方法亲测不可用，所以推荐以上这两种方法一起用，既可以添加 css 代码又可以添加 js 代码。</p>\n<h2 id=\"4-允许分类描述添加-html-代码\"><a href=\"#4-允许分类描述添加-html-代码\" class=\"headerlink\" title=\"4. 允许分类描述添加 html 代码\"></a>4. 允许分类描述添加 html 代码</h2><p>出于安全等因素考虑，WordPress 后台的文本框一般是不允许添加 html 代码的（也就是被过滤掉）。所以如果有 WP 用户需要在分类描述中添加 html 代码，下面这个实现方法就可以实现。直接将下面的代码添加到当前主题的 functions.php 文件即可：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 允许分类描述添加html代码</span></span><br><span class=\"line\"><span class=\"comment\"> * https://www.wpdaxue.com/category-description-support-html.html</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">remove_filter(<span class=\"string\">'pre_term_description'</span>, <span class=\"string\">'wp_filter_kses'</span>);</span><br><span class=\"line\">remove_filter(<span class=\"string\">'term_description'</span>, <span class=\"string\">'wp_kses_data'</span>);</span><br></pre></td></tr></table></figure>\n<p>如果你还想让 链接描述和备注、用户描述 也一样支持 html 代码，可以试试下面的代码，同样是添加到 functions.php：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Disables Kses only for textarea saves</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"keyword\">array</span>(<span class=\"string\">'pre_term_description'</span>, <span class=\"string\">'pre_link_description'</span>, <span class=\"string\">'pre_link_notes'</span>, <span class=\"string\">'pre_user_description'</span>) <span class=\"keyword\">as</span> $filter) &#123;</span><br><span class=\"line\">  remove_filter($filter, <span class=\"string\">'wp_filter_kses'</span>);</span><br><span class=\"line\">&#125;<span class=\"comment\">// Disables Kses only for textarea admin displays</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"keyword\">array</span>(<span class=\"string\">'term_description'</span>, <span class=\"string\">'link_description'</span>, <span class=\"string\">'link_notes'</span>, <span class=\"string\">'user_description'</span>) <span class=\"keyword\">as</span> $filter) &#123;</span><br><span class=\"line\">  remove_filter($filter, <span class=\"string\">'wp_kses_data'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果你需要进一步了解实现原理，可以自己阅读以下文档：</p>\n<ul>\n<li><a href=\"http://codex.wordpress.org/Function_Reference/wp_filter_kses\" target=\"_blank\" rel=\"noopener\">http://codex.wordpress.org/Function_Reference/wp_filter_kses</a></li>\n<li><a href=\"http://codex.wordpress.org/Function_Reference/wp_kses_data\" target=\"_blank\" rel=\"noopener\">http://codex.wordpress.org/Function_Reference/wp_kses_data</a></li>\n</ul>\n<h2 id=\"5-在文章中插入动图\"><a href=\"#5-在文章中插入动图\" class=\"headerlink\" title=\"5. 在文章中插入动图\"></a>5. 在文章中插入动图</h2><p>Wordpress 对于文章中的图片是默认进行缩略处理的，而文章中的 gif 动图在经过处理后就变成了静态文件，就不会“动”了，所以需要插入动图之后对其进行编辑，然后选择完整尺寸就可以了，如果在编辑文章时，该 gif 动图就已经“动”了起来，那证明已经成功了。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_8.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"6-编辑文章上传图片时提示-HTTP-错误\"><a href=\"#6-编辑文章上传图片时提示-HTTP-错误\" class=\"headerlink\" title=\"6.编辑文章上传图片时提示 HTTP 错误\"></a>6.编辑文章上传图片时提示 HTTP 错误</h2><p>这个错误发生在我刚把项目从本地部署到服务器之后，然后我就上网搜了一下，有的人说是因为图片太长或太大了，但是我将图片压缩之后还是提示这个错误，所以又尝试了一些其他方法：</p>\n<ol>\n<li>如果使用的是服务器，那应该是安全设置问题，修改服务器的 httpd.conf 文件，删除里面关于 mod_security 部分就可以了</li>\n<li>如果使用的是虚拟主机，在 .htaccess 文件里面加上一行（这个方法亲测有效）：</li>\n</ol>\n<blockquote>\n<p>SetEnvIfNoCase Request_URI /wp-admin/async-upload.php$ MODSEC_ENABLE=Off</p>\n</blockquote>\n<ol start=\"3\">\n<li>如果上述方法都不能解决，有可能你的图片确实是太长或者太大了，还是压缩一下再上传试一下吧</li>\n</ol>\n<h2 id=\"7-更改新域名\"><a href=\"#7-更改新域名\" class=\"headerlink\" title=\"7. 更改新域名\"></a>7. 更改新域名</h2><p>这个问题的故事是这样的：因为想给自己的网站备案，所以就买了一个可以备案的域名 merrier.wang，而之前是 merrier.online，在买完域名并解析之后，在 Wordpress 后台将域名配置成 merrier.wang 之后就出现问题了，因为 merrier.wang 是没有备案的，所以就无法访问：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_144.png\" alt=\"\" width=\"500\"></div>\n\n<p>但是访问之前的 merrier.online 又会重定向到 merrier.wang（应该是 Wordpress 自带的重定向），所以就相当于连后台也访问不了了，只能修改域名。在这里顺便提醒一下，如果你也给域名申请备案中，先不要在后台修改 Wordpress 的域名，因为备案不成功是访问不了的；接下来总结一下网上几种更改新域名的方法：</p>\n<h3 id=\"方法一：修改-wp-config-php\"><a href=\"#方法一：修改-wp-config-php\" class=\"headerlink\" title=\"方法一：修改 wp-config.php\"></a>方法一：修改 wp-config.php</h3><p>在 wp-config.php 中，添加以下两行内容：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(<span class=\"string\">'WP_HOME'</span>,<span class=\"string\">'http://\byourwebsite'</span>);</span><br><span class=\"line\">define(<span class=\"string\">'WP_SITEURL'</span>,<span class=\"string\">'http://yourwebsite'</span>);</span><br></pre></td></tr></table></figure>\n<p>然后登录后台，在 “常规 -&gt; 设置”重新配置新博客地址（HOME）和安装地址（SITEURL），<strong>成功后一定记得删除上面添加的内容。</strong></p>\n<h3 id=\"方法二：修改-functions-php\"><a href=\"#方法二：修改-functions-php\" class=\"headerlink\" title=\"方法二：修改 functions.php\"></a>方法二：修改 functions.php</h3><p>functions.php 位于当前博客主题目录内，在其中添加以下两行内容：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update_option(<span class=\"string\">'siteurl'</span>,<span class=\"string\">'http://yourwebsite'</span>);</span><br><span class=\"line\">update_option(<span class=\"string\">'home'</span>,<span class=\"string\">'http://yourwebsite'</span>);</span><br></pre></td></tr></table></figure>\n<p>然后登录后台，在 “常规 -&gt; 设置”重新配置新博客地址（HOME）和安装地址（SITEURL），<strong>成功后一定记得删除上面添加的内容。</strong></p>\n<h3 id=\"方法三：修改-wp-config-php（自动更新地址）\"><a href=\"#方法三：修改-wp-config-php（自动更新地址）\" class=\"headerlink\" title=\"方法三：修改 wp-config.php（自动更新地址）\"></a>方法三：修改 wp-config.php（自动更新地址）</h3><p>在 wp-config.php 中，添加下面一行内容</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(<span class=\"string\">'RELOCATE'</span>,<span class=\"keyword\">true</span>);</span><br></pre></td></tr></table></figure>\n<p>然后登录后台地址，WP 将自动更新安装地址（SITEURL），手动修改博客地址（HOME）地址即可，<strong>成功后一定要记得删除上面添加的内容</strong></p>\n<h3 id=\"方法四：修改数据库\"><a href=\"#方法四：修改数据库\" class=\"headerlink\" title=\"方法四：修改数据库\"></a>方法四：修改数据库</h3><p>通过某些方法（phpmyadmin 等）登陆到数据库，找到 wp_options 表，将表中的 siteurl 和 home 字段修改为当前的新域名</p>\n<h2 id=\"8-页面下开启评论框\"><a href=\"#8-页面下开启评论框\" class=\"headerlink\" title=\"8.页面下开启评论框\"></a>8.页面下开启评论框</h2><p>我在更新了一些页面（比如标签云、读者墙、网址导航）之后，发现这些页面下没有评论框，非常的不爽，就上网查了一下，然后大部分答案都是修改代码，我试了之后发现还是不行，后来在 <a href=\"http://tieba.baidu.com/p/2309858682\" target=\"_blank\" rel=\"noopener\">wordpress吧</a>发现了问题出在了哪里：</p>\n<p>首先，在后台的页面设置界面，显示讨论栏目：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_145.png\" alt=\"\" width=\"700\"></div>\n\n<p>然后在文章的下面开启允许评论：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_146.png\" alt=\"\" width=\"700\"></div>\n\n<p>经过这两个步骤之后刷新页面（别忘了更新），就会发现评论框出现了！</p>\n<h2 id=\"9-Wordpress-后台安装主题或插件时需要-FTP-帐号怎么办\"><a href=\"#9-Wordpress-后台安装主题或插件时需要-FTP-帐号怎么办\" class=\"headerlink\" title=\"9. Wordpress 后台安装主题或插件时需要 FTP 帐号怎么办\"></a>9. Wordpress 后台安装主题或插件时需要 FTP 帐号怎么办</h2><p>在我把代码部署到服务器上之后发现在更新插件或者安装插件的时候需要输入 FTP 用户名和密码，去阿里云控制台也没有找到，所以就上网找了一些解决教程，试了一下下面的解决方法，实测有效：</p>\n<p>主要原因是 Wordpress 主目录的权限所有者不属于 apache 造成的；</p>\n<p>第一步：找到 apache 服务所使用的用户名和用户组，具体做法为打开终端，输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -aux</span><br></pre></td></tr></table></figure>\n<p>找到 <code>/usr/sbin/apach</code>（或 <code>/usr/sbin/httpd</code>）的用户名，它就是 apache 的所有者，我这里是 apache</p>\n<p>第二步：终端输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown \bapache:apache -R /var/www/</span><br></pre></td></tr></table></figure>\n<p>这里的 <code>/var/www/</code> 是我的 web 主目录也是 Wordpress 主目录；<br>好了，这样就 OK 了，再进入 Wordpress 后台安装主题和插件就不再需要 FTP 帐户和密码了！！</p>\n<h2 id=\"10-WordPress-数据库及各表结构\"><a href=\"#10-WordPress-数据库及各表结构\" class=\"headerlink\" title=\"10. WordPress 数据库及各表结构\"></a>10. WordPress 数据库及各表结构</h2><p>转载自 <a href=\"http://blog.csdn.net/ppiao1970hank/article/details/6301812\" target=\"_blank\" rel=\"noopener\">csdn</a>，相信知道这些数据表的结构之后，可以对自己的 Wordpress 网站进行更加个性化的设置，当然如果你的英文还可以的话，推荐 <a href=\"https://codex.wordpress.org/Database_Description#Table_Overview\" target=\"_blank\" rel=\"noopener\">WordPress官方文档</a>，官方已经给出了比较详细的表格</p>\n<h2 id=\"11-建立数据库连接时出错\"><a href=\"#11-建立数据库连接时出错\" class=\"headerlink\" title=\"11. 建立数据库连接时出错\"></a>11. 建立数据库连接时出错</h2><p>某一天，我心血来潮想搞个 https，结果刷新网页的时候发现显示“建立数据库连接时出错”，后来在服务器上重启 mysql 就没问题了= =。。</p>\n<h2 id=\"12-升级至-HTTPS-时图片路径仍然为-HTTP\"><a href=\"#12-升级至-HTTPS-时图片路径仍然为-HTTP\" class=\"headerlink\" title=\"12. 升级至 HTTPS 时图片路径仍然为 HTTP\"></a>12. 升级至 HTTPS 时图片路径仍然为 HTTP</h2><p>前几天把网站升级至 HTTPS 了，不过随之而来的就是一堆 bug 报错，首先就是文章中的图片路径，仍然是 HTTP 的话浏览器会报 <code>Mixed Content</code> 错，但是我通过修改数据库的方式仍然不管用，后来不知不觉把两个插件禁用了，然后就好了，这两个插件就是七牛云的相关插件：<strong>WPJAM BASIC、WPJAM 七牛镜像存储</strong>，不过禁用掉之后就用不了七牛云了，后续有时间我再深入研究一下= =</p>\n<h2 id=\"13-WordPress：基于-JWT-的身份验证\"><a href=\"#13-WordPress：基于-JWT-的身份验证\" class=\"headerlink\" title=\"13. WordPress：基于 JWT 的身份验证\"></a>13. WordPress：基于 JWT 的身份验证</h2><p>如果你想基于 WordPress 去创建前端 App 或者移动端 App，解决用户的身份验证可以使用 JWT 这种方法，它是一种基于 Token 的验证身份的方法。</p>\n","raw":null,"categories":[{"name":"wordpress","path":"api/categories/wordpress.json"}],"tags":[{"name":"指南","path":"api/tags/指南.json"},{"name":"Wordpress","path":"api/tags/Wordpress.json"}]},{"title":"前端优秀插件推荐","slug":"前端优秀插件推荐","date":"2017-03-15T12:36:38.000Z","updated":"2019-04-15T04:45:42.148Z","comments":true,"path":"api/articles/前端优秀插件推荐.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>这里集中了一些我在项目中或平常看到听到的好的插件，话不多说，直接干货：</p>\n<table>\n<thead>\n<tr>\n<th>插件名称</th>\n<th>描述</th>\n<th>地址</th>\n<th>备注</th>\n<th>依赖</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>turn.js</td>\n<td>能够将HTML内容组织成看起来像一本真正的书籍或杂志，用到HTML5的所有优点</td>\n<td><a href=\"https://github.com/blasten/turn.js\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://www.turnjs.com/\" target=\"_blank\" rel=\"noopener\">官网</a></td>\n<td>可以工作在旧浏览器中比如：IE 8</td>\n<td></td>\n</tr>\n<tr>\n<td>Tdrag</td>\n<td>拖拽的插件，可以拖拽任意元素</td>\n<td><a href=\"https://github.com/tezml/Tdrag/\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://www.jq22.com/yanshi8362\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>tagsinput</td>\n<td>动态标签生成，并添加了删除按钮和其他好看的样式</td>\n<td><a href=\"https://github.com/xoxco/jQuery-Tags-Input\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://xoxco.com/projects/code/tagsinput/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://xoxco.com/projects/code/tagsinput/example.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>slimScroll</td>\n<td>支持把内容放在一个盒子里面，固定一个高度，超出的则使用滚动。</td>\n<td><a href=\"https://github.com/rochal/jQuery-slimScroll\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://www.jq22.com/yanshi1425\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>不过不支持resize的时候重新调用插件，有一个贡献者已经修改过源码，不过作者并没有加进去。插件项目地址：<a href=\"http://rocha.la/jQuery-slimScroll\" target=\"_blank\" rel=\"noopener\">插件地址</a>（插件不支持IE7）</td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>scratchit.js</td>\n<td>一款基于HTML5 canvas的jQuery刮刮卡效果插件。这个刮刮卡效果使用两张图片和canvas来制作，可以使用鼠标擦除上面的图片，将下面的图片显露出来，模拟现实的刮刮卡效果</td>\n<td><a href=\"http://www.htmleaf.com/Demo/201506071985.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>可以用来做手机游戏刮刮卡，亲测可用</td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>myFocus</td>\n<td>可以实现图片轮播，风格多种多样</td>\n<td><a href=\"http://demo.jb51.net/js/myfocus/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://demo.jb51.net/js/myfocus/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>没有 Github 地址，因为人家是用 SVN 的</td>\n<td></td>\n</tr>\n<tr>\n<td>move.js</td>\n<td>模拟CSS3动画的js插件。该插件可以完成CSS3的各种动画效果：移动、变形、倾斜、背景色渐变、旋转等。并且可以在动画中使用各种easing效果</td>\n<td><a href=\"https://github.com/visionmedia/move.js/\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://www.htmleaf.com/Demo/201501281292.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>mCustomScrollbar</td>\n<td>滚动条样式插件，可以自由的定制自己喜欢的滚动条</td>\n<td><a href=\"https://github.com/malihu/malihu-custom-scrollbar-plugin\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://manos.malihu.gr/jquery-custom-content-scroller/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://manos.malihu.gr/repository/custom-scrollbar/demo/examples/complete_examples.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>兼容IE6和IE7等的浏览器</td>\n<td></td>\n</tr>\n<tr>\n<td>Lightbox</td>\n<td>实现图片浏览效果，具有的功能包括：自动根据窗口的大小缩放图片，模式窗口，幻灯片方式播放，内容预加载，渐变等效果</td>\n<td><a href=\"https://github.com/lokesh/lightbox2/\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://lokeshdhakar.com/projects/lightbox2/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://www.zhangxinxu.com/jq/balupton_zh/demo/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>有基于 jQuery 的，有基于 Prototype 的，也有使用原生 JavaScript 写的</td>\n<td></td>\n</tr>\n<tr>\n<td>html2canvas</td>\n<td>将html的内容以canvas形式生成图片，亲测好用</td>\n<td><a href=\"https://github.com/niklasvh/html2canvas\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://html2canvas.hertzen.com/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://html2canvas.hertzen.com/examples.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>gridly</td>\n<td>一个 jQuery 插件，它能够拖动，删除和调整一个网格的大小，亲测好用</td>\n<td><a href=\"https://github.com/ksylvest/jquery-gridly\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://ksylvest.github.io/jquery-gridly/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://www.jq22.com/yanshi386\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>FullPage</td>\n<td>可以做出全屏网站</td>\n<td><a href=\"https://github.com/powy1993/fullpage\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://www.dowebok.com/demo/2014/77/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>兼容桌面端(ie5.5+) 和手机端</td>\n<td></td>\n</tr>\n<tr>\n<td>fine-uploader</td>\n<td>采用 ajax 方式实现文件上传，同时在浏览器中直接支持文件拖拽</td>\n<td><a href=\"https://github.com/valums/file-uploader\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"https://fineuploader.com/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"https://fineuploader.com/demos\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>对浏览器版本有要求类似 IE 版本必须是 9 或是更高的 IE10</td>\n<td></td>\n</tr>\n<tr>\n<td>csshake-master</td>\n<td>CSS3 元素抖动动画库</td>\n<td><a href=\"https://github.com/elrumordelaluz/csshake\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://elrumordelaluz.github.io/csshake/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://www.ui3g.com/demos/show/1233/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ajaxfileupload</td>\n<td>一个异步上传文件的 jQuery 插件</td>\n<td><a href=\"https://github.com/davgothic/AjaxFileUpload\" target=\"_blank\" rel=\"noopener\">Github</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>animate.css</td>\n<td>齐全的 CSS3 动画库</td>\n<td><a href=\"https://github.com/daneden/animate.css/\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://www.jq22.com/yanshi819\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>css3d-engine</td>\n<td>CSS3d 动画，主要是在 transform 上做文章</td>\n<td><a href=\"https://github.com/shrekshrek/css3d-engine\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://css3d.bitworking.de/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://css3d.bitworking.de/examples/example01.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>可以用来做720度或320度全景，亲测可用</td>\n<td></td>\n</tr>\n<tr>\n<td>hammer.js</td>\n<td>可以完美的实现在移端开发用到的大多数事件，如：点击、滑动、拖动、多点触控等事件</td>\n<td><a href=\"https://github.com/hammerjs/hammer.js/\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://hammerjs.github.io/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://codepen.io/runspired/full/ZQBGWd/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>iscroll.js</td>\n<td>移动端广泛应用的插件之一，用于让元素在固定高度盒子内滚动</td>\n<td><a href=\"https://github.com/cubiq/iscroll\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://cubiq.org/iscroll-4\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://lab.cubiq.org/iscroll/examples/simple/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>版本 4 还包括缩放、拉动刷新、精确捕捉元素、自定义滚动条等功能</td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>touchSwipe.js</td>\n<td>和 hammer.js 类似，同样是移动端触屏触摸特效插件</td>\n<td><a href=\"https://github.com/mattbryson/TouchSwipe-Jquery-Plugin\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://labs.rampinteractive.co.uk/touchSwipe/demos/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://labs.rampinteractive.co.uk/touchSwipe/demos/Enable_and_destroy.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>有一个 bug：手指事件会在 a 标签超链接内失效</td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>jquery.validate</td>\n<td>表单验证插件，非常方便实用</td>\n<td><a href=\"https://github.com/jquery-validation/jquery-validation\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"https://jqueryvalidation.org/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"https://jqueryvalidation.org/files/demo/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>jstween</td>\n<td>将某一个元素粒子化</td>\n<td><a href=\"https://github.com/shrekshrek/jstween\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://shrek.imdevsh.com/demo/performance/test1/jstween.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>具体应用还未尝试，但是该插件的作者有许多优秀的项目，可以 follow 一下</td>\n<td></td>\n</tr>\n<tr>\n<td>DlHighlight</td>\n<td>代码高亮脚本，只支持 4 种编程语言：JS、CSS、XML、HTML</td>\n<td><a href=\"\">Github</a> &#124; <a href=\"http://mihai.bazon.net/projects/javascript-syntax-highlighting-engine\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://demo.jb51.net/js/2012/hl/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n</tbody>\n</table>\n","raw":null,"categories":[{"name":"summary","path":"api/categories/summary.json"}],"tags":[{"name":"推荐","path":"api/tags/推荐.json"}]},{"title":"一些实用的JS和jQuery方法","slug":"一些实用的JS和jQuery方法","date":"2017-03-15T07:56:27.000Z","updated":"2019-04-15T04:45:42.148Z","comments":true,"path":"api/articles/一些实用的JS和jQuery方法.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>这里总结了一些常用的 JS/jQuery 方法，都是一些在项目中经常遇到的功能需求，如果你有更多的建议，欢迎留言</p>\n<blockquote>\n<p>更新于 2018-02-11：在我的github（<a href=\"https://github.com/merrier/common-js\" target=\"_blank\" rel=\"noopener\">common-js</a>）上对一些常用的方法进行了总结，都是一些短小精悍但是颇为实用的封装函数，欢迎 star 或 fork:)</p>\n</blockquote>\n<h2 id=\"1、简单的图片预览\"><a href=\"#1、简单的图片预览\" class=\"headerlink\" title=\"1、简单的图片预览\"></a>1、简单的图片预览</h2><p>这个方法就是普通的上传图片并预览功能，不包含进度条以及大小和格式的判断</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//------------------获取图片url地址---------------</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getObjectURL</span>(<span class=\"params\">file</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> url = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.createObjectURL!=<span class=\"literal\">undefined</span>) &#123; <span class=\"comment\">// basic</span></span><br><span class=\"line\">    url = <span class=\"built_in\">window</span>.createObjectURL(file) ;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.URL!=<span class=\"literal\">undefined</span>) &#123; <span class=\"comment\">// mozilla(firefox)</span></span><br><span class=\"line\">    url = <span class=\"built_in\">window</span>.URL.createObjectURL(file) ;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.webkitURL!=<span class=\"literal\">undefined</span>) &#123; <span class=\"comment\">// webkit or chrome</span></span><br><span class=\"line\">    url = <span class=\"built_in\">window</span>.webkitURL.createObjectURL(file) ;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> url ;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//---------------上传图片按钮点击------------</span></span><br><span class=\"line\">$(<span class=\"string\">\".btn_upload_file\"</span>).change(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> picurl = getObjectURL(<span class=\"keyword\">this</span>.files[<span class=\"number\">0</span>]);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(picurl)&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\".div_show_pic\"</span>).show().attr(<span class=\"string\">\"src\"</span>,picurl);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、实现-sleep-函数\"><a href=\"#2、实现-sleep-函数\" class=\"headerlink\" title=\"2、实现 sleep 函数\"></a>2、实现 sleep 函数</h2><p>很多语言都有 sleep 函数，显然 js 没有，所以需要其他的方法“模拟”实现 sleep 函数</p>\n<h3 id=\"方法一：通过比较当前时间\"><a href=\"#方法一：通过比较当前时间\" class=\"headerlink\" title=\"方法一：通过比较当前时间\"></a>方法一：通过比较当前时间</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sleep</span>(<span class=\"params\">numberMillis</span>) </span>&#123; </span><br><span class=\"line\">  <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(); </span><br><span class=\"line\">  <span class=\"keyword\">var</span> exitTime = now.getTime() + numberMillis; </span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123; </span><br><span class=\"line\">    now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(); </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (now.getTime() &gt; exitTime) </span><br><span class=\"line\">      <span class=\"keyword\">return</span>; </span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法二：jQuery-中的-delay-方法\"><a href=\"#方法二：jQuery-中的-delay-方法\" class=\"headerlink\" title=\"方法二：jQuery 中的 $.delay() 方法\"></a>方法二：jQuery 中的 $.delay() 方法</h3><p>下面这个例子：在 slideUp() 和 .fadeIn() 之间延时 800 毫秒</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'#foo'</span>).slideUp(<span class=\"number\">300</span>).delay(<span class=\"number\">800</span>).fadeIn(<span class=\"number\">400</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法三：setTimeout\"><a href=\"#方法三：setTimeout\" class=\"headerlink\" title=\"方法三：setTimeout\"></a>方法三：setTimeout</h3><p>假设有三个步骤，步骤之间需要暂停一段时间；可以采用如下的方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">firstStep</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//do something</span></span><br><span class=\"line\">  setTimeout(<span class=\"string\">\"secondStep()\"</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">secondStep</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//do something</span></span><br><span class=\"line\">  setTimeout(<span class=\"string\">\"thirdStep()\"</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">thirdStep</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//do something</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法四：ES6-的-promise\"><a href=\"#方法四：ES6-的-promise\" class=\"headerlink\" title=\"方法四：ES6 的 promise\"></a>方法四：ES6 的 promise</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">await</span> sleep(<span class=\"number\">1000</span>)</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'world!'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sleep</span>(<span class=\"params\">ms</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> setTimeout(resolve, ms))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">test();</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、复制内容后面附加额外内容\"><a href=\"#3、复制内容后面附加额外内容\" class=\"headerlink\" title=\"3、复制内容后面附加额外内容\"></a>3、复制内容后面附加额外内容</h2><p>复制网页上面内容时，自动在剪切板内容后面加上网站信息，这样也利于 SEO 优化：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.body.oncopy = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;   </span><br><span class=\"line\">    <span class=\"keyword\">var</span> text = clipboardData.getData(<span class=\"string\">\"text\"</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (text) &#123;</span><br><span class=\"line\">      text = text + <span class=\"string\">\"\\\\r\\\\n本篇文章来源于 www.地址.COM 原文链接：\"</span>+location.href;   </span><br><span class=\"line\">      clipboardData.setData(<span class=\"string\">\"text\"</span>, text); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, <span class=\"number\">100</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4、很简单的省略字数\"><a href=\"#4、很简单的省略字数\" class=\"headerlink\" title=\"4、很简单的省略字数\"></a>4、很简单的省略字数</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".omit_word_class\"</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> ntext = $(<span class=\"keyword\">this</span>).text();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> nlen = $(<span class=\"keyword\">this</span>).text().length;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(nlen&gt; <span class=\"number\">7</span>)&#123;</span><br><span class=\"line\">    $(<span class=\"keyword\">this</span>).text(ntext.substring(<span class=\"number\">0</span>,<span class=\"number\">7</span>) + <span class=\"string\">\"...\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"5、JS-的动画帧\"><a href=\"#5、JS-的动画帧\" class=\"headerlink\" title=\"5、JS 的动画帧\"></a>5、JS 的动画帧</h2><p>关于 requestAnimationFrame，我对它的理解也很浅层，推荐这篇<a href=\"http://www.zhangxinxu.com/wordpress/2013/09/css3-animation-requestanimationframe-tween-%E5%8A%A8%E7%94%BB%E7%AE%97%E6%B3%95/\" target=\"_blank\" rel=\"noopener\">张鑫旭对于requestAnimationFrame的讲解</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.requestAnimFrame = (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>  <span class=\"built_in\">window</span>.requestAnimationFrame       ||</span><br><span class=\"line\">          <span class=\"built_in\">window</span>.webkitRequestAnimationFrame ||</span><br><span class=\"line\">          <span class=\"built_in\">window</span>.mozRequestAnimationFrame    ||</span><br><span class=\"line\">          <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> callback </span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">window</span>.setTimeout(callback, <span class=\"number\">1000</span> / <span class=\"number\">60</span>);</span><br><span class=\"line\">          &#125;;</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<h2 id=\"6、JS-判断字符串长度\"><a href=\"#6、JS-判断字符串长度\" class=\"headerlink\" title=\"6、JS 判断字符串长度\"></a>6、JS 判断字符串长度</h2><p>方法一，给 String 的 prototype 添加方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.gblen = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;    </span><br><span class=\"line\">  <span class=\"keyword\">var</span> len = <span class=\"number\">0</span>;    </span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;<span class=\"keyword\">this</span>.length; i++) &#123;    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.charCodeAt(i)&gt;<span class=\"number\">127</span> || <span class=\"keyword\">this</span>.charCodeAt(i)==<span class=\"number\">94</span>) &#123;    </span><br><span class=\"line\">      len += <span class=\"number\">2</span>;    </span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;    </span><br><span class=\"line\">      len ++;    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">  &#125;    </span><br><span class=\"line\">  <span class=\"keyword\">return</span> len;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法二，利用-ASCII-码\"><a href=\"#方法二，利用-ASCII-码\" class=\"headerlink\" title=\"方法二，利用 ASCII 码\"></a>方法二，利用 ASCII 码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">strlen</span>(<span class=\"params\">str</span>)</span>&#123;  </span><br><span class=\"line\">  <span class=\"keyword\">var</span> len = <span class=\"number\">0</span>;  </span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;str.length; i++) &#123;   </span><br><span class=\"line\">    <span class=\"keyword\">var</span> c = str.charCodeAt(i);   </span><br><span class=\"line\">    <span class=\"comment\">//单字节加1   </span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((c &gt;= <span class=\"number\">0x0001</span> &amp;&amp; c &lt;= <span class=\"number\">0x007e</span>) || (<span class=\"number\">0xff60</span>&lt;=c &amp;&amp; c&lt;=<span class=\"number\">0xff9f</span>)) &#123;   </span><br><span class=\"line\">      len++;   </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;   </span><br><span class=\"line\">      len+=<span class=\"number\">2</span>;   </span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">  <span class=\"keyword\">return</span> len;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法三：把双字节的替换成两个单字节的然后再获得长度\"><a href=\"#方法三：把双字节的替换成两个单字节的然后再获得长度\" class=\"headerlink\" title=\"方法三：把双字节的替换成两个单字节的然后再获得长度\"></a>方法三：把双字节的替换成两个单字节的然后再获得长度</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getBLen = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (str == <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> str != <span class=\"string\">\"string\"</span>)&#123;  </span><br><span class=\"line\">    str += <span class=\"string\">\"\"</span>;  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.replace(<span class=\"regexp\">/[^\\\\x00-\\\\xff]/g</span>,<span class=\"string\">\"01\"</span>).length;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7、jQuery-控制超出规定长度显示省略号\"><a href=\"#7、jQuery-控制超出规定长度显示省略号\" class=\"headerlink\" title=\"7、jQuery 控制超出规定长度显示省略号\"></a>7、jQuery 控制超出规定长度显示省略号</h2><p>给需要显示省略号的标签设置 class 为 displayPart，然后设置自定义属性 displayLength，该属性为可显示长度（不包含…），该方法会区分中英文，中文字符相当于两个字节</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.fn.extend(&#123; </span><br><span class=\"line\">  displayPart:<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">var</span> displayLength = <span class=\"number\">100</span>; </span><br><span class=\"line\">    displayLength = <span class=\"keyword\">this</span>.attr(<span class=\"string\">\"displayLength\"</span>) || displayLength; </span><br><span class=\"line\">    <span class=\"keyword\">var</span> text = <span class=\"keyword\">this</span>.text(); </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!text) <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = <span class=\"string\">\"\"</span>; </span><br><span class=\"line\">    <span class=\"keyword\">var</span> count = <span class=\"number\">0</span>; </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; displayLength; i++) &#123; </span><br><span class=\"line\">      <span class=\"keyword\">var</span> _char = text.charAt(i); </span><br><span class=\"line\">      <span class=\"keyword\">if</span> (count &gt;= displayLength) <span class=\"keyword\">break</span>; </span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"regexp\">/[^x00-xff]/</span>.test(_char)) count++; <span class=\"comment\">//双字节字符，//[u4e00-u9fa5]中文 </span></span><br><span class=\"line\">      result += _char; </span><br><span class=\"line\">      count++; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (result.length &lt; text.length) &#123; </span><br><span class=\"line\">      result += <span class=\"string\">\"...\"</span>; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">this</span>.text(result); </span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">&#125;); </span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\".displayPart\"</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).displayPart();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"8、去除字符串首尾的空白字符\"><a href=\"#8、去除字符串首尾的空白字符\" class=\"headerlink\" title=\"8、去除字符串首尾的空白字符\"></a>8、去除字符串首尾的空白字符</h2><p>如果引入了 jQuery，可以直接利用 $.trim() 方法，如果没有就需要用到下面的正则表达式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">trim</span>(<span class=\"params\">ostr</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ostr.replace(<span class=\"regexp\">/^\\\\s+|\\\\s+$/g</span>,<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"9、判断数组中是否包含某个元素\"><a href=\"#9、判断数组中是否包含某个元素\" class=\"headerlink\" title=\"9、判断数组中是否包含某个元素\"></a>9、判断数组中是否包含某个元素</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [ <span class=\"string\">\"xml\"</span>, <span class=\"string\">\"html\"</span>, <span class=\"string\">\"css\"</span>, <span class=\"string\">\"js\"</span> ];  </span><br><span class=\"line\">$.inArray(<span class=\"string\">\"js\"</span>, arr);  <span class=\"comment\">// 返回 3, 如果不包含在数组中, 则返回 -1;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"10、获取日期并格式化\"><a href=\"#10、获取日期并格式化\" class=\"headerlink\" title=\"10、获取日期并格式化\"></a>10、获取日期并格式化</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDateStr</span>(<span class=\"params\">AddDayCount</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> dd = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">  dd.setDate(dd.getDate()+AddDayCount);<span class=\"comment\">//获取AddDayCount天后的日期</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> y = dd.getFullYear();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> m = dd.getMonth()+<span class=\"number\">1</span>;<span class=\"comment\">//获取当前月份的日期</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> d = dd.getDate();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> y+<span class=\"string\">\"-\"</span>+m+<span class=\"string\">\"-\"</span>+d;</span><br><span class=\"line\">&#125;)(<span class=\"number\">-2</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"11、根据屏幕宽度改变-html-的-font-size-大小\"><a href=\"#11、根据屏幕宽度改变-html-的-font-size-大小\" class=\"headerlink\" title=\"11、根据屏幕宽度改变 html 的 font-size 大小\"></a>11、根据屏幕宽度改变 html 的 font-size 大小</h2><p>结合 REM 可以很轻松的实现移动端的响应式大小效果</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">win</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setUnitA</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.documentElement.style.fontSize = <span class=\"built_in\">document</span>.documentElement.clientWidth / <span class=\"number\">16</span> + <span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> h = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">\"resize\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    clearTimeout(h);</span><br><span class=\"line\">    h = setTimeout(setUnitA, <span class=\"number\">300</span>);</span><br><span class=\"line\">  &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">  setUnitA();</span><br><span class=\"line\">&#125;)(<span class=\"built_in\">window</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"12、JS-jQuery-获取-url-参数\"><a href=\"#12、JS-jQuery-获取-url-参数\" class=\"headerlink\" title=\"12、JS/jQuery 获取 url 参数\"></a>12、JS/jQuery 获取 url 参数</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//---------------javaseript获取url中的参数----------------</span></span><br><span class=\"line\"><span class=\"comment\">//\\* 用法：</span></span><br><span class=\"line\"><span class=\"comment\">//\\* var args = getArgs( ); // 从 URL 解析出参数</span></span><br><span class=\"line\"><span class=\"comment\">//\\* var q = args.q || \"\"; // 如果定义了某参数，则使用其值，否则给它一个默认值</span></span><br><span class=\"line\"><span class=\"comment\">//\\* var n = args.n ? parseInt(args.n) : 10;</span></span><br><span class=\"line\"><span class=\"comment\">//*/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> getArgs = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> args = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>( ); <span class=\"comment\">//声明一个空对象</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> query = <span class=\"built_in\">window</span>.location.search.substring(<span class=\"number\">1</span>); <span class=\"comment\">// 取查询字符串，如从 http://www.snowpeak.org/testjs.htm?a1=v1&amp;a2=&amp;a3=v3#anchor 中截出 a1=v1&amp;a2=&amp;a3=v3。</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> pairs = query.split(<span class=\"string\">\"&amp;\"</span>); <span class=\"comment\">// 以 &amp; 符分开成数组</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; pairs.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> pos = pairs[i].indexOf(<span class=\"string\">'='</span>); <span class=\"comment\">// 查找 \"name=value\" 对</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pos == <span class=\"number\">-1</span>) <span class=\"keyword\">continue</span>; <span class=\"comment\">// 若不成对，则跳出循环继续下一对</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> argname = pairs[i].substring(<span class=\"number\">0</span>,pos); <span class=\"comment\">// 取参数名</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> value = pairs[i].substring(pos+<span class=\"number\">1</span>); <span class=\"comment\">// 取参数值</span></span><br><span class=\"line\">        value = <span class=\"built_in\">decodeURIComponent</span>(value); <span class=\"comment\">// 若需要，则解码</span></span><br><span class=\"line\">        args[argname] = value; <span class=\"comment\">// 存成对象的一个属性</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> args; <span class=\"comment\">// 返回此对象</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"13、返回一个最小值与最大值中间的随机值\"><a href=\"#13、返回一个最小值与最大值中间的随机值\" class=\"headerlink\" title=\"13、返回一个最小值与最大值中间的随机值\"></a>13、返回一个最小值与最大值中间的随机值</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">random</span>(<span class=\"params\">min,max</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> min + (max - min) * <span class=\"built_in\">Math</span>.random();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"14、限制上传文件格式和大小\"><a href=\"#14、限制上传文件格式和大小\" class=\"headerlink\" title=\"14、限制上传文件格式和大小\"></a>14、限制上传文件格式和大小</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fileChange</span>(<span class=\"params\">target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name=target.value;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> fileType = name.substring(name.lastIndexOf(<span class=\"string\">\".\"</span>)+<span class=\"number\">1</span>).toLowerCase();     <span class=\"comment\">// 获取文件格式</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> fileArr=name.split(<span class=\"string\">\"\\\\\\\");</span></span><br><span class=\"line\"><span class=\"string\">    var fileName=fileArr[fileArr.length-1];     // 获取文件名称</span></span><br><span class=\"line\"><span class=\"string\">    if(fileType !=\"</span>jpg<span class=\"string\">\" &amp;&amp; fileType !=\"</span>png<span class=\"string\">\")&#123;</span></span><br><span class=\"line\"><span class=\"string\">        alert(\"</span>请选择jpg或者png格式图片文件上传！<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\">        target.value=\"</span><span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">        return false;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"string\">        var fileSize = target.files[0].size/1024;           // 获取文件大小，单位为kb</span></span><br><span class=\"line\"><span class=\"string\">        console.log(fileSize);</span></span><br><span class=\"line\"><span class=\"string\">        if (fileSize &gt; 40) &#123;</span></span><br><span class=\"line\"><span class=\"string\">            alert(\"</span>图片文件大小不得超过<span class=\"number\">40</span>kb!<span class=\"string\">\");</span></span><br><span class=\"line\"><span class=\"string\">            target.value=\"</span><span class=\"string\">\";</span></span><br><span class=\"line\"><span class=\"string\">            return false;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"string\">            var url=getObjectURL(target.files[0]);           // 获取图片url</span></span><br><span class=\"line\"><span class=\"string\">            console.log(url);</span></span><br><span class=\"line\"><span class=\"string\">            $(\"</span>.modal_brand .upload_img<span class=\"string\">\").attr(\"</span>src<span class=\"string\">\",url);      // 显示上传图片</span></span><br><span class=\"line\"><span class=\"string\">            console.log($(\"</span>.modal_brand .upload_img<span class=\"string\">\").attr(\"</span>src<span class=\"string\">\"));</span></span><br><span class=\"line\"><span class=\"string\">            $(\"</span>.modal_brand .img_name p<span class=\"string\">\").text(fileName);          // 显示上传图片文件名</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"15、一个-HTML-转义函数\"><a href=\"#15、一个-HTML-转义函数\" class=\"headerlink\" title=\"15、一个 HTML 转义函数\"></a>15、一个 HTML 转义函数</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">escapeHTML</span>(<span class=\"params\">text</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> replacements= &#123;<span class=\"string\">\"&lt;\"</span>: <span class=\"string\">\"&lt;\"</span>, <span class=\"string\">\"&gt;\"</span>: <span class=\"string\">\"&gt;\"</span>,<span class=\"string\">\"&amp;\"</span>: <span class=\"string\">\"&amp;\"</span>, <span class=\"string\">\"\\\\\"</span><span class=\"string\">\": \"</span><span class=\"string\">\"\"</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> text.replace(<span class=\"regexp\">/[&lt;&gt;&amp;\"]/g</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">character</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> replacements[character];</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","raw":null,"categories":[{"name":"js","path":"api/categories/js.json"}],"tags":[{"name":"JS","path":"api/tags/JS.json"},{"name":"jQuery","path":"api/tags/jQuery.json"}]},{"title":"Wordpress插件推荐","slug":"Wordpress插件推荐","date":"2017-03-14T12:54:24.000Z","updated":"2019-04-15T04:45:42.144Z","comments":true,"path":"api/articles/Wordpress插件推荐.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_129.png","content":"<h2 id=\"1-Easy-WP-SMTP\"><a href=\"#1-Easy-WP-SMTP\" class=\"headerlink\" title=\"1. Easy WP SMTP\"></a>1. Easy WP SMTP</h2><p>这个插件是我在看<a href=\"http://www.imooc.com/video/10468\" target=\"_blank\" rel=\"noopener\">慕课网</a>的 wordpress 教程的时候看到的，主要用来解决 wordpress 发送邮件会被屏蔽的 bug，从 wordpress 安装插件的界面可以看到这款插件活跃安装有 10W+，所以从一定角度说明了这个插件有多强大。但是，仅仅安装是不够的，还需要设置一些 SMTP 相关内容，关于此插件如何设置，慕课网上的相关视频已经讲的很清楚了。</p>\n<p>##v 2. WP User Avatar</p>\n<p>这个插件同样是在看慕课网的 wordpress 教程的时候看到的，讲师说是用来解决头像问题，他的视频中头像是带一个 × 号的（就和网页中加载图片失败后显示的样子差不多），而我这里在未安装这款插件的时候的默认头像是一个灰底的白色小人，所以应该是 wordpress 后来更新了这个 bug，但是不安装插件的话其他用户还是没有办法上传并修改头像的，所以这款插件还是很有必要安装的，具体的配置流程看<a href=\"http://www.imooc.com/video/10469\" target=\"_blank\" rel=\"noopener\">慕课网</a>的视频即可。</p>\n<h2 id=\"3-Wp-syntax\"><a href=\"#3-Wp-syntax\" class=\"headerlink\" title=\"3. Wp-syntax\"></a>3. Wp-syntax</h2><p>这个插件是我在写文章的时候发现的，因为想在文章中插入代码（作为一个码农，这个需求应该再正常不过了），然后我发现后台自带的编辑器是没办法高亮显示的，所以就 baidu 了一下，就搜到了这款插件，在 wordpress 里搜索到它有 10000+ 活跃安装，所以应该还可以，而且看介绍支持的语言简直覆盖了整个代码界，所以如果你也有同样需求的话，这款插件应该不容错过（话不多说，我去试用了 = =） 可是，这个插件用的并不顺利，启用之后按照网上的格式进行了编辑，然而有一个莫名其妙的 bug 出现了，先上图：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_129.png\" alt=\"\" width=\"550\"></div>\n\n<p>可以看到 <code>&lt;pre&gt;</code> 标签里面的双引号竟然是中文的，而且一半是中文，一半是英文，我在后台编辑的时候试了各种方法打出英文双引号，但是在后台编辑器里是””，但是到了前端页面就不是了，到目前为止我仍然不知道为什么……不知道是我的问题还是这款插件的 bug，所以只能换个插件了（其实已经解决了双引号的 bug，但是这款插件的效果依然没有看到，所以代码高亮只能用其他插件了，可以向下看）。</p>\n<h2 id=\"4-Jetpack\"><a href=\"#4-Jetpack\" class=\"headerlink\" title=\"4. Jetpack\"></a>4. Jetpack</h2><p>这款插件在推荐里是第二位，然后我就去查了一下，果然有代码块的功能，果断安装试用，然而，我在连接的时候遇到了下面一个 error：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_127.png\" alt=\"\" width=\"600\"></div>\n\n<p>翻译过来就是说我的根目录下的 xmlrpc.php 里面有空格，可能是别的插件或主题引起的，然后让我去一个网址看解决方案，我打开了那个网址：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_128.png\" alt=\"\" width=\"600\"></div>\n\n<p>确实给出了解决方案，然而我按照那个方案里说的把所有插件都禁用，并且主题更换为默认主题之后还是报错，然后去 wp-config.php 查看，第一个 <code>&lt;?php</code> 前面根本就没有空格，所以，这个问题就搁置在这里了，如果我找到解决方案了，我再回来更新吧……</p>\n<h2 id=\"5-Quotmarks-Replacer\"><a href=\"#5-Quotmarks-Replacer\" class=\"headerlink\" title=\"5. Quotmarks Replacer\"></a>5. Quotmarks Replacer</h2><p>wordpress 有一个bug，就是英文的双引号””会被强制转换成中文双引号“”，这个我在上面已经提到过了，然后我就查了一下，发现网上的回答基本上都是这样的：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_130.png\" alt=\"\" width=\"600\"></div>\n\n<p>按照第二个方法的解释，我去 formatting.php 里查找了一下，可能因为我所用的 wordpress 的版本比较高，所以并没有找到同样的代码（第一个 static strings 找到了，注释掉之后类似于 ‘’’ 这样的仍然会被强制转换为 ‘‘’）；然后尝试了第一种方法，也就是此款插件，虽然活跃安装很少，只有 600+，但是完美的解决了我的问题，值得推荐一把；至于第三种方法，我并没有去试，因为我的问题已经解决了呀~！</p>\n<h2 id=\"6-Pure-Highlightjs\"><a href=\"#6-Pure-Highlightjs\" class=\"headerlink\" title=\"6. Pure-Highlightjs\"></a>6. Pure-Highlightjs</h2><p>在试过了好多插件之后，终于找到一个可以用的代码高亮插件了，这款插件是一个长期玩 wordpress 的同学介绍的，在 wordpress 自带的插件库里搜索不到，我就直接给个现在下载链接好了，<a href=\"https://github.com/icodechef/…/Pure-Highlightjs_1.0.zip\" target=\"_blank\" rel=\"noopener\">点我下载</a>，下载之后上传启用，然后回到后台文章编辑的页面，就可以看到工具条里多了一个 “&lt;&gt;” 符号，点击之后就可以插入代码了：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_131.png\" alt=\"\" width=\"500\"></div>\n\n<p>可以插入多种类型的代码，效果还是蛮不错的。</p>\n<blockquote>\n<p>更新：我最后采用的是后面那款插件，感觉更加强大，满分推荐！</p>\n</blockquote>\n<h2 id=\"7-TablePress\"><a href=\"#7-TablePress\" class=\"headerlink\" title=\"7. TablePress\"></a>7. TablePress</h2><p>这款插件只能用一个词来描述，就是“太强大了”，作为一个表格管理的插件，不仅可以创建表单，还可以将创建的表单导入导出，供给多个 wordpress 网站使用；TablePress 所制作的表单，样式精美，具有翻页功能，搜索功能等非常强大的功能，全简体中文操作，简单易懂，活跃安装 50W+，已经可以说明一切了，五星好评推荐，下面一张功能列表镇楼：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_222.png\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"8-Easy-Add-Thumbnail\"><a href=\"#8-Easy-Add-Thumbnail\" class=\"headerlink\" title=\"8. Easy Add Thumbnail\"></a>8. Easy Add Thumbnail</h2><p>其实，这款插件的实用性仍然有待商议，它的功能是如果你没有给文章设置特色图片，就将你文章中的第一张图片设置为特色图片。。如果有喜欢这个功能的朋友可以尝试一下，1W+ 的活跃安装不容小觑。</p>\n<h2 id=\"9-Crayon-Syntax-Highlighter\"><a href=\"#9-Crayon-Syntax-Highlighter\" class=\"headerlink\" title=\"9. Crayon Syntax Highlighter\"></a>9. Crayon Syntax Highlighter</h2><p>这款插件是在别人的博客中看到的（所以说，多看别人的网站是多么的有用~），被它朴实大方的样式吸引的我果断安装，5W+ 的活跃安装也算是扬名在外了，果不其然，这款插件提供的功能和上面那款表格插件一样多：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_132.png\" alt=\"\" width=\"700\"></div>\n\n<p>这个主题是指代码块的样式，默认是 Classic，然而充满个性气质的我果断换了名叫 Github 的主题（这款主题为什么叫 Github？？）</p>\n<div align=\"center\"><img src=\"/images/hexo_post_133.png\" alt=\"\" width=\"300\"></div>\n\n<p>鉴于移动端的汹涌态势，工具栏始终显示还是值得考虑的，因为移动端没有 hover 事件啊（默认是鼠标放上去才显示，但是这样移动端的交互就不太好了）</p>\n<div align=\"center\"><img src=\"/images/hexo_post_134.png\" alt=\"\" width=\"450\"></div>\n\n<p>这个默认语言设置还是蛮关键的，因为一般的个人博客可能只会发某种语言的文章，设置好默认语言之后可能会省去很多设置语言的时间。这款插件的功能还有很多，在这里就不一一介绍了，自己安装之后去看就好了。</p>\n<h2 id=\"10-Akismet\"><a href=\"#10-Akismet\" class=\"headerlink\" title=\"10. Akismet\"></a>10. Akismet</h2><p>是 Wordpress 官方推荐的一款 WordPress 防垃圾评论插件，是默认已安装的插件，但是需要到后台去启用一下。不过从后台看的话，该插件的名字叫做 Akismet Anti-Spam，而且需要配置一下，步骤比较简单，就不一一截图了</p>\n<h2 id=\"11-Google-XML-Sitemaps\"><a href=\"#11-Google-XML-Sitemaps\" class=\"headerlink\" title=\"11.Google XML Sitemaps\"></a>11.Google XML Sitemaps</h2><p>Google XML Sitemaps 是一个使用非常广泛的 XML 网站地图插件，通过它，你可以很轻松为你的 WordPress 博客生成 <a href=\"http://baike.baidu.com/link?url=Ej_L5DfNH9hhAnwh7OpoJE3nKrBC_qRhLimem51ub_bfMsvwlk77swUnoPdvZxktOTpn0o9yFYbn_KvAeat-U_\" target=\"_blank\" rel=\"noopener\">Sitemap</a>，方便搜索引擎抓取你博客的文章。（不过中国的互联网环境大家懂得，如果没有特殊需求的话我建议你考虑下面那个插件，在国内作用会更大一点）</p>\n<h2 id=\"12-Baidu-Sitemap-Generator\"><a href=\"#12-Baidu-Sitemap-Generator\" class=\"headerlink\" title=\"12. Baidu Sitemap Generator\"></a>12. Baidu Sitemap Generator</h2><p>同样是生成 sitemap XML 文件的插件，这款插件是国人柳城制作的，对于国内的用户会更加友好，安装启用之后还要进行一些设置，可以<a href=\"http://jingyan.baidu.com/article/86fae346d0ae093c49121a38.html\" target=\"_blank\" rel=\"noopener\">点击这里</a>查看如何设置。</p>\n<h2 id=\"13-DB-Cache-Reloaded-Fix-Hyper-Cache\"><a href=\"#13-DB-Cache-Reloaded-Fix-Hyper-Cache\" class=\"headerlink\" title=\"13. DB Cache Reloaded Fix + Hyper Cache\"></a>13. DB Cache Reloaded Fix + Hyper Cache</h2><p>两个都是缓存插件，主要用于减少对数据库的请求次数和缓存 404 页等功能，但已经好久没更新了，不放心的还是慎用吧，安装启用之后还需要一些额外的设置，都是很简单的英文，自己去看好了。</p>\n<h2 id=\"14-EWWW-Image-Optimizer\"><a href=\"#14-EWWW-Image-Optimizer\" class=\"headerlink\" title=\"14. EWWW Image Optimizer\"></a>14. EWWW Image Optimizer</h2><p>这款插件是我在逛知乎的时候看到的，无损压缩 JPEG 和 PNG 图像，支持压缩已有的图像，可以加快访问者加载图片的速度。同时支持 JPEG 的渐进式加载。正常情况下，网速低时，图片是一点点从上往下加载，<strong>而使用渐进式加载，则是先加载这个图片的低分辨率版本，然后逐渐变得清晰。</strong>40W+ 的活跃安装简直无敌，不过是收费的，大概 330 张图片 1 美元，如果网站访问量很大的话还是很有必要买的。</p>\n<h2 id=\"15-Wordfence\"><a href=\"#15-Wordfence\" class=\"headerlink\" title=\"15. Wordfence\"></a>15. Wordfence</h2><p><strong>安全防御</strong>插件，可限制密码尝试次数防止暴力破解，可为你的 WordPress 增加 <a href=\"http://baike.baidu.com/link?url=FbGPIHYDfIy0NTVofknUrhlzFPIVHlkFpEP20emmXLidrVVEU1B5B9KJo8co-8NQutyZ6lnSaJXXH-9V8Yjxfq\" target=\"_blank\" rel=\"noopener\">WAF</a> 功能，查看实时访问。安装完之后发现确实很庞大，但是缺点是都是英文，而且需要配置的内容比较繁杂，英语不好的人看着有点累（比如我），但是具体好不好用还是自己试用之后再说吧。</p>\n<h2 id=\"16-WP-Fastest-Cache\"><a href=\"#16-WP-Fastest-Cache\" class=\"headerlink\" title=\"16. WP Fastest Cache\"></a>16. WP Fastest Cache</h2><p>开启缓存也是一个能快速提升 WordPress 网站访问速度的方法，立竿见影，这里推荐一个插件，有免费版的，我们用免费的足够了。需要自己设置一下，主要是设置压缩 css 文件和 js 文件。</p>\n<h2 id=\"17-a3-Lazy-Load\"><a href=\"#17-a3-Lazy-Load\" class=\"headerlink\" title=\"17. a3 Lazy Load\"></a>17. a3 Lazy Load</h2><p>图片懒加载也就是图片延时加载，简单点说就是只加载页面上能看到的图片，从而减短页面的等待时间，当访客需要看其他的图片的时候再加载相应的图片。但是当我启用这个插件之后，首页上的图片半天都不显示，所以我最后并没有启用这个插件。</p>\n<h2 id=\"18-WPJAM\"><a href=\"#18-WPJAM\" class=\"headerlink\" title=\"18. WPJAM\"></a>18. WPJAM</h2><p>这个插件是我在配置七牛云存储的时候看到的，因为安装七牛云插件必须先安装这款插件，所以我只能尝试着安装了，这款软件的活跃安装只有 4000+，但是安装完之后发现还是挺强大的，下面是它的功能截图（其实还有一些功能，但是一张图片截不下了）：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_203.png\" alt=\"\" width=\"500\"></div>\n\n<p>可以看到其提供的功能还是蛮多的，推荐一下</p>\n<h2 id=\"19-七牛云\"><a href=\"#19-七牛云\" class=\"headerlink\" title=\"19. 七牛云\"></a>19. 七牛云</h2><p>在之前做外包的时候碰到一个项目，它把所有的大型图片都放在了七牛云上，当时我根本不知道七牛是什么，但是感觉肯定是个牛逼的东西；后来我在自己探索 wordpress 插件的时候发现 wordpress 也有“七牛云”插件，于是抱着一颗好奇心尝试了一下，感觉速度的确有所提升，具体操作流程如下：</p>\n<h3 id=\"配置七牛云空间\"><a href=\"#配置七牛云空间\" class=\"headerlink\" title=\"配置七牛云空间\"></a>配置七牛云空间</h3><p>首先，到<a href=\"https://portal.qiniu.com/create\" target=\"_blank\" rel=\"noopener\">七牛云官网</a>申请一个账号，然后申请一个公开的空间，你可以将七牛云上的空间理解为网盘，七牛云会将你网站的静态资源存储到你申请的空间中，然后将空间和域名进行绑定，见下图：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_204.png\" alt=\"\" width=\"600\"></div>\n\n<p>加速的域名需要先备案，然后才可以用</p>\n<h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><p>后台搜索“七牛镜像存储”即可，安装过程应该不会遇到什么问题，安装之后进入设置页面开始进行配置</p>\n<h3 id=\"配置七牛云存储插件\"><a href=\"#配置七牛云存储插件\" class=\"headerlink\" title=\"配置七牛云存储插件\"></a>配置七牛云存储插件</h3><p>需要配置的有域名、空间名、ACCESS KEY 和 SECRET KEY，前两个是自己在七牛云网站上设置的，直接填进去就行了；后面两个密钥在个人面板中的密钥管理中可以看到，然后保存之后就可以了，就是如此简单粗暴！</p>\n<div align=\"center\"><img src=\"/images/hexo_post_13.png\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"20-Disqus\"><a href=\"#20-Disqus\" class=\"headerlink\" title=\"20. Disqus\"></a>20. Disqus</h2><p>Disqus 是一家社会化评论系统，主要为网站主提供评论托管服务；同时 Disqus 也为网站主提供了很多功能，所以 Disqus 其实不仅仅可以在 wordpress 中使用，在许多其他类型的网站上都可以使用；在这里我主要介绍一下在 wordpress 中如何使用 Disqus：<br>首先是安装 Disqus 插件（直接搜索 “Disqus”，活跃安装最多的那个就是）<br>然后需要去 <a href=\"https://disqus.com/\" target=\"_blank\" rel=\"noopener\">Disqus官网</a>注册一个账号，安装完插件之后配置 Disqus（由于是个国外的插件，所以可能会安装失败，多试几次就好了）：此时需要在 Disqus 的配置界面验证你刚才注册的账号密码，然后就配置完成了，下面是配置完成之后我的博客的评论界面：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_247.png\" alt=\"\" width=\"700\"></div>\n\n<p>从上面的截图中可以看到，Disqus 评论系统的整体风格还是很简单大方的，同时提供了分享功能、推荐功能以及自定义排序功能，是一款目前为止我认为最好的社会化评论系统（国内的多说已经关闭了，真希望 Disqus 早日打通中国市场，不要被墙啊！）；我的介绍不太详细，其实官网还需要配置一些东西，具体可参见：<a href=\"https://jingyan.baidu.com/article/ff42efa919f1b8c19f220245.html\" target=\"_blank\" rel=\"noopener\">wordpress如何使用评论插件Disqus</a></p>\n<h2 id=\"21-wumii-关联推荐\"><a href=\"#21-wumii-关联推荐\" class=\"headerlink\" title=\"21. wumii 关联推荐\"></a>21. wumii 关联推荐</h2><p>无觅关联推荐，援引<a href=\"http://www.wumii.com/widget/relatedItems\" target=\"_blank\" rel=\"noopener\">它的官网</a>中的一句话：</p>\n<blockquote>\n<p>来自前亚马逊推荐引擎团队，利用大数据分析带给你网站最精准的关联推荐服务，只需 1 分钟就可以看到效果。</p>\n</blockquote>\n<p>通俗点来说，它可以智能的分析出你博客中的文章内容，当用户在看你的文章时，可以推荐相关联的文章。安装其实很简单，按照<a href=\"http://www.wumii.com/widget/getWidget\" target=\"_blank\" rel=\"noopener\">它的指引</a>一步步安装就行了，我试用了一下，功能还是很强大的：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_77.png\" alt=\"\" width=\"600\"></div>\n\n<p>其实除了图上这些，它还提供了其他多种功能，一张图截不下了，感兴趣的童鞋可以试用一下~</p>\n<h2 id=\"22-WP-PostViews\"><a href=\"#22-WP-PostViews\" class=\"headerlink\" title=\"22. WP-PostViews\"></a>22. WP-PostViews</h2><p>这款插件是用来显示文章浏览次数 / 查看次数的，因为我用的 wordpress 主题 Dux 自带这个功能，所以就没有用这个插件，但是看其他人推荐过这款插件，就也向大家推荐一下吧，但是具体好用与否真的不得而知了，因为现在大部分 wordpress 用户都会选择一些比较“高大上”的主题，而这些主题往往自带这种功能，所以用处并不是很大。。这款插件的具体用法参见 <a href=\"https://saber.love/wordpress%e6%98%be%e7%a4%ba%e6%96%87%e7%ab%a0%e6%b5%8f%e8%a7%88%e6%ac%a1%e6%95%b0_%e6%9f%a5%e7%9c%8b%e6%ac%a1%e6%95%b0.html\" target=\"_blank\" rel=\"noopener\">WordPress显示文章浏览次数/查看次数</a></p>\n<h2 id=\"23-Disable-Google-Fonts\"><a href=\"#23-Disable-Google-Fonts\" class=\"headerlink\" title=\"23. Disable Google Fonts\"></a>23. Disable Google Fonts</h2><p>禁用 WordPress 上所有的谷歌字体，为什么要用这款插件呢，你懂得~</p>\n<h2 id=\"24-TinyMCE-Advanced\"><a href=\"#24-TinyMCE-Advanced\" class=\"headerlink\" title=\"24. TinyMCE Advanced\"></a>24. TinyMCE Advanced</h2><p>为 WordPress 自带编辑器 TinyMCE 提供进阶功能设置和选项。非常好用的一款插件，强烈推荐使用，不过我是在博客上线一年多以后才发现的，很难受啊。。</p>\n<h2 id=\"25-Yoast-SEO\"><a href=\"#25-Yoast-SEO\" class=\"headerlink\" title=\"25. Yoast SEO\"></a>25. Yoast SEO</h2><p>真正的多合一 WordPress SEO 插件，该插件会检测你的网站在SEO方面有哪些不足以及如何优化。不过可能广告比较多。推荐配合下面这款插件进行使用</p>\n<h2 id=\"26-Remove-Yoast-SEO-Comments\"><a href=\"#26-Remove-Yoast-SEO-Comments\" class=\"headerlink\" title=\"26. Remove Yoast SEO Comments\"></a>26. Remove Yoast SEO Comments</h2><p>移除 Yoast 的广告信息。功能就是如此的单一，就问你怕不怕</p>\n<h2 id=\"27-蜜蜂采集\"><a href=\"#27-蜜蜂采集\" class=\"headerlink\" title=\"27. 蜜蜂采集\"></a>27. 蜜蜂采集</h2><p>这是一个微信公众号文章导入插件，通过粘贴公众号文章链接即可实现一键导入公众号文章到自己的网站，并且支持<strong>批量导入</strong>、<strong>自动采集</strong>、<strong>设置特色图片</strong>等功能，减少繁琐的操作，<strong>支持知乎专栏文章、简书文章、今日头条导入</strong>等，不过免费版的有次数限制，介意的话就算了 - -</p>\n","raw":null,"categories":[{"name":"wordpress","path":"api/categories/wordpress.json"}],"tags":[{"name":"推荐","path":"api/tags/推荐.json"},{"name":"Wordpress","path":"api/tags/Wordpress.json"}]}]}