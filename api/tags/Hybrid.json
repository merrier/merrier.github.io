{"name":"Hybrid","postlist":[{"title":"Hybrid设计与浅析","slug":"Hybrid设计与浅析","date":"2017-12-01T14:19:00.000Z","updated":"2019-05-05T03:15:41.353Z","comments":true,"path":"api/articles/Hybrid设计与浅析.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_288.png","content":"<p>慕课网视频——<a href=\"https://www.imooc.com/learn/850\" target=\"_blank\" rel=\"noopener\">Hybrid设计</a>的学习笔记，同时加入了一些自己的理解，希望通过本篇文章能够让你理解什么是 Hybrid，以及 Hybrid 有什么特点，同时还会简单介绍一下 Hybrid 开发时的注意事项。</p>\n<h2 id=\"什么是-Hybrid\"><a href=\"#什么是-Hybrid\" class=\"headerlink\" title=\"什么是 Hybrid\"></a>什么是 Hybrid</h2><p>Hybrid 和普通前端代码没差别，只不过宿主不一样，Hybrid 就是在 app 中运行的前端代码。</p>\n<h2 id=\"业内的-Hybrid-App\"><a href=\"#业内的-Hybrid-App\" class=\"headerlink\" title=\"业内的 Hybrid App\"></a>业内的 Hybrid App</h2><ul>\n<li>携程</li>\n<li>百度糯米</li>\n<li>京东</li>\n<li>天猫</li>\n<li>微信</li>\n<li>QQ</li>\n<li>手机百度</li>\n<li>支付宝</li>\n</ul>\n<h3 id=\"一般地，APP-开发方式有以下几种方式：\"><a href=\"#一般地，APP-开发方式有以下几种方式：\" class=\"headerlink\" title=\"一般地，APP 开发方式有以下几种方式：\"></a>一般地，APP 开发方式有以下几种方式：</h3><ol>\n<li>Web App（浏览器网页）</li>\n<li>Native App（原生app）</li>\n<li>Hybrid App（ H5 混合app）</li>\n<li>超级Hybrid（React Native、Weex）</li>\n<li>微信/支付宝小程序（或内嵌页面）</li>\n</ol>\n<h2 id=\"Hybrid-相比-Native-和纯-Html5-的优缺点\"><a href=\"#Hybrid-相比-Native-和纯-Html5-的优缺点\" class=\"headerlink\" title=\"Hybrid 相比 Native 和纯 Html5 的优缺点\"></a>Hybrid 相比 Native 和纯 Html5 的优缺点</h2><div align=\"center\"><img src=\"/images/hexo_post_288.png\" alt=\"\"></div>\n\n<h2 id=\"Native-与-H5-的职责\"><a href=\"#Native-与-H5-的职责\" class=\"headerlink\" title=\"Native 与 H5 的职责\"></a>Native 与 H5 的职责</h2><ul>\n<li>H5 做业务</li>\n<li>Native 提供基础能力</li>\n<li>Native 做好必须 Native 做的业务</li>\n</ul>\n<h2 id=\"H5-与-Native-通信\"><a href=\"#H5-与-Native-通信\" class=\"headerlink\" title=\"H5 与 Native 通信\"></a>H5 与 Native 通信</h2><h3 id=\"JavascriptCore\"><a href=\"#JavascriptCore\" class=\"headerlink\" title=\"JavascriptCore\"></a>JavascriptCore</h3><p>和 JS Bridge 类似</p>\n<div align=\"center\"><img src=\"/images/hexo_post_104.png\" alt=\"\"></div>\n\n<h2 id=\"通过-URL-Schema-通信\"><a href=\"#通过-URL-Schema-通信\" class=\"headerlink\" title=\"通过 URL Schema 通信\"></a>通过 URL Schema 通信</h2><h3 id=\"App-主动与-H5-通信\"><a href=\"#App-主动与-H5-通信\" class=\"headerlink\" title=\"App 主动与 H5 通信\"></a>App 主动与 H5 通信</h3><div align=\"center\"><img src=\"/images/hexo_post_88.png\" alt=\"\"></div>\n\n<p>将一组 API 绑定在 webview 的 window 对象上，App 通过 iOS/Android 原生方法调用 window 对象中的 js 方法</p>\n<h3 id=\"H5-主动与-App-通信\"><a href=\"#H5-主动与-App-通信\" class=\"headerlink\" title=\"H5 主动与 App 通信\"></a>H5 主动与 App 通信</h3><div align=\"center\"><img src=\"/images/hexo_post_105.png\" alt=\"\"></div>\n\n<p>App 实现对 WebView URL 的观察者模式，H5 通过改变 URL 的哈希值，App 会通过解析哈希值的变化执行对应的操作</p>\n","raw":null,"categories":[{"name":"慕课网","path":"api/categories/慕课网.json"}],"tags":[{"name":"Hybrid","path":"api/tags/Hybrid.json"},{"name":"慕课网","path":"api/tags/慕课网.json"}]}]}