{"name":"Github","postlist":[{"title":"SSH connect to github fail解决方案","slug":"SSH connect to github fail解决方案","date":"2017-08-20T13:22:16.000Z","updated":"2019-07-04T08:09:14.549Z","comments":true,"path":"api/articles/SSH connect to github fail解决方案.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_280.png","content":"<p>来自于<a href=\"https://stackoverflow.com/questions/21488137/ssh-connect-to-github-fail\" target=\"_blank\" rel=\"noopener\">stackoverflow上的一个问题</a>，有位仁兄在命令行中输入了如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>然而报错了：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh: Could not resolve hostname github.com: nodename nor servname provided, or not known</span><br></pre></td></tr></table></figure>\n<p>其实，之前就有人碰到过 ssh fail 的问题，报错的原因是 <strong>DNS 服务器设置</strong>的问题，将 DNS 地址设置为 OpenDNS 或者 Google DNS 就可以了：</p>\n<blockquote>\n<p>OpenDNS 208.67.222.222 208.67.220.220 GoogleDNS 8.8.8.8 8.8.4.4</p>\n</blockquote>\n<p>下面就介绍一下在 Mac 中如何设置 DNS（来自文章<a href=\"http://www.howtogeek.com/howto/38793/how-to-switch-mac-os-x-to-use-opendns-or-google-dns/\" target=\"_blank\" rel=\"noopener\">How to Switch Mac OS X to Use OpenDNS or Google DNS</a>）：</p>\n<h2 id=\"首先，系统偏好设置-网络\"><a href=\"#首先，系统偏好设置-网络\" class=\"headerlink\" title=\"首先，系统偏好设置-网络\"></a>首先，系统偏好设置-网络</h2><div align=\"center\"><img src=\"/images/hexo_post_280.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"点击高级选项\"><a href=\"#点击高级选项\" class=\"headerlink\" title=\"点击高级选项\"></a>点击高级选项</h2><div align=\"center\"><img src=\"/images/hexo_post_281.png\" alt=\"\" width=\"400\"></div>\n\n\n<h2 id=\"DNS-添加按钮\"><a href=\"#DNS-添加按钮\" class=\"headerlink\" title=\"DNS-添加按钮\"></a>DNS-添加按钮</h2><div align=\"center\"><img src=\"/images/hexo_post_282.png\" alt=\"\" width=\"400\"></div>\n\n<p>设置为上面我们提到的 OpenDNS 或 GoogleDNS 地址中的一个就可以啦~</p>\n","raw":null,"categories":[{"name":"stackoverflow","path":"api/categories/stackoverflow.json"}],"tags":[{"name":"Github","path":"api/tags/Github.json"},{"name":"dns","path":"api/tags/dns.json"},{"name":"ssh","path":"api/tags/ssh.json"}]},{"title":"利用Github Pages搭建自己的个人博客","slug":"利用Github Pages搭建自己的个人博客","date":"2017-07-04T04:03:49.000Z","updated":"2019-07-04T08:09:14.549Z","comments":true,"path":"api/articles/利用Github Pages搭建自己的个人博客.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_242.png","content":"<p>这篇文章以我的亲身实验为基础，为大家讲解如何利用 Github Pages 搭建一个自己的个人博客，由于<a href=\"http://merrier.wang\">我的个人博客</a>已经拿 wordpress 搭建完成好久了，所以我就拿我 [github] (<a href=\"https://github.com/merrier/)中的另外一个项目作为试验，一步一步的截图引导大家将自己的\" target=\"_blank\" rel=\"noopener\">https://github.com/merrier/)中的另外一个项目作为试验，一步一步的截图引导大家将自己的</a> github 中的项目放到网上供其他人浏览，请注意，这都是免费的哦！不需要你购买域名和服务器，因为 github 帮你搞定了一切，最终实现的效果是下面这样的（可以看到，域名是 merrier.github.io，这是 github 为你提供的域名，\b该页面可以<a href=\"https://merrier.github.io/Magical-CSS/\" target=\"_blank\" rel=\"noopener\">点击这里</a>查看）：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_242.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ul>\n<li>你需要有一个 github 账号</li>\n<li>如果想看到效果的话，你需要一个有 README.md / index.html 的项目</li>\n</ul>\n<h2 id=\"好戏开场\"><a href=\"#好戏开场\" class=\"headerlink\" title=\"好戏开场\"></a>好戏开场</h2><h3 id=\"gh-pages-分支\"><a href=\"#gh-pages-分支\" class=\"headerlink\" title=\"gh-pages 分支\"></a>gh-pages 分支</h3><p>基于上面的准备工作，我认为你现在应该在自己的 github 中有了一个用来向他人展示的项目，然后进入自己的项目，切换到 gh-pages 分支，没有的话创建一个就可以了：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_243.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"Theme选择\"><a href=\"#Theme选择\" class=\"headerlink\" title=\"Theme选择\"></a>Theme选择</h3><p>然后点击上面的 Settings 按钮，向下找到 Github Pages 模块：</p>\n<div align=\"center\"><img src=\"images/hexo_post_244.png\" alt=\"\" width=\"400\"></div>\n\n<p>然后在这里你可以选择一个主题（点击 Change theme 按钮，然后你就可以跳转到选择主题的页面），这些主题都是 github 给你免费提供的，我选择的是下面这款蓝色的主题，效果就是文章开头截图那样的：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_245.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"Done\"><a href=\"#Done\" class=\"headerlink\" title=\"Done\"></a>Done</h3><p>选择完主题之后再回到刚才有 Github Pages 的页面，github 会提示你现在可以通过某个URL访问你的页面了，此时你通过 github 提示的 URL 进行访问的话，显示的就是你项目根目录的 README.md / index.html 文件中的内容，这样就完成了！是不是很 easy！：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_246.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><h3 id=\"现在已经不需要新建gh-pages分支了，任意分支都可以\"><a href=\"#现在已经不需要新建gh-pages分支了，任意分支都可以\" class=\"headerlink\" title=\"现在已经不需要新建gh-pages分支了，任意分支都可以\"></a>现在已经不需要新建gh-pages分支了，任意分支都可以</h3><ul>\n<li>在你选择完主题之后，github 会自动在你的项目根目录下创建一个 _config.yml 文件，内容大概是下面这个样子，合并代码时需要注意一下：</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">jekyll-theme-architect</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"在-Github-Pages-模块，你可以设置你自己的-custom-domain\"><a href=\"#在-Github-Pages-模块，你可以设置你自己的-custom-domain\" class=\"headerlink\" title=\"在 Github Pages 模块，你可以设置你自己的 custom domain\"></a>在 Github Pages 模块，你可以设置你自己的 custom domain</h3><p>比如设置成 <a href=\"http://www.example.com，此时别人就可以通过访问\" target=\"_blank\" rel=\"noopener\">www.example.com，此时别人就可以通过访问</a> <a href=\"http://www.example.com\" target=\"_blank\" rel=\"noopener\">www.example.com</a> 访问到你刚刚用 Github Pages 搭建的个人博客了</p>\n<h2 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h2><p><a href=\"http://www.pchou.info/ssgithubPage/2013-01-03-build-github-blog-page-01.html\" target=\"_blank\" rel=\"noopener\">一步步在GitHub上创建博客主页</a></p>\n","raw":null,"categories":[{"name":"git","path":"api/categories/git.json"}],"tags":[{"name":"Github","path":"api/tags/Github.json"}]}]}