{"name":"Hexo","postlist":[{"title":"Hexo中图片处理正确姿势","slug":"Hexo中图片处理正确姿势","date":"2019-01-11T07:12:56.000Z","updated":"2019-05-05T03:15:41.353Z","comments":true,"path":"api/articles/Hexo中图片处理正确姿势.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<h2 id=\"如何引用图片\"><a href=\"#如何引用图片\" class=\"headerlink\" title=\"如何引用图片\"></a>如何引用图片</h2><p>在写文章时，常常有插入图片的需求。Hexo 有多种图片插入方式，可以将图片存放在本地引用或者将图片放在 CDN 上进行引用。</p>\n<h3 id=\"本地引用-绝对路径\"><a href=\"#本地引用-绝对路径\" class=\"headerlink\" title=\"本地引用-绝对路径\"></a>本地引用-绝对路径</h3><p>这也是我目前采取的方式，我们可以将图片统一放在 <code>source/images</code> 文件夹中，通过 Markdown 语法访问它们:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![](/images/image_name.jpg)</span><br></pre></td></tr></table></figure>\n<p>然后渲染出来的话也是绝对路径：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/images/image.jpg\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"本地引用-相对路径\"><a href=\"#本地引用-相对路径\" class=\"headerlink\" title=\"本地引用-相对路径\"></a>本地引用-相对路径</h3><p>图片除了可以放在统一的 images 文件夹中，还可以放在文章自己的目录中。文章的目录可以通过配置 _config.yml 来生成:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># _config.yml</span></span><br><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>将 _config.yml 文件中的配置项 post_asset_folder 设为 true 后，执行命令 <code>$ hexo new post_name</code>，在 source/_posts 中会生成文章 post_name.md 和同名文件夹 post_name。将图片资源放在 post_name 中，文章就可以使用相对路径引用图片资源了。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![](image_name.jpg)</span><br></pre></td></tr></table></figure>\n<p>上述是 Markdown 的引用方式，图片只能在文章中显示，但无法在首页中正常显示。如果希望图片在文章和首页中同时显示，可以使用标签插件语法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img image_name.jpg This is an image %&#125;</span><br></pre></td></tr></table></figure>\n<p>当然，这种语法不太友好，所以有人写了一款插件：<a href=\"https://github.com/CodeFalling/hexo-asset-image\" target=\"_blank\" rel=\"noopener\">hexo-asset-image</a>，这款插件可以自动将图片地址替换为绝对路径，使用方法也很简单：</p>\n<ol>\n<li>首先确保 <code>post_asset_folder: true</code></li>\n<li>然后这样引用就可以了:</li>\n</ol>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">logo</span>](<span class=\"link\">logo.jpg</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"CDN-引用\"><a href=\"#CDN-引用\" class=\"headerlink\" title=\"CDN 引用\"></a>CDN 引用</h3><p>除了引用本地图片，还可以将图片上传到一些免费的 CDN 服务中。关于如何上传至 CDN 服务这一问题，google 上面有很多回答了，就不在这里展开了。</p>\n<h2 id=\"图片命名\"><a href=\"#图片命名\" class=\"headerlink\" title=\"图片命名\"></a>图片命名</h2><p>图片命名是一件很重要的事，因为如果命名不好，后期维护起来会比较麻烦；而我推荐的命名方式是 <code>hexo_{function}_{id}</code>，图片都放在 <code>source/images</code> 文件夹中：</p>\n<ul>\n<li>hexo_post_1: 表示这张图片被用在了文章中，1 是这张图片的id，依顺序递增</li>\n<li>hexo_thumbnail_1: 表示这张图片被用在了文章缩略图中，id 含义同上</li>\n<li>hexo_others_1: 表示这张图片既没有被用在文章中也不是文章缩略图，id 含义同上</li>\n</ul>\n<h2 id=\"Markdown-中插入图片\"><a href=\"#Markdown-中插入图片\" class=\"headerlink\" title=\"Markdown 中插入图片\"></a>Markdown 中插入图片</h2><p>如果想固定图片尺寸，可以插入 HTML 代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./xxx.png\"</span> <span class=\"attr\">width</span> = <span class=\"string\">\"300\"</span> <span class=\"attr\">height</span> = <span class=\"string\">\"200\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"图片名称\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>如果只需要居中的话只要在外面包围 div 标签即可：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>  <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span>&gt;</span></span>    </span><br><span class=\"line\">![<span class=\"string\">图片名称</span>](<span class=\"link\">./xxx.png</span>)</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>","raw":null,"categories":[{"name":"Hexo","path":"api/categories/Hexo.json"}],"tags":[{"name":"技巧","path":"api/tags/技巧.json"},{"name":"Hexo","path":"api/tags/Hexo.json"}]},{"title":"Hexo开发行动指南","slug":"Hexo开发行动指南","date":"2019-01-08T12:09:14.000Z","updated":"2019-05-05T03:15:41.353Z","comments":true,"path":"api/articles/Hexo开发行动指南.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<h2 id=\"Hexo-分类和标签的路径怎么设置成英文\"><a href=\"#Hexo-分类和标签的路径怎么设置成英文\" class=\"headerlink\" title=\"Hexo 分类和标签的路径怎么设置成英文\"></a>Hexo 分类和标签的路径怎么设置成英文</h2><p>参考：<a href=\"https://github.com/hexojs/hexo/issues/1162#issuecomment-88857896\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo/issues/1162#issuecomment-88857896</a></p>\n<h2 id=\"构建静态文件无法生成-index-html-等文件\"><a href=\"#构建静态文件无法生成-index-html-等文件\" class=\"headerlink\" title=\"构建静态文件无法生成 index.html 等文件\"></a>构建静态文件无法生成 index.html 等文件</h2><p>需要查看 <code>themes/{your-theme-document}</code> 目录下是否有主题相关内容，以及根目录下 <code>_config.yml</code> 中设置的主题和 <code>themes</code> 目录下的主题文件夹命名是否相同，如果无内容或者命名不同，都会有问题。</p>\n<blockquote>\n<p>在利用 Travis CI 进行部署的时候发现 <code>index.html</code> 是空的，后来发现还是因为主题目录下内容为空，后来就在 <code>themes</code> 文件夹下新建了一个文件夹，然后把主题相关文件都拷贝过去了，这样就解决了这个问题，而内容为空的原因还不了解。</p>\n</blockquote>\n<h2 id=\"disqus-报错-Cannot-read-property-‘appendChild’-of-null\"><a href=\"#disqus-报错-Cannot-read-property-‘appendChild’-of-null\" class=\"headerlink\" title=\"disqus 报错 Cannot read property ‘appendChild’ of null\"></a>disqus 报错 Cannot read property ‘appendChild’ of null</h2><p>很多 Hexo 主题中都会内置 Disqus 评论模块，但是有时候会发现评论模块没有加载出来，然后控制台报错 <code>Cannot read property &#39;appendChild&#39; of null</code>，经过排查发现，是因为有一个 div 并没有加载，需要在模板中加入以下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"disqus_thread\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">noscript</span>&gt;</span>Please enable JavaScript to view the <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"//disqus.com/?ref_noscript\"</span>&gt;</span>comments powered by Disqus.<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">noscript</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"gulp-报错-Task-function-must-be-specified\"><a href=\"#gulp-报错-Task-function-must-be-specified\" class=\"headerlink\" title=\"gulp 报错 Task function must be specified\"></a>gulp 报错 Task function must be specified</h2><p>有人遇到过同样的问题，提了一个 issue：<a href=\"https://github.com/gulpjs/undertaker/issues/54\" target=\"_blank\" rel=\"noopener\">Error - “Task function must be specified”</a>，看完之后发现最后的解决方案是将 gulp 回滚到 v3 。。回滚之后确实不报错了。。</p>\n<h2 id=\"添加-404-页面\"><a href=\"#添加-404-页面\" class=\"headerlink\" title=\"添加 404 页面\"></a>添加 404 页面</h2><p>可以选择添加纯页面或匹配主题的 404 页面：</p>\n<h3 id=\"纯页面\"><a href=\"#纯页面\" class=\"headerlink\" title=\"纯页面\"></a>纯页面</h3><p>与普通的 html 网页相同，放置在根目录（source/）下，同时文件命名为 404.html 即可；不过需要注意的是，要在文件顶部添加以下内容：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 404 Not Found</span><br><span class=\"line\">layout: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>添加以上内容后，下面的内容就是普通的 html 了，大家用的比较多的是腾讯 404 公益页面，添加以下代码即可：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>404<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span>                                                                                                                                        </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>     <span class=\"attr\">src</span>=<span class=\"string\">\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"</span> <span class=\"attr\">homePageName</span>=<span class=\"string\">\"返回首页\"</span> <span class=\"attr\">homePageUrl</span>=<span class=\"string\">\"https://merrier.wang\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>：需要把上面代码中的 homePageUrl 换成你自己的博客主页地址。</p>\n<h3 id=\"匹配主题的-404-页面\"><a href=\"#匹配主题的-404-页面\" class=\"headerlink\" title=\"匹配主题的 404 页面\"></a>匹配主题的 404 页面</h3><p>有时候我们可能不想展示单纯的 html 页面，想展示能够匹配当前使用主题的页面，下面介绍一下操作流程：</p>\n<p>首先，新建一个页面：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page 404</span><br></pre></td></tr></table></figure>\n<p>然后，进入刚新建的页面文件，路径一般为 <code>/source/404/index.md</code>；在顶部插入一行，写上 <code>permalink: /404</code>，这表示指定该页固定链接为 <code>http://&quot;主页&quot;/404.html</code>：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 404 Not Found</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">permalink: /404</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>经过上面的设置后，404 界面已生效，其编辑方式与一般文章无异。我们可以在 .md 文件正文中插入一些 CSS 样式，使得该页面与博客中的一般文章有所区别。</p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"http://www.ly554.com/hexosls.html\" target=\"_blank\" rel=\"noopener\">Hexo博客设置404页面</a></li>\n<li><a href=\"https://blog.csdn.net/liu1340308350/article/details/81744824\" target=\"_blank\" rel=\"noopener\">hexo添加404公益界面</a></li>\n<li><a href=\"http://moxfive.xyz/2015/10/16/hexo-404-page/\" target=\"_blank\" rel=\"noopener\">在 Hexo 中创建匹配主题的404页面</a></li>\n</ul>\n<h2 id=\"运行-hexo-g-出错\"><a href=\"#运行-hexo-g-出错\" class=\"headerlink\" title=\"运行 hexo g 出错\"></a>运行 <code>hexo g</code> 出错</h2><p>报错为以下所示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class=\"line\">TypeError: Cannot set property &apos;lastIndex&apos; of undefined</span><br><span class=\"line\">    at highlight (/home/travis/build/merrier/merrier.github.io/node_modules/highlight.js/lib/highlight.js:523:35)</span><br><span class=\"line\">    at /home/travis/build/merrier/merrier.github.io/node_modules/highlight.js/lib/highlight.js:573:21</span><br></pre></td></tr></table></figure>\n<p>从上面的错误栈可以看到应该是 <code>highlight.js</code> 报的错，后来我在 hexo 的 issue 中找到了解决方案：<a href=\"https://github.com/hexojs/hexo/issues/1913#issuecomment-245480139\" target=\"_blank\" rel=\"noopener\">_config.yml中auto_detect设为false</a></p>\n<h2 id=\"Template-render-error-unknown-path\"><a href=\"#Template-render-error-unknown-path\" class=\"headerlink\" title=\"Template render error: (unknown path)\"></a>Template render error: (unknown path)</h2><p>执行 <code>hexo s</code> 时报上面的错，在 <a href=\"https://github.com/hexojs/hexo/issues/2384#issuecomment-277494121\" target=\"_blank\" rel=\"noopener\">hexo 的 github issue</a> 中找到了解决方案（尝试一下全局搜索）</p>\n<h2 id=\"当文章中出现-Nunjucks-中的语法符号时无法生成网页\"><a href=\"#当文章中出现-Nunjucks-中的语法符号时无法生成网页\" class=\"headerlink\" title=\"当文章中出现 Nunjucks 中的语法符号时无法生成网页\"></a>当文章中出现 Nunjucks 中的语法符号时无法生成网页</h2><p>参考：<a href=\"http://www.one-more-tech.info/hexo-%E4%B8%AD%7B%7Bcontent%7D%7D-%E5%AF%BC%E8%87%B4%E6%96%87%E7%AB%A0%E5%86%85%E5%AE%B9%E5%BC%82%E5%B8%B8/index/\" target=\"_blank\" rel=\"noopener\">http://www.one-more-tech.info/hexo-%E4%B8%AD%7B%7Bcontent%7D%7D-%E5%AF%BC%E8%87%B4%E6%96%87%E7%AB%A0%E5%86%85%E5%AE%B9%E5%BC%82%E5%B8%B8/index/</a> 和 <a href=\"https://hoxis.github.io/hexo-unexpected-token.html\" target=\"_blank\" rel=\"noopener\">https://hoxis.github.io/hexo-unexpected-token.html</a></p>\n<h2 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h2><ul>\n<li><a href=\"https://github.com/EasyHexo/Easy-Hexo\" target=\"_blank\" rel=\"noopener\">Easy Hexo | 轻松使用 Hexo 建站</a></li>\n<li><a href=\"http://muyunyun.cn/posts/f55182c5/\" target=\"_blank\" rel=\"noopener\">hexo 摸爬滚打之进阶教程</a></li>\n<li><a href=\"https://juejin.im/entry/5a9144896fb9a063523e0e97\" target=\"_blank\" rel=\"noopener\">hexo搭建博客最全攻略</a></li>\n<li><a href=\"https://wizardforcel.gitbooks.io/markdown-simple-world/hexo-tutor-1.html\" target=\"_blank\" rel=\"noopener\">Hexo 入门指南</a></li>\n<li><a href=\"https://blog.csdn.net/yanzi1225627/article/details/77761488\" target=\"_blank\" rel=\"noopener\">hexo链接持久化终极解决之道</a></li>\n<li><a href=\"https://www.m690.com/archives/1135/\" target=\"_blank\" rel=\"noopener\">实战–迁移wordpress 到hexo</a></li>\n<li><a href=\"http://coderunthings.com/2017/08/20/howhexoworks/\" target=\"_blank\" rel=\"noopener\">hexo是怎么工作的</a></li>\n<li><a href=\"http://hunao.info/2016/06/01/Hexo-Seo%E4%BC%98%E5%8C%96%E8%AE%A9%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%9C%A8google%E6%90%9C%E7%B4%A2%E6%8E%92%E5%90%8D%E7%AC%AC%E4%B8%80/\" target=\"_blank\" rel=\"noopener\">Hexo Seo优化让你的博客在google搜索排名第一</a></li>\n</ul>\n","raw":null,"categories":[{"name":"Hexo","path":"api/categories/Hexo.json"}],"tags":[{"name":"指南","path":"api/tags/指南.json"},{"name":"Hexo","path":"api/tags/Hexo.json"}]},{"title":"Hexo插件推荐","slug":"Hexo插件推荐","date":"2019-02-04T10:35:04.000Z","updated":"2019-05-05T03:15:41.353Z","comments":true,"path":"api/articles/Hexo插件推荐.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>Hexo 本身的设计理念就是“插件化”，因此推荐一些非常实用的 Hexo 插件，有官方出的也有其他开发者推出的，不妨一试</p>\n<h2 id=\"hexo-tag-aplayer\"><a href=\"#hexo-tag-aplayer\" class=\"headerlink\" title=\"hexo-tag-aplayer\"></a>hexo-tag-aplayer</h2><p>Github地址：<a href=\"https://github.com/MoePlayer/hexo-tag-aplayer\" target=\"_blank\" rel=\"noopener\">https://github.com/MoePlayer/hexo-tag-aplayer</a></p>\n<p>在 hexo 的文章和页面中插入特定风格的音乐播放器，支持多种配置项</p>\n<h2 id=\"hexo-blog-encrypt\"><a href=\"#hexo-blog-encrypt\" class=\"headerlink\" title=\"hexo-blog-encrypt\"></a>hexo-blog-encrypt</h2><p>Github 地址：<a href=\"https://github.com/MikeCoder/hexo-blog-encrypt\" target=\"_blank\" rel=\"noopener\">https://github.com/MikeCoder/hexo-blog-encrypt</a></p>\n<p>给文章加密，不过密码需要写在配置文件中，如果你把配置文件提交到 Github 上的话，可能就和没加密一样了。。</p>\n<h2 id=\"hexo-generator-feed\"><a href=\"#hexo-generator-feed\" class=\"headerlink\" title=\"hexo-generator-feed\"></a>hexo-generator-feed</h2><p>Github 地址: <a href=\"https://github.com/hexojs/hexo-generator-feed\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo-generator-feed</a></p>\n<p>官方出的生成 RSS 文件的包，具体用法参见：<a href=\"https://segmentfault.com/a/1190000012647294\" target=\"_blank\" rel=\"noopener\">为hexo博客添加RSS订阅功能</a></p>\n<h2 id=\"hexo-generator-sitemap\"><a href=\"#hexo-generator-sitemap\" class=\"headerlink\" title=\"hexo-generator-sitemap\"></a>hexo-generator-sitemap</h2><p>Github 地址: <a href=\"https://github.com/hexojs/hexo-generator-sitemap\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo-generator-sitemap</a></p>\n<p>官方出的生成 sitemap 文件的包，生成之后就可以提交给搜索引擎进行检索了，对于 SEO 很有帮助</p>\n<h2 id=\"hexo-generator-baidu-sitemap\"><a href=\"#hexo-generator-baidu-sitemap\" class=\"headerlink\" title=\"hexo-generator-baidu-sitemap\"></a>hexo-generator-baidu-sitemap</h2><p>Github 地址: <a href=\"https://github.com/coneycode/hexo-generator-baidu-sitemap\" target=\"_blank\" rel=\"noopener\">https://github.com/coneycode/hexo-generator-baidu-sitemap</a></p>\n<p>生成提交给百度用的 sitemap 文件</p>\n<h2 id=\"hexo-asset-image\"><a href=\"#hexo-asset-image\" class=\"headerlink\" title=\"hexo-asset-image\"></a>hexo-asset-image</h2><p>Github 地址: <a href=\"https://github.com/CodeFalling/hexo-asset-image\" target=\"_blank\" rel=\"noopener\">https://github.com/CodeFalling/hexo-asset-image</a></p>\n<p>用于解决 Markdown 中插入图片问题，关于 Hexo 中插入图片的正确方法，可以参考我的另一篇文章：<a href=\"/20190111/image-skills-in-hexo.html\">Hexo中图片处理正确姿势</a></p>\n<h2 id=\"hexo-generator-json-content\"><a href=\"#hexo-generator-json-content\" class=\"headerlink\" title=\"hexo-generator-json-content\"></a>hexo-generator-json-content</h2><p>Github 地址: <a href=\"https://github.com/alexbruno/hexo-generator-json-content\" target=\"_blank\" rel=\"noopener\">https://github.com/alexbruno/hexo-generator-json-content</a></p>\n<p>很方便的添加站内搜索功能</p>\n<h2 id=\"hexo-generator-restful\"><a href=\"#hexo-generator-restful\" class=\"headerlink\" title=\"hexo-generator-restful\"></a>hexo-generator-restful</h2><p>Github 地址：<a href=\"https://github.com/yscoder/hexo-generator-restful\" target=\"_blank\" rel=\"noopener\">https://github.com/yscoder/hexo-generator-restful</a></p>\n<p>生成 restful 风格的 json 数据，可以当作 api 接口，开始构建一个 SPA 应用吧。</p>\n","raw":null,"categories":[{"name":"Hexo","path":"api/categories/Hexo.json"}],"tags":[{"name":"推荐","path":"api/tags/推荐.json"},{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"插件","path":"api/tags/插件.json"}]},{"title":"Wordpress迁移至Hexo教程","slug":"Wordpress迁移至Hexo教程","date":"2019-01-20T02:23:16.000Z","updated":"2019-05-05T03:15:41.357Z","comments":true,"path":"api/articles/Wordpress迁移至Hexo教程.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>我的个人博客一开始是用 Wordpress 搭建的，其实当初选择 Wordpress 也是经过了比较久的调研，不过后来发现 Wordpress 并不适合我，所以就花了一点时间迁移到了 Hexo，迁移过程积累了一些经验，也遇到了一些坑，这里记录一下：</p>\n<h2 id=\"迁移步骤\"><a href=\"#迁移步骤\" class=\"headerlink\" title=\"迁移步骤\"></a>迁移步骤</h2><h3 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h3><p>安装 Hexo 很简单，只需要：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br><span class=\"line\">hexo init &lt;blog_dir&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注：如果安装速度比较慢，可以尝试淘宝镜像，具体请自行搜索</p>\n</blockquote>\n<h3 id=\"导出-Wordpress-文章\"><a href=\"#导出-Wordpress-文章\" class=\"headerlink\" title=\"导出 Wordpress 文章\"></a>导出 Wordpress 文章</h3><p>这一步也很简单，直接访问 Wordpress 的<code>后台-工具-导出</code>，导出的 <code>.xml</code> 文件包括文章、页面、评论、自定义栏目、分类和标签等数据</p>\n<h3 id=\"导入文章至-Hexo\"><a href=\"#导入文章至-Hexo\" class=\"headerlink\" title=\"导入文章至 Hexo\"></a>导入文章至 Hexo</h3><p>这一步其实也很简单。。首先，安装迁移的插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> &lt;blog_dir&gt;</span><br><span class=\"line\">npm i hexo-migrator-wordpress --save</span><br></pre></td></tr></table></figure>\n<p>插件安装完成后，执行下列命令来迁移所有文章。<code>source</code> 可以是 WordPress 导出的文件路径或网址。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo migrate wordpress &lt;<span class=\"built_in\">source</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>这个插件只能做到一些基础的迁移，迁移之后还需要再进行一些修正：</p>\n<h2 id=\"需要进行的修改\"><a href=\"#需要进行的修改\" class=\"headerlink\" title=\"需要进行的修改\"></a>需要进行的修改</h2><h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><p>迁移之后的 Markdown 文件中的代码块是不会自动加上 ``` 的，所以需要手动修正；其实也可以通过脚本进行修正，但是很难判断代码块所属语言类型，同时还需要二次确认，这样的话反而还不如逐篇文章进行修正。</p>\n<p>除此之外，迁移之后的代码块中可能会出现很多错误的转义符，多表现为：</p>\n<ul>\n<li><code>_</code> 变成了 <code>\\_</code></li>\n<li><code>&lt;</code> 变成了 <code>\\&lt;</code></li>\n<li><code>&gt;</code> 变成了 <code>\\&gt;</code></li>\n<li><code>[</code> 变成了 <code>\\[</code></li>\n<li><code>]</code> 变成了 <code>\\]</code></li>\n</ul>\n<p>其实还会有其他情况，就不一一列举了，所以在迁移之后我们需要手动进行修复，最好不要直接暴力地全局替换，因为有时候转义符还是需要的，我们只需要替换代码块中出现的即可。</p>\n<h3 id=\"categories-字段\"><a href=\"#categories-字段\" class=\"headerlink\" title=\"categories 字段\"></a>categories 字段</h3><p>如果您有过使用 WordPress 的经验，就很容易误解 Hexo 的分类方式。WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是 Hexo 不支持指定多个同级分类。下面的指定方法：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">Diary</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">Life</span></span><br></pre></td></tr></table></figure>\n<p>会使分类Life成为Diary的子分类，而不是并列分类。因此，迁移之后需要对 categories 字段进行筛选，否则会出现分类过多的问题。</p>\n<p>Hexo官方文档：<a href=\"https://hexo.io/zh-cn/docs/front-matter#%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE\" target=\"_blank\" rel=\"noopener\">分类方法的分歧</a></p>\n<h3 id=\"站内链接\"><a href=\"#站内链接\" class=\"headerlink\" title=\"站内链接\"></a>站内链接</h3><p>wordpress 的 URL 命名规则和 Hexo 不一致，所以在迁移之后我们需要对 Markdown 中的站内网页链接进行修正替换；我也没想到什么好的方案，只能手动修正了。</p>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><p>在用 wordpress 的时候，表格用了 TablePress 插件，迁移之后在 Markdown 中就无法展示了，不过 TablePress 提供了导出为 CSV 文件的功能，导出后我们可以借助一些在线工具（推荐一个：<a href=\"https://donatstudios.com/CsvToMarkdownTable\" target=\"_blank\" rel=\"noopener\">https://donatstudios.com/CsvToMarkdownTable</a>）将其转换成 Markdown 格式的表格。</p>\n<h2 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h2><ul>\n<li><a href=\"https://wangheng.org/migrating-from-wordpress-to-hexo.html\" target=\"_blank\" rel=\"noopener\">从wordpress迁移到hexo填坑</a></li>\n<li><a href=\"https://www.m690.com/archives/1135/\" target=\"_blank\" rel=\"noopener\">实战–迁移wordpress 到hexo</a></li>\n</ul>\n","raw":null,"categories":[{"name":"Hexo","path":"api/categories/Hexo.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"Wordpress","path":"api/tags/Wordpress.json"}]}]}