{"name":"summary","postlist":[{"title":"一些常用邮箱的IMAP&SMTP&POP3地址","slug":"一些常用邮箱的IMAP&SMTP&POP3地址","date":"2017-04-20T02:05:49.000Z","updated":"2019-03-02T06:40:00.866Z","comments":true,"path":"api/articles/一些常用邮箱的IMAP&SMTP&POP3地址.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>我们在客户端设置邮箱或者使用 PHPMailer 发送邮件的时候，我们都会去查找这些邮箱的 IMAP / SMTP / POP3 地址，这里列出了一些常用邮箱的这些地址，方便自己和大家以后设置邮箱时候使用。</p>\n<h2 id=\"Gmail\"><a href=\"#Gmail\" class=\"headerlink\" title=\"Gmail\"></a>Gmail</h2><p>Gmail 的 IMAP / SMTP / POP3 协议默认都是开启，它的详细地址如下：</p>\n<table>\n<thead>\n<tr>\n<th>服务器名称</th>\n<th>服务器地址</th>\n<th>SSL协议端口</th>\n<th>非SSL协议端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IMAP</td>\n<td>imap.gmail.com</td>\n<td>993</td>\n<td>/</td>\n</tr>\n<tr>\n<td>SMTP</td>\n<td>smtp.gmail.com</td>\n<td>465</td>\n<td>/</td>\n</tr>\n<tr>\n<td>POP3</td>\n<td>pop.gmail.com</td>\n<td>995</td>\n<td>/</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"QQ邮箱\"><a href=\"#QQ邮箱\" class=\"headerlink\" title=\"QQ邮箱\"></a>QQ邮箱</h2><p>QQ邮箱的 IMAP / SMTP / POP3 协议默认是不开启的，你需要登陆到 QQ邮箱，然后到“设置” &gt; “账户” 将其开启。</p>\n<table>\n<thead>\n<tr>\n<th>服务器名称</th>\n<th>服务器地址</th>\n<th>SSL协议端口</th>\n<th>非SSL协议端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IMAP</td>\n<td>imap.qq.com</td>\n<td>993</td>\n<td>143</td>\n</tr>\n<tr>\n<td>SMTP</td>\n<td>smtp.qq.com</td>\n<td>465或587</td>\n<td>25</td>\n</tr>\n<tr>\n<td>POP3</td>\n<td>pop.qq.com</td>\n<td>995</td>\n<td>110</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"163-邮箱\"><a href=\"#163-邮箱\" class=\"headerlink\" title=\"163 邮箱\"></a>163 邮箱</h2><table>\n<thead>\n<tr>\n<th>服务器名称</th>\n<th>服务器地址</th>\n<th>SSL协议端口</th>\n<th>非SSL协议端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IMAP</td>\n<td>imap.163.com</td>\n<td>993</td>\n<td>143</td>\n</tr>\n<tr>\n<td>SMTP</td>\n<td>smtp.163.com</td>\n<td>465或994</td>\n<td>25</td>\n</tr>\n<tr>\n<td>POP3</td>\n<td>pop.163.com</td>\n<td>995</td>\n<td>110</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"阿里云邮箱\"><a href=\"#阿里云邮箱\" class=\"headerlink\" title=\"阿里云邮箱\"></a>阿里云邮箱</h2><table>\n<thead>\n<tr>\n<th>服务器名称</th>\n<th>服务器地址</th>\n<th>SSL协议端口</th>\n<th>非SSL协议端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>POP3</td>\n<td>pop3.aliyun.com</td>\n<td>110</td>\n<td>995</td>\n</tr>\n<tr>\n<td>SMTP</td>\n<td>smtp.aliyun.com</td>\n<td>25</td>\n<td>465</td>\n</tr>\n<tr>\n<td>IMAP</td>\n<td>imap.aliyun.com</td>\n<td>143</td>\n<td>993</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"139邮箱\"><a href=\"#139邮箱\" class=\"headerlink\" title=\"139邮箱\"></a>139邮箱</h2><table>\n<thead>\n<tr>\n<th>服务器名称</th>\n<th>服务器地址</th>\n<th>SSL协议端口</th>\n<th>非SSL协议端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IMAP</td>\n<td>imap.10086.cn</td>\n<td>143</td>\n<td>/</td>\n</tr>\n<tr>\n<td>POP3</td>\n<td>pop.10086.cn</td>\n<td>110</td>\n<td>995</td>\n</tr>\n<tr>\n<td>SMTP</td>\n<td>smtp.10086.cn</td>\n<td>25</td>\n<td>465</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"sina邮箱\"><a href=\"#sina邮箱\" class=\"headerlink\" title=\"sina邮箱\"></a>sina邮箱</h2><table>\n<thead>\n<tr>\n<th>服务器名称</th>\n<th>服务器地址</th>\n<th>SSL协议端口</th>\n<th>非SSL协议端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IMAP</td>\n<td>imap.sina.com</td>\n<td>143</td>\n<td>993</td>\n</tr>\n<tr>\n<td>SMTP</td>\n<td>smtp.sina.com</td>\n<td>25</td>\n<td>/</td>\n</tr>\n<tr>\n<td>POP3</td>\n<td>pop.sina.com</td>\n<td>110</td>\n<td>/</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h2><ul>\n<li><a href=\"http://www.cnblogs.com/shangdawei/p/4305989.html\" target=\"_blank\" rel=\"noopener\">常用邮箱的 IMAP/POP3/SMTP 设置</a></li>\n</ul>\n","raw":null,"categories":[{"name":"summary","path":"api/categories/summary.json"}],"tags":[{"name":"SMTP","path":"api/tags/SMTP.json"},{"name":"邮箱地址","path":"api/tags/邮箱地址.json"}]},{"title":"关于CSS Reset那些事","slug":"关于CSS Reset那些事","date":"2017-07-30T12:47:49.000Z","updated":"2019-03-02T06:40:00.870Z","comments":true,"path":"api/articles/关于CSS Reset那些事.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<h2 id=\"CSS-Reset\"><a href=\"#CSS-Reset\" class=\"headerlink\" title=\"CSS Reset\"></a>CSS Reset</h2><p>css reset，顾名思义，就是<strong>重置样式</strong>。那么为什么我们需要重置样式呢，这一切还要“归功于”前端领域的特点，就是跨平台、跨客户端；众所周知，现在所使用的主流浏览器对于一些标签的默认属性并没有做到统一，所以我们有时候会发现，某个页面在 chrome 浏览器上样式表现很正常，但是到了 firefox 上面却有着其他的样式表现（就更不用提IE了），这就是经常提到的“<strong>兼容性问题</strong>”，而 css reset 就是解决默认样式不兼容问题的办法之一</p>\n<h2 id=\"CSS-Reset发展历程\"><a href=\"#CSS-Reset发展历程\" class=\"headerlink\" title=\"CSS Reset发展历程\"></a>CSS Reset发展历程</h2><h3 id=\"第一份\"><a href=\"#第一份\" class=\"headerlink\" title=\"第一份\"></a>第一份</h3><p>查阅了一些资料，也看了一些大牛的博客，目前比较一致地认为最早的一份 CSS reset 来自<a href=\"http://tantek.com/log/2004/undohtml.css\" target=\"_blank\" rel=\"noopener\">Tantek 的 undohtml.css</a>，时间应该是 2004 年，很简单的代码（注释都比代码多），Tantek 根据自己的需要，对浏览器的默认样式进行了一些重置，同时从这一份 CSS reset 也可以窥探出“重置样式”需要考虑的标签有哪些。</p>\n<h3 id=\"YUI-团队\"><a href=\"#YUI-团队\" class=\"headerlink\" title=\"YUI 团队\"></a>YUI 团队</h3><p>业界领袖 YUI 团队在 Tantek 的基础上将 css reset 变得更加充实，当然代码的核心部分仍然是对样式进行重置，可以直接<a href=\"http://yui.yahooapis.com/3.18.1/build/cssreset-context/cssreset-context-min.css\" target=\"_blank\" rel=\"noopener\">点击这里</a>查看，YUI 团队 2014 年给出的 css reset 代码（随着 Yahoo 光荣不再，估计这份 css reset 的版本也会停留在 3.18.1 了吧），从代码中可以看出我们如果想引用这套 css reset，还需要加一个 yui3-cssreset 类，或者修改其源码，将 .yui3-cssreset 全部删掉。YUI 不仅支持 css reset，还配套了 cssfonts.css 和 cssbase.css。<code>cssreset.css</code> 只负责清除默认样式,而 <code>cssfonts.css</code> 和 <code>cssbase.css</code> 则负责将一些元素的默认样式再重设回来</p>\n<h3 id=\"Eric-Meyer\"><a href=\"#Eric-Meyer\" class=\"headerlink\" title=\"Eric Meyer\"></a>Eric Meyer</h3><p>相比 YUI 团队的 css reset 方案，<a href=\"http://meyerweb.com/eric/tools/css/reset/index.html\" target=\"_blank\" rel=\"noopener\">Eric Meyer 的方案</a>就显得有些繁重了，而且这套代码最新版本是 2011 年公开的，考虑到年代久远，就不予评论了。</p>\n<h3 id=\"html5reset\"><a href=\"#html5reset\" class=\"headerlink\" title=\"html5reset\"></a>html5reset</h3><p>相比前面的这些方案，<a href=\"https://github.com/murtaugh/HTML5-Reset\" target=\"_blank\" rel=\"noopener\">这个团队</a>给出的方案就更显臃肿了，而且也不太出名，当然了，css reset 并不是用来全盘照搬的，找到自己需要的才是最聪明的办法</p>\n<h2 id=\"国产-CSS-reset\"><a href=\"#国产-CSS-reset\" class=\"headerlink\" title=\"国产 CSS reset\"></a>国产 CSS reset</h2><p>以上都是国外的大牛或团队给出的 css reset 方案，那么作为互联网行业发展最突飞猛进的中国，就没有人或团队做过 css reset 方面的尝试吗？肯定有啊（要不然我这一部分怎么写？）：</p>\n<h3 id=\"阿里-Kissy-框架\"><a href=\"#阿里-Kissy-框架\" class=\"headerlink\" title=\"阿里 Kissy 框架\"></a>阿里 Kissy 框架</h3><p>阿里在 2009 年就已经给出了自己的 css reset 方案，这应该是国内的第一份 css reset，是玉伯和另外一位前辈完成的，向他们致敬。但是由于距离现在已经有将近十年了，源码的链接已经失效，我将各种版本的 css reset 代码都上传到了我的 github，可以<a href=\"http://merrier.github.io/CSS-Reset/kissy/reset.css\" target=\"_blank\" rel=\"noopener\">点击这里</a>查看国内第一份 css reset。</p>\n<h3 id=\"张鑫旭的方案\"><a href=\"#张鑫旭的方案\" class=\"headerlink\" title=\"张鑫旭的方案\"></a>张鑫旭的方案</h3><p>我不希望你看到这个标题的第一感觉是：<a href=\"http://www.zhangxinxu.com\" target=\"_blank\" rel=\"noopener\">张鑫旭</a>是谁。因为如果你连张鑫旭都不认识，前端界真是白混了！作为一位资深 css 研究学者，张鑫旭对于 css reset 也有自己独到的理解，下面就是他给出的方案：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>:<span class=\"number\">1.4</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"number\">#333</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>:arial;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">input</span>,<span class=\"selector-tag\">textarea</span>,<span class=\"selector-tag\">select</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>:<span class=\"number\">100%</span>;    </span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>:inherit;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">body</span>,<span class=\"selector-tag\">h1</span>,<span class=\"selector-tag\">h2</span>,<span class=\"selector-tag\">h3</span>,<span class=\"selector-tag\">h4</span>,<span class=\"selector-tag\">h5</span>,<span class=\"selector-tag\">h6</span>,<span class=\"selector-tag\">p</span>,<span class=\"selector-tag\">ul</span>,<span class=\"selector-tag\">ol</span>,<span class=\"selector-tag\">form</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h4</span>,<span class=\"selector-tag\">h5</span>,<span class=\"selector-tag\">h6</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>:<span class=\"number\">1em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>,<span class=\"selector-tag\">ol</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding-left</span>:<span class=\"number\">0</span>; </span><br><span class=\"line\">    <span class=\"attribute\">list-style-type</span>:none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/\\*image with no-border\\*/</span><br><span class=\"line\"><span class=\"selector-tag\">img</span>&#123;<span class=\"attribute\">border</span>:<span class=\"number\">0</span>;&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到，非常的简短，当然了，对于这份方案，张鑫旭在<a href=\"http://www.zhangxinxu.com/wordpress/2010/07/%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E5%AF%B9%E7%BD%91%E7%AB%99css%E8%BF%9B%E8%A1%8C%E6%9E%B6%E6%9E%84%E7%9A%84/\" target=\"_blank\" rel=\"noopener\">他的文章</a>中也进行了解释</p>\n<h2 id=\"替代品-Normalize-css\"><a href=\"#替代品-Normalize-css\" class=\"headerlink\" title=\"替代品 Normalize.css\"></a>替代品 Normalize.css</h2><p>历史的车轮滚滚向前，时过境迁，中国的前端职位越发的火热，开发者们也变得更为专业，<code>CSS Reset</code> 泛滥使用逐渐淡出的前端的视野，被取而代之就是 <a href=\"https://github.com/necolas/normalize.css\" target=\"_blank\" rel=\"noopener\"><code>Normalize.css</code></a>，关于对 <code>CSS Reset</code> 与 <code>Normalize.css</code> 的区别？可以引用知乎上<a href=\"http://www.zhihu.com/question/20094066\" target=\"_blank\" rel=\"noopener\">张小核桃</a>的一个回答：</p>\n<blockquote>\n<p>CSS Reset 是革命党，CSS Reset 里最激进那一派提倡不管你小子有用没用，通通给我脱了那身衣服，凭什么你 body 出生就穿一圈 margin，凭什么你姓 h 的比别人吃得胖，凭什么你 ul 戴一胳膊珠子。于是 *{margin:0;} 等等运动，把人家全拍扁了。看似是众生平等了，实则是浪费了资源又占不到便宜，有求于人家的时候还得贱贱地给加回去，实在需要人家的默认样式了怎么办？人家锅都扔炉子里烧了，自己看着办吧。</p>\n</blockquote>\n<p>所以，normalize.css 的产生是有一定历史原因的（css reset 的滥用），normalize.css 是<a href=\"https://twitter.com/necolas\" target=\"_blank\" rel=\"noopener\">@necolas</a>和<a href=\"https://twitter.com/jon_neal\" target=\"_blank\" rel=\"noopener\">@jon_neal</a> 两位大牛花了几百个小时来研究不同浏览器的默认样式的差异而得出的结晶，感谢前辈们的贡献。 关于 normalize.css 的更多内容，就不在本篇文章里过多赘述了，因为它不是主角啊！有兴趣的童鞋可以点击下面的链接查看：</p>\n<ul>\n<li><a href=\"https://github.com/necolas/normalize.css/\" target=\"_blank\" rel=\"noopener\">Github</a></li>\n<li><a href=\"http://nicolasgallagher.com/about-normalize-css/\" target=\"_blank\" rel=\"noopener\">官方介绍</a></li>\n<li><a href=\"http://jerryzou.com/posts/aboutNormalizeCss/\" target=\"_blank\" rel=\"noopener\">官方介绍（中文）</a></li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>最后引用张鑫旭文章中的一段话作为结束：</p>\n<blockquote>\n<p>武侠的最高境界是什么？ – 无招胜有招 设计的最高境界是什么？ – 减少设计 所以，最少的 CSS 代码，最少的渲染，最少的重置就是最好的CSS样式代码，这反应了您的 CSS 层次。说句不好听的话，CSS reset 是用来让那些 CSS 菜鸟，对 CSS 不太了解的人准备的。</p>\n</blockquote>\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://segmentfault.com/a/1190000003021766\" target=\"_blank\" rel=\"noopener\">关于CSS Reset 那些事（一）之 历史演变与Normalize.css</a></li>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/2010/07/%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E5%AF%B9%E7%BD%91%E7%AB%99css%E8%BF%9B%E8%A1%8C%E6%9E%B6%E6%9E%84%E7%9A%84/\" target=\"_blank\" rel=\"noopener\">我是如何对网站CSS进行架构的</a></li>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/2010/04/css-reset%E7%9A%84%E9%87%8D%E6%96%B0%E5%AE%A1%E8%A7%86-%E9%81%BF%E5%85%8D%E6%A0%B7%E5%BC%8F%E9%87%8D%E7%BD%AE/\" target=\"_blank\" rel=\"noopener\">CSS reset的重新审视 – 避免样式重置</a></li>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/2010/08/html5-css-reset/\" target=\"_blank\" rel=\"noopener\">HTML5 css reset</a></li>\n<li><a href=\"http://www.jianshu.com/p/69ba47248774\" target=\"_blank\" rel=\"noopener\">CSS:认识 css reset</a></li>\n</ul>\n","raw":null,"categories":[{"name":"summary","path":"api/categories/summary.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"},{"name":"性能优化","path":"api/tags/性能优化.json"}]},{"title":"前端优秀插件推荐","slug":"前端优秀插件推荐","date":"2017-03-15T12:36:38.000Z","updated":"2019-03-02T06:40:00.870Z","comments":true,"path":"api/articles/前端优秀插件推荐.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>这里集中了一些我在项目中或平常看到听到的好的插件，话不多说，直接干货：</p>\n<table>\n<thead>\n<tr>\n<th>插件名称</th>\n<th>描述</th>\n<th>地址</th>\n<th>备注</th>\n<th>依赖</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>turn.js</td>\n<td>能够将HTML内容组织成看起来像一本真正的书籍或杂志，用到HTML5的所有优点</td>\n<td><a href=\"https://github.com/blasten/turn.js\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://www.turnjs.com/\" target=\"_blank\" rel=\"noopener\">官网</a></td>\n<td>可以工作在旧浏览器中比如：IE 8</td>\n<td></td>\n</tr>\n<tr>\n<td>Tdrag</td>\n<td>拖拽的插件，可以拖拽任意元素</td>\n<td><a href=\"https://github.com/tezml/Tdrag/\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://www.jq22.com/yanshi8362\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>tagsinput</td>\n<td>动态标签生成，并添加了删除按钮和其他好看的样式</td>\n<td><a href=\"https://github.com/xoxco/jQuery-Tags-Input\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://xoxco.com/projects/code/tagsinput/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://xoxco.com/projects/code/tagsinput/example.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>slimScroll</td>\n<td>支持把内容放在一个盒子里面，固定一个高度，超出的则使用滚动。</td>\n<td><a href=\"https://github.com/rochal/jQuery-slimScroll\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://www.jq22.com/yanshi1425\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>不过不支持resize的时候重新调用插件，有一个贡献者已经修改过源码，不过作者并没有加进去。插件项目地址：<a href=\"http://rocha.la/jQuery-slimScroll\" target=\"_blank\" rel=\"noopener\">插件地址</a>（插件不支持IE7）</td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>scratchit.js</td>\n<td>一款基于HTML5 canvas的jQuery刮刮卡效果插件。这个刮刮卡效果使用两张图片和canvas来制作，可以使用鼠标擦除上面的图片，将下面的图片显露出来，模拟现实的刮刮卡效果</td>\n<td><a href=\"http://www.htmleaf.com/Demo/201506071985.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>可以用来做手机游戏刮刮卡，亲测可用</td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>myFocus</td>\n<td>可以实现图片轮播，风格多种多样</td>\n<td><a href=\"http://demo.jb51.net/js/myfocus/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://demo.jb51.net/js/myfocus/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>没有 Github 地址，因为人家是用 SVN 的</td>\n<td></td>\n</tr>\n<tr>\n<td>move.js</td>\n<td>模拟CSS3动画的js插件。该插件可以完成CSS3的各种动画效果：移动、变形、倾斜、背景色渐变、旋转等。并且可以在动画中使用各种easing效果</td>\n<td><a href=\"https://github.com/visionmedia/move.js/\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://www.htmleaf.com/Demo/201501281292.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>mCustomScrollbar</td>\n<td>滚动条样式插件，可以自由的定制自己喜欢的滚动条</td>\n<td><a href=\"https://github.com/malihu/malihu-custom-scrollbar-plugin\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://manos.malihu.gr/jquery-custom-content-scroller/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://manos.malihu.gr/repository/custom-scrollbar/demo/examples/complete_examples.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>兼容IE6和IE7等的浏览器</td>\n<td></td>\n</tr>\n<tr>\n<td>Lightbox</td>\n<td>实现图片浏览效果，具有的功能包括：自动根据窗口的大小缩放图片，模式窗口，幻灯片方式播放，内容预加载，渐变等效果</td>\n<td><a href=\"https://github.com/lokesh/lightbox2/\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://lokeshdhakar.com/projects/lightbox2/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://www.zhangxinxu.com/jq/balupton_zh/demo/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>有基于 jQuery 的，有基于 Prototype 的，也有使用原生 JavaScript 写的</td>\n<td></td>\n</tr>\n<tr>\n<td>html2canvas</td>\n<td>将html的内容以canvas形式生成图片，亲测好用</td>\n<td><a href=\"https://github.com/niklasvh/html2canvas\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://html2canvas.hertzen.com/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://html2canvas.hertzen.com/examples.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>gridly</td>\n<td>一个 jQuery 插件，它能够拖动，删除和调整一个网格的大小，亲测好用</td>\n<td><a href=\"https://github.com/ksylvest/jquery-gridly\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://ksylvest.github.io/jquery-gridly/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://www.jq22.com/yanshi386\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>FullPage</td>\n<td>可以做出全屏网站</td>\n<td><a href=\"https://github.com/powy1993/fullpage\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://www.dowebok.com/demo/2014/77/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>兼容桌面端(ie5.5+) 和手机端</td>\n<td></td>\n</tr>\n<tr>\n<td>fine-uploader</td>\n<td>采用 ajax 方式实现文件上传，同时在浏览器中直接支持文件拖拽</td>\n<td><a href=\"https://github.com/valums/file-uploader\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"https://fineuploader.com/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"https://fineuploader.com/demos\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>对浏览器版本有要求类似 IE 版本必须是 9 或是更高的 IE10</td>\n<td></td>\n</tr>\n<tr>\n<td>csshake-master</td>\n<td>CSS3 元素抖动动画库</td>\n<td><a href=\"https://github.com/elrumordelaluz/csshake\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://elrumordelaluz.github.io/csshake/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://www.ui3g.com/demos/show/1233/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ajaxfileupload</td>\n<td>一个异步上传文件的 jQuery 插件</td>\n<td><a href=\"https://github.com/davgothic/AjaxFileUpload\" target=\"_blank\" rel=\"noopener\">Github</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>animate.css</td>\n<td>齐全的 CSS3 动画库</td>\n<td><a href=\"https://github.com/daneden/animate.css/\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://www.jq22.com/yanshi819\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>css3d-engine</td>\n<td>CSS3d 动画，主要是在 transform 上做文章</td>\n<td><a href=\"https://github.com/shrekshrek/css3d-engine\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://css3d.bitworking.de/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://css3d.bitworking.de/examples/example01.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>可以用来做720度或320度全景，亲测可用</td>\n<td></td>\n</tr>\n<tr>\n<td>hammer.js</td>\n<td>可以完美的实现在移端开发用到的大多数事件，如：点击、滑动、拖动、多点触控等事件</td>\n<td><a href=\"https://github.com/hammerjs/hammer.js/\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://hammerjs.github.io/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://codepen.io/runspired/full/ZQBGWd/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>iscroll.js</td>\n<td>移动端广泛应用的插件之一，用于让元素在固定高度盒子内滚动</td>\n<td><a href=\"https://github.com/cubiq/iscroll\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://cubiq.org/iscroll-4\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://lab.cubiq.org/iscroll/examples/simple/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>版本 4 还包括缩放、拉动刷新、精确捕捉元素、自定义滚动条等功能</td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>touchSwipe.js</td>\n<td>和 hammer.js 类似，同样是移动端触屏触摸特效插件</td>\n<td><a href=\"https://github.com/mattbryson/TouchSwipe-Jquery-Plugin\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://labs.rampinteractive.co.uk/touchSwipe/demos/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://labs.rampinteractive.co.uk/touchSwipe/demos/Enable_and_destroy.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>有一个 bug：手指事件会在 a 标签超链接内失效</td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>jquery.validate</td>\n<td>表单验证插件，非常方便实用</td>\n<td><a href=\"https://github.com/jquery-validation/jquery-validation\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"https://jqueryvalidation.org/\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"https://jqueryvalidation.org/files/demo/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n<tr>\n<td>jstween</td>\n<td>将某一个元素粒子化</td>\n<td><a href=\"https://github.com/shrekshrek/jstween\" target=\"_blank\" rel=\"noopener\">Github</a> &#124; <a href=\"http://shrek.imdevsh.com/demo/performance/test1/jstween.html\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td>具体应用还未尝试，但是该插件的作者有许多优秀的项目，可以 follow 一下</td>\n<td></td>\n</tr>\n<tr>\n<td>DlHighlight</td>\n<td>代码高亮脚本，只支持 4 种编程语言：JS、CSS、XML、HTML</td>\n<td><a href=\"\">Github</a> &#124; <a href=\"http://mihai.bazon.net/projects/javascript-syntax-highlighting-engine\" target=\"_blank\" rel=\"noopener\">官网</a> &#124; <a href=\"http://demo.jb51.net/js/2012/hl/\" target=\"_blank\" rel=\"noopener\">Demo</a></td>\n<td></td>\n<td>jQuery</td>\n</tr>\n</tbody>\n</table>\n","raw":null,"categories":[{"name":"summary","path":"api/categories/summary.json"}],"tags":[{"name":"推荐","path":"api/tags/推荐.json"}]},{"title":"在线接口地址总结","slug":"在线接口地址总结","date":"2017-08-20T12:37:00.000Z","updated":"2019-03-02T06:40:00.874Z","comments":true,"path":"api/articles/在线接口地址总结.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>我在这篇文章中总结了一些在线接口地址，这些接口可以很方便的进行在线调用，完成某些业务需求，不过由于公开 API 基本上没有盈利空间，所以有可能过一段时间就不再维护了，大家在使用之前一定要验证一下是否仍然有效</p>\n<h2 id=\"天气\"><a href=\"#天气\" class=\"headerlink\" title=\"天气\"></a>天气</h2><p>其实提供天气接口的网站很多，有人已经替我们总结好了，可以<a href=\"http://www.nohacks.cn/post-35.html\" target=\"_blank\" rel=\"noopener\">点击这里</a>查看，有些接口是需要知道自己的城市代码的，大家可以去<a href=\"http://www.weather.com.cn/\" target=\"_blank\" rel=\"noopener\">中国天气网首页</a>进行查询，不过我更推荐<a href=\"https://www.heweather.com/\" target=\"_blank\" rel=\"noopener\">和风天气</a>，和风天气需要注册成为认证开发者才能获得免费 7 天天气预报的资格，注册还是很简单的，差不多一天就能通过。目前和风天气提供的开发者免费天气服务：</p>\n<ul>\n<li>国内 3181+ 海外 4000 热门</li>\n<li><strong>7天天气预报</strong></li>\n<li>实况天气</li>\n<li>逐三小时预报</li>\n<li>生活指数（基础 8 项）</li>\n<li>空气质量实况（国控站点）</li>\n<li>每天访问量：14959 次</li>\n<li>稳定性：99%</li>\n<li>技术支持：邮件</li>\n</ul>\n<p>虽然免费 API 有访问限制，<strong>每天不得超过14959次</strong>，但是做天气数据缓存之后就应该够用了</p>\n<h2 id=\"IP地址\"><a href=\"#IP地址\" class=\"headerlink\" title=\"IP地址\"></a>IP地址</h2><h3 id=\"搜狐\"><a href=\"#搜狐\" class=\"headerlink\" title=\"搜狐\"></a>搜狐</h3><p>搜狐提供了一个获取本设备 IP 地址的接口：<a href=\"http://pv.sohu.com/cityjson?ie=utf-8\" target=\"_blank\" rel=\"noopener\">http://pv.sohu.com/cityjson?ie=utf-8</a>，其返回结果类似于：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> returnCitySN = &#123;<span class=\"string\">\"cip\"</span>: <span class=\"string\">\"114.255.41.188\"</span>, <span class=\"string\">\"cid\"</span>: <span class=\"string\">\"110000\"</span>, <span class=\"string\">\"cname\"</span>: <span class=\"string\">\"北京市\"</span>&#125;;</span><br></pre></td></tr></table></figure>\n<p>不知道为什么明明是 json 格式，偏偏要写的不符合规范，所以在获取到 response 之后，还需要自己解析一下。</p>\n<h3 id=\"新浪\"><a href=\"#新浪\" class=\"headerlink\" title=\"新浪\"></a>新浪</h3><p>新浪提供了一个查询指定 IP 地址所在地理位置的接口：<a href=\"http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js&amp;ip=114.255.41.188\" target=\"_blank\" rel=\"noopener\">http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js&amp;ip=114.255.41.188</a>，其返回结果类似于：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> remote\\_ip\\_info = &#123;<span class=\"string\">\"ret\"</span>:<span class=\"number\">1</span>,<span class=\"string\">\"start\"</span>:<span class=\"number\">-1</span>,<span class=\"string\">\"end\"</span>:<span class=\"number\">-1</span>,<span class=\"string\">\"country\"</span>:<span class=\"string\">\"\\\\u4e2d\\\\u56fd\"</span>,<span class=\"string\">\"province\"</span>:<span class=\"string\">\"\\\\u5317\\\\u4eac\"</span>,<span class=\"string\">\"city\"</span>:<span class=\"string\">\"\\\\u5317\\\\u4eac\"</span>,<span class=\"string\">\"district\"</span>:<span class=\"string\">\"\"</span>,<span class=\"string\">\"isp\"</span>:<span class=\"string\">\"\"</span>,<span class=\"string\">\"type\"</span>:<span class=\"string\">\"\"</span>,<span class=\"string\">\"desc\"</span>:<span class=\"string\">\"\"</span>&#125;;</span><br></pre></td></tr></table></figure>\n<p>一些字段是 URL 编码过后的字符，所以需要使用 decodeURIComponent 来解码成中文</p>\n<h3 id=\"chaipip\"><a href=\"#chaipip\" class=\"headerlink\" title=\"chaipip\"></a>chaipip</h3><p><a href=\"http://chaipip.com/\" target=\"_blank\" rel=\"noopener\">http://chaipip.com/</a>，这是某大牛自己开发的一个根据 IP 地址查询实际地理位置的网站，不过网站加了很多防护，而且每人每天有查询次数的限制（最多 20 次），所以就用来自己使用吧- -</p>\n<h2 id=\"人脸识别\"><a href=\"#人脸识别\" class=\"headerlink\" title=\"人脸识别\"></a>人脸识别</h2><p>说到人脸识别，第一想到的肯定是 <a href=\"https://www.faceplusplus.com.cn/\" target=\"_blank\" rel=\"noopener\">Face++</a> 了，不过除了人脸识别，Face++ 目前还可以提供人体识别、文字识别和图像识别等等服务</p>\n<h2 id=\"地图\"><a href=\"#地图\" class=\"headerlink\" title=\"地图\"></a>地图</h2><p>目前我所了解的提供开放地图 API 的网站有三家：百度地图、高德地图和腾讯地图：</p>\n<ul>\n<li><a href=\"http://lbsyun.baidu.com/index.php\" target=\"_blank\" rel=\"noopener\">百度地图开放平台</a></li>\n<li><a href=\"https://lbs.amap.com/\" target=\"_blank\" rel=\"noopener\">高德地图API</a></li>\n<li><a href=\"http://lbs.qq.com/\" target=\"_blank\" rel=\"noopener\">腾讯地图API</a></li>\n</ul>\n<h2 id=\"音乐\"><a href=\"#音乐\" class=\"headerlink\" title=\"音乐\"></a>音乐</h2><p>目前有<a href=\"https://github.com/Binaryify/NeteaseCloudMusicApi\" target=\"_blank\" rel=\"noopener\">网易云音乐</a>（很全面，感谢作者一直在更新）和<a href=\"https://gitee.com/Tony.bin/search_web\" target=\"_blank\" rel=\"noopener\">酷狗音乐</a>，github 上有很多利用网易云音乐 API 做的项目，包括小程序、网页版、wap 版以及 electron 版，大家感兴趣的去同性交友网站上可以搜一下</p>\n<h2 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h2><p>我们知道通过 css 中的 <code>@font-face</code> 可以引入一些特殊字体，而现在 <a href=\"http://www.google.com/webfonts#ChoosePlace:select\" target=\"_blank\" rel=\"noopener\">Google Font Api</a> 也能实现，具体使用过程见大漠的文章——<a href=\"https://www.w3cplus.com/css/how-to-use-google-font-api\" target=\"_blank\" rel=\"noopener\">《Google Font的运用》</a></p>\n<h2 id=\"一句话\"><a href=\"#一句话\" class=\"headerlink\" title=\"一句话\"></a>一句话</h2><p><a href=\"http://hitokoto.cn/api\" target=\"_blank\" rel=\"noopener\">一言网</a>创立于 2016 年，隶属于萌创 Team，目前网站主要提供一句话服务。一言指的就是一句话，可以是动漫中的台词，也可以是网络上的各种小段子。或是感动，或是开心，亦或是单纯的回忆。这是一个我很喜欢的 API 服务，希望它永远不会停止吧！</p>\n<h2 id=\"北邮人论坛非官方-API\"><a href=\"#北邮人论坛非官方-API\" class=\"headerlink\" title=\"北邮人论坛非官方 API\"></a>北邮人论坛非官方 API</h2><p><a href=\"https://github.com/byr-gdp/byr-bbs-unofficial-api\" target=\"_blank\" rel=\"noopener\">北邮人论坛非官方 API</a>。基于 NodeJS，通过 <code>superagent</code> 抓取数据并用 <code>cheerio</code> 处理后返回 JSON 格式数据。目前有这些功能：</p>\n<ol>\n<li>获取十大信息</li>\n<li>获取版块主题列表</li>\n<li>获取主题回帖列表及精彩回复</li>\n<li>回复帖子</li>\n</ol>\n<p>不过好像 github 上提供的线上域名无法访问了，所以如果你需要使用的话，需要自己部署一下</p>\n<h2 id=\"名人生日\"><a href=\"#名人生日\" class=\"headerlink\" title=\"名人生日\"></a>名人生日</h2><p><a href=\"https://www.meiguoshenpo.com/shengrimingren/\" target=\"_blank\" rel=\"noopener\">美国神婆星座网</a>，提供名人生日查询、名人出生日期查询等,看看每一天都有哪些名人出生，哪些名人是和你一天出生的；不过目前只能通过爬取网页的形式来间接获取，没有开放 API 接口</p>\n<h2 id=\"表情图片\"><a href=\"#表情图片\" class=\"headerlink\" title=\"表情图片\"></a>表情图片</h2><p><a href=\"https://www.doutula.com/apidoc\" target=\"_blank\" rel=\"noopener\">斗图啦</a>，表情图片社区斗图啦提供的开放 api，调用很简单，可以很方便的结合 IM 软件开发一个表情机器人。</p>\n<h2 id=\"图片压缩\"><a href=\"#图片压缩\" class=\"headerlink\" title=\"图片压缩\"></a>图片压缩</h2><p><a href=\"https://tinypng.com/\" target=\"_blank\" rel=\"noopener\">tinypng</a>是知名的免费压缩图片的网站，而同时其也提供了压缩图片的 API 服务，API key 申请地址：<a href=\"https://tinypng.com/developers\" target=\"_blank\" rel=\"noopener\">https://tinypng.com/developers</a>，调用这个网站提供的 API 需要申请一个 API key，输入邮箱，它会把包含 API key 的网址发到你邮箱，打开其中的链接就可以看到属于你的 API key 了；调用这个网站的 API 进行图片压缩的话，每个月前 500 张是免费的，之后要收费；不过既可以压缩 png 图片，又可以压缩 jpg 图片。</p>\n<h2 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h2><p>github 的接口 api 都是开放的，我们可以借助公开 API 构建一个属于自己的项目管理工具。官方文档有 v3 和v4 2个版本，v3 是 Restful，v4 是 GraphQL，v3 版地址： <a href=\"https://api.github.com\" target=\"_blank\" rel=\"noopener\">https://api.github.com</a> 在无 token 情况下使用 github 的 api，每分钟限制是 60 次请求，如果想完整的使用 github 的api，\b可以构建一个 <a href=\"https://github.com/settings/applications/new\" target=\"_blank\" rel=\"noopener\">web application</a>，具体流程可以参考：<a href=\"https://juejin.im/post/5be5403ce51d453b6e027f06\" target=\"_blank\" rel=\"noopener\">【React 实战教程】从0到1 构建 github star管理工具</a></p>\n<h2 id=\"CDN资源\"><a href=\"#CDN资源\" class=\"headerlink\" title=\"CDN资源\"></a>CDN资源</h2><h3 id=\"cdnjs\"><a href=\"#cdnjs\" class=\"headerlink\" title=\"cdnjs\"></a>cdnjs</h3><p>具体开放 API 列表可以看这里：<a href=\"https://cdnjs.com/api\" target=\"_blank\" rel=\"noopener\">https://cdnjs.com/api</a>，你可以获取全部资源列表，也可以通过关键词进行搜索，还可以指定插件，功能比较强大</p>\n<h2 id=\"翻译\"><a href=\"#翻译\" class=\"headerlink\" title=\"翻译\"></a>翻译</h2><p><a href=\"https://github.com/matheuss/google-translate-api\" target=\"_blank\" rel=\"noopener\">google-translate-api</a>，一个免费且无限制的谷歌翻译 API 库，npm 引入一下即可使用</p>\n<h2 id=\"一些提供接口的网站\"><a href=\"#一些提供接口的网站\" class=\"headerlink\" title=\"一些提供接口的网站\"></a>一些提供接口的网站</h2><h3 id=\"Public-APIs\"><a href=\"#Public-APIs\" class=\"headerlink\" title=\"Public APIs\"></a><a href=\"https://github.com/toddmotto/public-apis\" target=\"_blank\" rel=\"noopener\">Public APIs</a></h3><p>用于软件和 Web 开发的免费 API 的集合列表，不过大部分都是国外的，国内使用比较麻烦。</p>\n<h3 id=\"HaoService数据平台\"><a href=\"#HaoService数据平台\" class=\"headerlink\" title=\"HaoService数据平台\"></a><a href=\"http://www.haoservice.com/apilist/\" target=\"_blank\" rel=\"noopener\">HaoService数据平台</a></h3><p>提供了很多数据接口服务，包括短信、语音验证码、银行卡归属地、手机归属地和天气等等，收费也比较良心，适合中小型公司使用。</p>\n<h3 id=\"RSSHub\"><a href=\"#RSSHub\" class=\"headerlink\" title=\"RSSHub\"></a><a href=\"https://docs.rsshub.app/#%E9%B8%A3%E8%B0%A2\" target=\"_blank\" rel=\"noopener\">RSSHub</a></h3><p>RSSHub 是一个轻量、易于扩展的 RSS 生成器, 可以给任何奇奇怪怪的内容生成 RSS 订阅源；同时该网页中包含了已有 RSS 内容的网址，涵盖多个领域，对于那些研究爬虫与内容订阅方向的童鞋来说是个福利。</p>\n<h3 id=\"京东万象\"><a href=\"#京东万象\" class=\"headerlink\" title=\"京东万象\"></a><a href=\"https://wx.jdcloud.com/api\" target=\"_blank\" rel=\"noopener\">京东万象</a></h3><p>向开发者提供国内外最全的金融数据、电商数据、运营商数据、京东数据、生活服务数据、应用开发数据、质检数据等接口,为开发者提供合法有效的优质 API 接口。京东万象,权威的数据交易平台。有收费的也有免费的，比如<a href=\"https://wx.jdcloud.com/search/datas?keyword=%E7%A9%BA%E6%B0%94%E8%B4%A8%E9%87%8F\" target=\"_blank\" rel=\"noopener\">空气质量相关API</a> 就是免费提供的。</p>\n","raw":null,"categories":[{"name":"summary","path":"api/categories/summary.json"}],"tags":[{"name":"接口","path":"api/tags/接口.json"},{"name":"API","path":"api/tags/API.json"}]},{"title":"推荐一些视频","slug":"推荐一些视频","date":"2017-10-07T14:10:49.000Z","updated":"2019-03-02T06:40:00.874Z","comments":true,"path":"api/articles/推荐一些视频.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_285.png","content":"<p>平时很喜欢看一些东西，当然不局限于前端，而相比文字而言，更喜欢看视频，尤其是有了“弹幕”这个神奇的东东之后，在这里就推荐一些我看过的有趣的视频，有些是技术类的，也有些是搞笑片段或纪录片，闲暇之余仅供娱乐。</p>\n<h2 id=\"技术类\"><a href=\"#技术类\" class=\"headerlink\" title=\"技术类\"></a>技术类</h2><h3 id=\"Javascript作者接受采访视频\"><a href=\"#Javascript作者接受采访视频\" class=\"headerlink\" title=\"Javascript作者接受采访视频\"></a><a href=\"https://www.youtube.com/watch?v=IPxQ9kEaF8c\" target=\"_blank\" rel=\"noopener\">Javascript作者接受采访视频</a></h3><p>从<a href=\"https://www.zhihu.com/question/31415286\" target=\"_blank\" rel=\"noopener\">知乎</a>上看到的，之前就听说过JS是一位大神用 10 天时间赶出来的。。虽然目前看来JS存在很多问题和很多坑，但是10天写出一门风靡全球的语言也是一件很伟大的事情了。。</p>\n<h3 id=\"浏览器的背后（续）\"><a href=\"#浏览器的背后（续）\" class=\"headerlink\" title=\"浏览器的背后（续）\"></a><a href=\"http://v.youku.com/v_show/id_XMjMzMzU2NDc2.html\" target=\"_blank\" rel=\"noopener\">浏览器的背后（续）</a></h3><p>浏览器其实有很多可以探讨的东西，同时也是笔试面试时的常客，这个视频来自优酷，虽然有个“续”字，但是我并没有找到前面的视频啊我勒个擦？！</p>\n<h3 id=\"动画设计的12原则\"><a href=\"#动画设计的12原则\" class=\"headerlink\" title=\"动画设计的12原则\"></a><a href=\"https://www.youtube.com/watch?v=GcryIdriSe4\" target=\"_blank\" rel=\"noopener\">动画设计的12原则</a></h3><p>在看文章-<a href=\"https://www.w3cplus.com/animation/crafting-easing-curves-for-user-interfaces.html\" target=\"_blank\" rel=\"noopener\">给用户界面添加缓和效果(Easing Curves)</a>时发现的一个视频，其实设计动画的初衷是为了对用户更“亲切”，所以动画设计的原则就是要满足现实世界中的物理学规则，而该视频就是对该原则的总结，视频来自Youtube，所以需要fq，文字版的<a href=\"https://www.w3cplus.com/css3/animation-principles-for-the-web.html\" target=\"_blank\" rel=\"noopener\">在这里</a>，除此之外你能在 Codepen 找到它们<a href=\"http://codepen.io/collection/AxKOdY/\" target=\"_blank\" rel=\"noopener\">全部的开源 HTML 和 CSS 代码</a>。</p>\n<h3 id=\"Maxoden的演讲视频\"><a href=\"#Maxoden的演讲视频\" class=\"headerlink\" title=\"Maxoden的演讲视频\"></a><a href=\"https://www.youtube.com/watch?v=8gM3xMObEz4\" target=\"_blank\" rel=\"noopener\">Maxoden的演讲视频</a></h3><p>Maxoden 是<a href=\"https://github.com/maxogden/voxel-engine\" target=\"_blank\" rel=\"noopener\">Voxel.js</a>（一个在浏览器里运行的 Minecraft 框架）的作者，而他也借此做了一个 Minecraft 风格的展示他自己项目的页面，是一个很有探索精神的前端工程师。</p>\n<h3 id=\"What-the-heck-is-the-event-loop-anyway\"><a href=\"#What-the-heck-is-the-event-loop-anyway\" class=\"headerlink\" title=\"What the heck is the event loop anyway\"></a><a href=\"https://www.youtube.com/watch?v=8aGhZQkoFbQ\" target=\"_blank\" rel=\"noopener\">What the heck is the event loop anyway</a></h3><p>Philip Roberts 的演讲视频:，主题为《什么是 JavaScript 中的事件循环》，收到了广泛好评，对 event loop 仍然存在疑问的童鞋可以花半小时看一下，当然，如果你更喜欢文字版的，可以移步掘金上的<a href=\"https://juejin.im/post/5ae083166fb9a07ab9792896\" target=\"_blank\" rel=\"noopener\">这篇演讲译文</a></p>\n<h3 id=\"像素的一生Life-of-a-Pixel-Steve-Kobes\"><a href=\"#像素的一生Life-of-a-Pixel-Steve-Kobes\" class=\"headerlink\" title=\"像素的一生Life of a Pixel - Steve Kobes\"></a><a href=\"https://www.youtube.com/watch?reload=9&amp;v=NCUDntd-3ao\" target=\"_blank\" rel=\"noopener\">像素的一生Life of a Pixel - Steve Kobes</a></h3><p>Youtube 上关于像素的演讲，从微博上看到的，也有很多同事反馈讲的不错，关键是还有中英文双语字幕，这对于我这种英文水平不是很高的人说来说不能再贴心。</p>\n<h3 id=\"Getting-Started-with-Redux\"><a href=\"#Getting-Started-with-Redux\" class=\"headerlink\" title=\"Getting Started with Redux\"></a><a href=\"https://search.bilibili.com/all?keyword=Getting%20Started%20with%20Redux\" target=\"_blank\" rel=\"noopener\">Getting Started with Redux</a></h3><p>Redux 作者出的入门教学视频，不过非常贴心的配了字幕。</p>\n<h2 id=\"剧集类\"><a href=\"#剧集类\" class=\"headerlink\" title=\"剧集类\"></a>剧集类</h2><h3 id=\"《国家宝藏》系列\"><a href=\"#《国家宝藏》系列\" class=\"headerlink\" title=\"《国家宝藏》系列\"></a><a href=\"https://search.bilibili.com/all?keyword=%E5%9B%BD%E5%AE%B6%E5%AE%9D%E8%97%8F&amp;page=1&amp;order=totalrank\" target=\"_blank\" rel=\"noopener\">《国家宝藏》系列</a></h3><p>央视：你爸爸还是你爸爸。节目集结了以故宫博物院为首的<strong>九大博物馆</strong>，每个博物馆选出三件文物组内 battle，每件文物都有一位明星守护人来讲述这件文物前世今生的故事。总之吧，你要是不跪着看完请来打我……</p>\n<h3 id=\"地下交通站\"><a href=\"#地下交通站\" class=\"headerlink\" title=\"地下交通站\"></a><a href=\"https://www.bilibili.com/bangumi/play/ss20999/\" target=\"_blank\" rel=\"noopener\">地下交通站</a></h3><p>这是一部拿鬼子和汉奸做包袱的国产情景喜剧，<a href=\"https://movie.douban.com/subject/2133474/\" target=\"_blank\" rel=\"noopener\">豆瓣</a>评分 9.0，包袱无处不在，堪称国产神作，不过笑点低的就算了吧，别再笑岔过去- -</p>\n<h2 id=\"演讲类\"><a href=\"#演讲类\" class=\"headerlink\" title=\"演讲类\"></a>演讲类</h2><h2 id=\"Learning-how-to-learn\"><a href=\"#Learning-how-to-learn\" class=\"headerlink\" title=\"Learning how to learn\"></a><a href=\"https://www.coursera.org/learn/learning-how-to-learn\" target=\"_blank\" rel=\"noopener\">Learning how to learn</a></h2><p>Coursera 上的目前世界上参与人数最多的一门 MOOC 课程。这门课免费。讲师 Dr. Barbara Oakley 是奥克兰大学的工程学教授。她本来是学斯拉夫语言文学的，一直畏惧工科，数理学科成绩也很差，直到快 30 岁时，她才决定挑战自己去学工程学。听她讲学习过程是最有说服力的。另一位讲师 Dr. Terrence Sejnowski 是顶尖的神经科学专家。他会从脑科学和神经科学的实证角度告诉你为什么应该怎样学。中文版在这儿：<a href=\"https://www.coursera.org/learn/ruhe-xuexi\" target=\"_blank\" rel=\"noopener\">https://www.coursera.org/learn/ruhe-xuexi</a></p>\n<h3 id=\"玉伯在2017SEE-Conf大会上的演讲视频\"><a href=\"#玉伯在2017SEE-Conf大会上的演讲视频\" class=\"headerlink\" title=\"玉伯在2017SEE Conf大会上的演讲视频\"></a><a href=\"https://mp.weixin.qq.com/s/08A6OF3G-UnH3vm0vCZoGg\" target=\"_blank\" rel=\"noopener\">玉伯在2017SEE Conf大会上的演讲视频</a></h3><p>玉伯在首届蚂蚁体验科技 SEE Conf 大会上分享的总结，不管是前端还是设计师都值得一看。</p>\n<h3 id=\"故宫“看门人”带您探访紫禁城\"><a href=\"#故宫“看门人”带您探访紫禁城\" class=\"headerlink\" title=\"故宫“看门人”带您探访紫禁城\"></a><a href=\"http://m.bilibili.com/video/av6737337.html\" target=\"_blank\" rel=\"noopener\">故宫“看门人”带您探访紫禁城</a></h3><p>故宫博物院院长讲述故宫博物院概况，未开放区的故事，和故宫中的趣事。别的不说，院长的 ppt 做的很棒，同时讲解风趣幽默，还调侃了一下国家领导人，怪不得后面好多人站着听完。。</p>\n<h3 id=\"How-GitHub-Uses-GitHub-to-Build-GitHub\"><a href=\"#How-GitHub-Uses-GitHub-to-Build-GitHub\" class=\"headerlink\" title=\"How GitHub Uses GitHub to Build GitHub\"></a><a href=\"https://zachholman.com/talk/how-github-uses-github-to-build-github/\" target=\"_blank\" rel=\"noopener\">How GitHub Uses GitHub to Build GitHub</a></h3><p>题目看似一个绕口令，其实就是一个绕口令，这个视频为我们讲述了 github 团队是如何利用 github 搭建 github 这个站点的，不过该网站需要翻墙，也不知道当你观看的时候视频是否存在，一切随缘吧~</p>\n<h3 id=\"Git-and-GitHub-Secrets\"><a href=\"#Git-and-GitHub-Secrets\" class=\"headerlink\" title=\"Git and GitHub Secrets\"></a><a href=\"https://zachholman.com/talk/git-github-secrets/\" target=\"_blank\" rel=\"noopener\">Git and GitHub Secrets</a></h3><p>github 是当今最流行的版本控制工具了（没有之一），而 git 和 github 的功能非常强大，我们平常用到的都是一些最基本的功能，所以有一些隐藏功能是大多数人都不知道的，而这个视频就是 git 创始人之一Zach Hloman 的一篇演讲，可以让你了解到 git 和 github 的秘密机关。</p>\n<h3 id=\"缅怀经典！乔布斯2007年iPhone发布会全程-中文字幕\"><a href=\"#缅怀经典！乔布斯2007年iPhone发布会全程-中文字幕\" class=\"headerlink\" title=\"缅怀经典！乔布斯2007年iPhone发布会全程 中文字幕\"></a><a href=\"http://www.iqiyi.com/w_19rqw2asd9.html\" target=\"_blank\" rel=\"noopener\">缅怀经典！乔布斯2007年iPhone发布会全程 中文字幕</a></h3><p>乔布斯已经离开我们有一段时间了，但是他的传奇仍在继续，Apple 作为全球第二大互联网科技公司，其对世界的影响是有目共睹的，在 2018 年的今天，就让我们一起穿越回 2007 年，那一年是属于乔布斯的，是属于 iPhone的！</p>\n<h3 id=\"周其仁号称14亿人都应该看的关于以色列的演讲视频\"><a href=\"#周其仁号称14亿人都应该看的关于以色列的演讲视频\" class=\"headerlink\" title=\"周其仁号称14亿人都应该看的关于以色列的演讲视频\"></a><a href=\"https://mp.weixin.qq.com/s/JGB_BQXZ86L-ywDcAMtJRQ\" target=\"_blank\" rel=\"noopener\">周其仁号称14亿人都应该看的关于以色列的演讲视频</a></h3><p>北大国家发展研究院教授在联想之星 WILL 大会上发表的演讲，虽然主题是经济，但是值得所有人看一下。</p>\n<h3 id=\"官方完整视频！张小龙在微信公开课的4小时\"><a href=\"#官方完整视频！张小龙在微信公开课的4小时\" class=\"headerlink\" title=\"官方完整视频！张小龙在微信公开课的4小时\"></a><a href=\"https://mp.weixin.qq.com/s/CZZ7JSz-r1UexVY2xpJvZA\" target=\"_blank\" rel=\"noopener\">官方完整视频！张小龙在微信公开课的4小时</a></h3><p>“微信之父”张小龙在 2019微信公开课上的演讲，值得每一位产品经理观看研习，文字版：<a href=\"https://mp.weixin.qq.com/s/FgKpY62OceBAPpz5MklS_g\" target=\"_blank\" rel=\"noopener\">官方最完整版：张小龙微信公开课超时演讲，总结微信8年</a></p>\n<h3 id=\"推荐8个设计师必看的TED演讲\"><a href=\"#推荐8个设计师必看的TED演讲\" class=\"headerlink\" title=\"推荐8个设计师必看的TED演讲\"></a><a href=\"https://mp.weixin.qq.com/s/oEcZRIt4NOhWev2KRLJL6w\" target=\"_blank\" rel=\"noopener\">推荐8个设计师必看的TED演讲</a></h3><p>公众号【壹念视觉】给众道友推荐的 8 个网上口碑很好的 TED 设计演讲，这些已在网上流传已久，与其躺着刷抖音不如去看看这些，换换口味~</p>\n<h2 id=\"广告类\"><a href=\"#广告类\" class=\"headerlink\" title=\"广告类\"></a>广告类</h2><h3 id=\"年度走心广告：总有人偷偷爱着你\"><a href=\"#年度走心广告：总有人偷偷爱着你\" class=\"headerlink\" title=\"年度走心广告：总有人偷偷爱着你\"></a><a href=\"https://mp.weixin.qq.com/s/IIqjd-sFrPgcY6Tizc8_TA\" target=\"_blank\" rel=\"noopener\">年度走心广告：总有人偷偷爱着你</a></h3><p>这是 999感冒灵推出的感恩节短片，广告片选取真人事件改编，以一段网络问答为线，串联 5 个反转故事。看完后你会觉得：这个世界没有想象中的那么好，但似乎……也没那么糟，总有人偷偷爱着你。</p>\n<h3 id=\"近年最喜欢的-Apple-广告片\"><a href=\"#近年最喜欢的-Apple-广告片\" class=\"headerlink\" title=\"近年最喜欢的 Apple 广告片\"></a><a href=\"https://www.jianshu.com/p/e01c5bc2757d\" target=\"_blank\" rel=\"noopener\">近年最喜欢的 Apple 广告片</a></h3><p>来自简书-<a href=\"https://www.jianshu.com/u/ba6d563caa3a\" target=\"_blank\" rel=\"noopener\">刘英滕</a>的推荐，Apple 的广告往往不会单纯的宣传其产品，更注重的是传达一种理念，表达一种对设计和交互的思考，同时关注人情和应用场景。</p>\n<h3 id=\"两秒钟，你究竟错过了什么？——美国抵制分心驾驶公益广告\"><a href=\"#两秒钟，你究竟错过了什么？——美国抵制分心驾驶公益广告\" class=\"headerlink\" title=\"两秒钟，你究竟错过了什么？——美国抵制分心驾驶公益广告\"></a><a href=\"https://new.qq.com/omn/20171224/20171224A02ZLA.html\" target=\"_blank\" rel=\"noopener\">两秒钟，你究竟错过了什么？——美国抵制分心驾驶公益广告</a></h3><p>手机给我们传递了最新消息，有时无意中也为我们“推送”了安全隐患。开车时，即便是两秒钟的分神，也会使车辆碰撞的概率翻倍。<strong>专心驾驶</strong>，才是最不容错过的事！</p>\n<h3 id=\"啥是佩奇\"><a href=\"#啥是佩奇\" class=\"headerlink\" title=\"啥是佩奇\"></a><a href=\"https://www.zhihu.com/question/309457864/answer/576303849\" target=\"_blank\" rel=\"noopener\">啥是佩奇</a></h3><p>每到春节前后就有很多以亲情为主题的广告和宣传片，这部《啥是佩奇》虽然也带着推广的目的，但是它有一个不太一样的地方，就是<strong>没有把要推广的产品作为核心的”亲情解决方案”</strong>。</p>\n<blockquote>\n<p>亲情本身才是亲情的解决方案，这可能就是这部片子最值得欣赏的地方。</p>\n</blockquote>\n<h3 id=\"简单才是王道\"><a href=\"#简单才是王道\" class=\"headerlink\" title=\"简单才是王道\"></a><a href=\"https://www.bilibili.com/video/av31248682/\" target=\"_blank\" rel=\"noopener\">简单才是王道</a></h3><p>挪威创意广告《简单才是王道》，装逼开场苦逼结尾。搞笑之余阐述了对于人工智能的担忧和思考</p>\n<h3 id=\"杜蕾斯惨败，这才是2018年度最扎心广告\"><a href=\"#杜蕾斯惨败，这才是2018年度最扎心广告\" class=\"headerlink\" title=\"杜蕾斯惨败，这才是2018年度最扎心广告!\"></a><a href=\"https://mp.weixin.qq.com/s/E716DWBg0TuCZlAy8l8VOA\" target=\"_blank\" rel=\"noopener\">杜蕾斯惨败，这才是2018年度最扎心广告!</a></h3><blockquote>\n<p>如果生命到此为止<br>你是不是没有任何遗憾？</p>\n</blockquote>\n<h3 id=\"王者荣耀暖心公益片：过年这局，好好打\"><a href=\"#王者荣耀暖心公益片：过年这局，好好打\" class=\"headerlink\" title=\"王者荣耀暖心公益片：过年这局，好好打\"></a><a href=\"https://www.digitaling.com/projects/54473.html\" target=\"_blank\" rel=\"noopener\">王者荣耀暖心公益片：过年这局，好好打</a></h3><p>玩游戏无法逃离生活，游戏是生活的影子。游戏本身并无意义，是生活赋予了它一定意义。</p>\n<h2 id=\"纪录片类\"><a href=\"#纪录片类\" class=\"headerlink\" title=\"纪录片类\"></a>纪录片类</h2><h3 id=\"超级大工程\"><a href=\"#超级大工程\" class=\"headerlink\" title=\"超级大工程\"></a><a href=\"https://www.bilibili.com/video/av18659657/\" target=\"_blank\" rel=\"noopener\">超级大工程</a></h3><p>许多人类的想法建立起来似乎是不可能的。这是进步的一个不可避免的方面：事情越来越大。这是大坝，高速公路，桥梁和建筑已经改变了城市甚至国家的故事。这个系列的视频探索了百年来最大，最重，最高的建筑工程，并且看到了 10 年甚至 100 年前的超大型建筑</p>\n<h3 id=\"Google搜索：“How”\"><a href=\"#Google搜索：“How”\" class=\"headerlink\" title=\"Google搜索：“How”\"></a><a href=\"https://mp.weixin.qq.com/s/D5N50mE2ylkWf30zEuWu6Q\" target=\"_blank\" rel=\"noopener\">Google搜索：“How”</a></h3><p>Google 刚刚发布了 2017 年搜索关键词报告，这一年，我们在 Google 搜索栏，键入最多的一个单词是：<strong>“How”。</strong>为此 Google 做了一支名为“How”的视频。这家全球最大的搜索引擎公司，每天悄无声息的出现在我们生活里。 <strong>那个两寸长的搜索框，记录着 2017 年里人们的好奇、困惑、恐惧、沮丧、无助，但更多的是希望和善良。</strong></p>\n<h3 id=\"最动人的年度视频：3分钟回望2017\"><a href=\"#最动人的年度视频：3分钟回望2017\" class=\"headerlink\" title=\"最动人的年度视频：3分钟回望2017\"></a><a href=\"http://video.sina.com.cn/p/mobile/doc/2017-12-21/171367657863.html\" target=\"_blank\" rel=\"noopener\">最动人的年度视频：3分钟回望2017</a></h3><p>2017 即将结束，新浪带我们回首了这一年发生的种种，有国家的荣耀时刻，也有英雄的陨落</p>\n<h3 id=\"知乎发布-2017-大事记：关于世界，关于中国，关于你\"><a href=\"#知乎发布-2017-大事记：关于世界，关于中国，关于你\" class=\"headerlink\" title=\"知乎发布 2017 大事记：关于世界，关于中国，关于你\"></a><a href=\"https://zhuanlan.zhihu.com/p/32168125\" target=\"_blank\" rel=\"noopener\">知乎发布 2017 大事记：关于世界，关于中国，关于你</a></h3><p>知乎也发布了 2017 总结视频。。</p>\n<h3 id=\"因为热爱，才对世界饱含希望\"><a href=\"#因为热爱，才对世界饱含希望\" class=\"headerlink\" title=\"因为热爱，才对世界饱含希望\"></a><a href=\"https://bbs.hupu.com/24792317.html\" target=\"_blank\" rel=\"noopener\">因为热爱，才对世界饱含希望</a></h3><p>知乎发布 2018 年度回顾视频，收录了今年知乎热搜词背后的重大事件：金庸逝世、MH370调查组解散、创造101、杜嘉班纳辱华、IG夺冠等，2018年不够完美，我们经历苦痛，承受告别，但因为热爱，我们才好奇，才拥有光芒，才对世界饱含希望！片尾那句“除了这一生，我们又没有其他时间”，真的让人泪目！</p>\n<h3 id=\"Life-in-A-Day\"><a href=\"#Life-in-A-Day\" class=\"headerlink\" title=\"Life in A Day\"></a><a href=\"https://www.youtube.com/watch?v=JaFVr_cJJIY\" target=\"_blank\" rel=\"noopener\">Life in A Day</a></h3><p>这部 Youtube 筹划的纪录片，记录着全世界 2010 年 7 月 24 日这天，世界各角落的可能性。影片由全世界的 Youtube 使用者拍摄，上传至 Youtube，并由导演 Kevin MacDonald 和 Ridley Scott 剪辑成九十分钟影片，影片没有各种花哨的技术手法，为的是让你看到世界上最真实的人生百态。</p>\n<h3 id=\"北邮60年-校庆官方宣传片《世界因你而改变》\"><a href=\"#北邮60年-校庆官方宣传片《世界因你而改变》\" class=\"headerlink\" title=\"北邮60年 | 校庆官方宣传片《世界因你而改变》\"></a><a href=\"https://mp.weixin.qq.com/s/WCsWBkx0VM8YHPpCCmsaqg\" target=\"_blank\" rel=\"noopener\">北邮60年 | 校庆官方宣传片《世界因你而改变》</a></h3><p>这部六十周年校庆官方宣传片思路新颖，通过纪录15级毕业生张浩用镜头重新审视母校，让大家了解到北邮的过去和今天。同时还包含很多校友采访及珍贵的老资料，让人们感受到北邮所肩负的“传邮万里、国脉所系”的历史使命和“大众创业、万众创新”的时代责任。</p>\n<h3 id=\"工作细胞\"><a href=\"#工作细胞\" class=\"headerlink\" title=\"工作细胞\"></a><a href=\"https://movie.douban.com/subject/28514091/\" target=\"_blank\" rel=\"noopener\">工作细胞</a></h3><p>豆瓣评分 9.2 分的岛国神作，<strong>无论是否喜欢看动漫，都很难不被《工作细胞》精准秒杀。</strong>网易云音乐《工作细胞》主题曲的评论区里，有人这样说：</p>\n<blockquote>\n<p>请记住，如果哪天不高兴或者是有很不好的想法，请记住这个身体里有37兆细胞还在为你辛勤工作着，他们一直在努力，请你也不要放弃</p>\n</blockquote>\n<p>这里有一篇介绍，可以提前看一下：<a href=\"https://mp.weixin.qq.com/s/DSWZsfKyeLd1OAs8EzyDSg\" target=\"_blank\" rel=\"noopener\">《岛国9.2高分神作！揭露身体的秘密，看完再也不忍心作践自己….》</a></p>\n<h3 id=\"林下生命\"><a href=\"#林下生命\" class=\"headerlink\" title=\"林下生命\"></a><a href=\"https://www.bilibili.com/bangumi/media/md20364/\" target=\"_blank\" rel=\"noopener\">林下生命</a></h3><blockquote>\n<p>看看怪异、可怕、美丽得令人吃惊的无脊椎动物的世界吧！和大卫·爱登堡一起，去开创性地探索一个我们从未见过、却一直围绕在我们周围的壮观的微观宇宙吧！它们不仅仅包括臭虫和昆虫，还有奇异的蝉、萤火虫、结网的蜘蛛和荧光色的蜻蜓——更不用说其它令人难以置信的生命形式和它们惊人的秘密行为了。幸亏有了照明、光学和计算机动作控制技术的革新，这个动荡不安、超级有组织的世界终于以其非凡居民的视角被揭开了面纱。这些动物可能极其微小，但它们的生活的确是宏伟壮观的……</p>\n</blockquote>\n<h3 id=\"珠峰清道夫\"><a href=\"#珠峰清道夫\" class=\"headerlink\" title=\"珠峰清道夫\"></a><a href=\"http://www.dlili.tv/gresource/3691\" target=\"_blank\" rel=\"noopener\">珠峰清道夫</a></h3><p>豆瓣评分<strong>9.0</strong>，这部纪录片讲述的是夏尔巴人从世界屋脊往下背尸体的故事！每年珠峰都会迎来7万至10万的旅客。而这里没有公共厕所，也没有集中排泄体内废物的场所，随地大小便的后果就是，留下12吨的屎和数不清的生活垃圾。珠峰上的清道夫们，他们用自己的双手，还珠峰一片雪白；</p>\n<blockquote>\n<p>用自己的生命，还人间一片净土。</p>\n</blockquote>\n<p>他们是平凡人，却做着不平凡的事情。珠峰清道夫们，在用生命告诉我们。请不要去玷污珠峰的神圣保护它比征服它更有意义！</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"【敖厂长】史上最垃圾游戏判明\"><a href=\"#【敖厂长】史上最垃圾游戏判明\" class=\"headerlink\" title=\"【敖厂长】史上最垃圾游戏判明!\"></a><a href=\"http://www.bilibili.com/video/av12719263/\" target=\"_blank\" rel=\"noopener\">【敖厂长】史上最垃圾游戏判明!</a></h3><p>被誉为“镇站之宝”的 Bilibili 视频，虽然完整的看下来之后只有佩服二字可言（因为从头到尾也没看懂说的是个啥），但是佩服就足够了，上一张伪封面图感受一下：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_285.png\" alt=\"\"></div>\n\n<h3 id=\"2017-最火歌曲，YouTube-第一个浏览量达到-30-亿的MV\"><a href=\"#2017-最火歌曲，YouTube-第一个浏览量达到-30-亿的MV\" class=\"headerlink\" title=\"2017 最火歌曲，YouTube 第一个浏览量达到 30 亿的MV\"></a><a href=\"https://www.ixigua.com/a6454878191382168078/#mid=52142827529\" target=\"_blank\" rel=\"noopener\">2017 最火歌曲，YouTube 第一个浏览量达到 30 亿的MV</a></h3><p>RT，这首《despacito》是一首西语歌，发行于 2017 年 1 月 13 日，发行之后就收获了很多奖项：YouTube 网站上播放量最多、YouTube 上第一个浏览量达到30亿次的视频、YouTube 上最快达到 20 亿次浏览量的视频；当然，由于贾斯汀比伯的加入，让《despacito》更火了。其中这个剪辑视频的最后，当人们听到贾斯汀比伯的西语时的表情是一个亮点。。</p>\n<h3 id=\"3-分钟带你认识一夜爆火的“引力波”，目前最清楚明了的科普短片\"><a href=\"#3-分钟带你认识一夜爆火的“引力波”，目前最清楚明了的科普短片\" class=\"headerlink\" title=\"3 分钟带你认识一夜爆火的“引力波”，目前最清楚明了的科普短片\"></a><a href=\"https://mp.weixin.qq.com/s/DVbIbSpi3GDizTMIOvixIQ\" target=\"_blank\" rel=\"noopener\">3 分钟带你认识一夜爆火的“引力波”，目前最清楚明了的科普短片</a></h3><p>题目说明了一切。。</p>\n<h3 id=\"这样的旅行记录太酷了吧，像科幻大片\"><a href=\"#这样的旅行记录太酷了吧，像科幻大片\" class=\"headerlink\" title=\"这样的旅行记录太酷了吧，像科幻大片\"></a><a href=\"https://mp.weixin.qq.com/s/sG-mEth_NjYowsnviI00ZQ\" target=\"_blank\" rel=\"noopener\">这样的旅行记录太酷了吧，像科幻大片</a></h3><p>旅行记录做的非常酷</p>\n<h3 id=\"有什么特别治愈的音乐、视频或图片\"><a href=\"#有什么特别治愈的音乐、视频或图片\" class=\"headerlink\" title=\"有什么特别治愈的音乐、视频或图片?\"></a><a href=\"https://www.zhihu.com/question/303612486\" target=\"_blank\" rel=\"noopener\">有什么特别治愈的音乐、视频或图片?</a></h3><p>来自知乎的一则问答。</p>\n","raw":null,"categories":[{"name":"summary","path":"api/categories/summary.json"}],"tags":[{"name":"推荐","path":"api/tags/推荐.json"}]},{"title":"网罗天下好教程","slug":"网罗天下好教程","date":"2017-08-27T07:56:15.000Z","updated":"2019-03-02T06:40:00.874Z","comments":true,"path":"api/articles/网罗天下好教程.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>总结了一下我看过的好的教程，多数为系列文章，鉴于如今信息鱼龙混杂，这篇文章可以省去很多找好教程的时间。</p>\n<h2 id=\"入门级\"><a href=\"#入门级\" class=\"headerlink\" title=\"入门级\"></a>入门级</h2><h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><h4 id=\"手把手教你使用Hexo-Github-Pages搭建个人独立博客\"><a href=\"#手把手教你使用Hexo-Github-Pages搭建个人独立博客\" class=\"headerlink\" title=\"手把手教你使用Hexo + Github Pages搭建个人独立博客\"></a><a href=\"https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/\" target=\"_blank\" rel=\"noopener\">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></h4><p>很完整很详细的 Hexo 搭建个人博客教程</p>\n<h4 id=\"从0到1搭建和部署个人博客\"><a href=\"#从0到1搭建和部署个人博客\" class=\"headerlink\" title=\"从0到1搭建和部署个人博客\"></a><a href=\"https://juejin.im/post/5ae170e1f265da0b7527d0dc\" target=\"_blank\" rel=\"noopener\">从0到1搭建和部署个人博客</a></h4><p>此教程会教你从 0 到 1 搭建一个完整的博客，包括前端展示页、后台管理系统、后端接口及接口文档、服务端部署整个完整流程。技术栈是 vue+express+mongodb</p>\n<h4 id=\"Hexo-主题开发指南\"><a href=\"#Hexo-主题开发指南\" class=\"headerlink\" title=\"Hexo 主题开发指南\"></a><a href=\"http://chensd.com/2016-06/hexo-theme-guide.html\" target=\"_blank\" rel=\"noopener\">Hexo 主题开发指南</a></h4><p>该文章包含的内容如下：</p>\n<ul>\n<li>主题的基本结构</li>\n<li>常见问题</li>\n<li>常用页面的实现</li>\n<li>基本工具</li>\n</ul>\n<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><h4 id=\"CSS布局说——可能是最全的\"><a href=\"#CSS布局说——可能是最全的\" class=\"headerlink\" title=\"CSS布局说——可能是最全的\"></a><a href=\"https://segmentfault.com/a/1190000011358507\" target=\"_blank\" rel=\"noopener\">CSS布局说——可能是最全的</a></h4><p>其实很多时候，我们都会在布局上花费很多时间，尤其是遇到一个比较“严格”的设计师的时候，而 css 虽然语法简单（css 有语法？），但是真正用起来会有很多学问，而布局这种问题是老生常谈的问题了，这篇来自 SegmentFault的文章对 css 中的布局的相关知识进行了总结，满满的干货。</p>\n<h4 id=\"CSS-中重要的层叠概念\"><a href=\"#CSS-中重要的层叠概念\" class=\"headerlink\" title=\"CSS 中重要的层叠概念\"></a><a href=\"https://juejin.im/post/5ba4efe36fb9a05cf52ac192\" target=\"_blank\" rel=\"noopener\">CSS 中重要的层叠概念</a></h4><p>作者参考了很多关于层叠概念的文章，对这一经常迷糊的概念进行了全面总结，讲解的非常清晰全面，是我看过的讲层叠概念最好的文章，十分值得一看！</p>\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><h4 id=\"JavaScript-标准参考教程（alpha）\"><a href=\"#JavaScript-标准参考教程（alpha）\" class=\"headerlink\" title=\"JavaScript 标准参考教程（alpha）\"></a><a href=\"http://javascript.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">JavaScript 标准参考教程（alpha）</a></h4><p>阮一峰的 JS 教程，内容很多，而且讲解的很详细，很透彻，是一篇不错的 JS 入门教程。</p>\n<h4 id=\"如何定义一个高逼格的原生JS插件\"><a href=\"#如何定义一个高逼格的原生JS插件\" class=\"headerlink\" title=\"如何定义一个高逼格的原生JS插件\"></a><a href=\"https://juejin.im/entry/5ae033d86fb9a07ac76e7bcc\" target=\"_blank\" rel=\"noopener\">如何定义一个高逼格的原生JS插件</a></h4><p>作者通过很多实例介绍了如何定义自己的 JS 插件，包含了很多方面和技巧</p>\n<h3 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h3><h4 id=\"七天学会node-js\"><a href=\"#七天学会node-js\" class=\"headerlink\" title=\"七天学会node.js\"></a><a href=\"http://nqdeng.github.io/7-days-nodejs/\" target=\"_blank\" rel=\"noopener\">七天学会node.js</a></h4><p>这是一篇比较详细的 node.js 入门教程，但是我确实没有七天就学会。。</p>\n<h4 id=\"node-js之fs模块\"><a href=\"#node-js之fs模块\" class=\"headerlink\" title=\"node.js之fs模块\"></a><a href=\"https://www.jianshu.com/p/5683c8a93511\" target=\"_blank\" rel=\"noopener\">node.js之fs模块</a></h4><p>fs 模块是 node.js 中一个很重要的模块，其提供了文件相关操作，包括打开、读取、写入和追加等等操作</p>\n<h4 id=\"Express-4-入门中文手册\"><a href=\"#Express-4-入门中文手册\" class=\"headerlink\" title=\"Express 4 入门中文手册\"></a><a href=\"https://www.zybuluo.com/bajian/note/444152\" target=\"_blank\" rel=\"noopener\">Express 4 入门中文手册</a></h4><p>最近在做 node  相关的项目，express 之前接触过，但是基本上一点印象都没有留下。。然后 express 的英文文档从布局和样式上就给人一种不想看的感觉，同时我的英语水平也很差，所以就在网上找了很久的中文文档，最终追根溯源找到了上面这篇，无法评价好坏，因为有就不错了嘛~</p>\n<h4 id=\"Redux中文文档\"><a href=\"#Redux中文文档\" class=\"headerlink\" title=\"Redux中文文档\"></a><a href=\"http://cn.redux.js.org/\" target=\"_blank\" rel=\"noopener\">Redux中文文档</a></h4><p>在线 gitbook，有很多实例，是一个很不过的 redux 入门文档（我就是通过看这个文档入门的~）</p>\n<h4 id=\"Redux从设计到源码\"><a href=\"#Redux从设计到源码\" class=\"headerlink\" title=\"Redux从设计到源码\"></a><a href=\"https://tech.meituan.com/redux-design-code.html\" target=\"_blank\" rel=\"noopener\">Redux从设计到源码</a></h4><p>这也是一篇 Redux 入门教程，虽然比不上上面的教程，但是这篇文章里面的某些图片画的还是相当不错的，可以当做补充资料</p>\n<h4 id=\"react-starter-kit-入门（翻译）\"><a href=\"#react-starter-kit-入门（翻译）\" class=\"headerlink\" title=\"react-starter-kit 入门（翻译）\"></a><a href=\"http://www.jianshu.com/p/6c522c9a20cb\" target=\"_blank\" rel=\"noopener\">react-starter-kit 入门（翻译）</a></h4><p>starter-kit 的教程实在太少了，只找到了这一篇中文的，就先凑合看吧，具体写的好不好可以先睹为快，因为篇幅比较短，而且 starter-kit 本来就是一个脚手架，还是需要了解其他技术栈才能真正看懂</p>\n<h4 id=\"React-Router官方教程\"><a href=\"#React-Router官方教程\" class=\"headerlink\" title=\"React Router官方教程\"></a><a href=\"https://github.com/reactjs/react-router-tutorial\" target=\"_blank\" rel=\"noopener\">React Router官方教程</a></h4><p>官方给出的 react-router 入门文档，通过14个实例一步步进行讲解，由浅入深，由易到难，只需要一个多小时就可以跟着文档写完 14 个实例，同时在写的过程中还可以学习到 express 和 webpack 的相关知识。</p>\n<h4 id=\"Redux作者出的教学视频\"><a href=\"#Redux作者出的教学视频\" class=\"headerlink\" title=\"Redux作者出的教学视频\"></a><a href=\"https://egghead.io/instructors/dan-abramov\" target=\"_blank\" rel=\"noopener\">Redux作者出的教学视频</a></h4><p>Redux 作者自己在 egghead.io 上面上传了教学视频，墙裂推荐，不过全程英文讲解，可能会有点费劲- -：</p>\n<ul>\n<li>基础篇：<a href=\"https://egghead.io/courses/getting-started-with-redux\" target=\"_blank\" rel=\"noopener\">Getting Started with Redux</a></li>\n<li>进阶篇：<a href=\"https://egghead.io/courses/building-react-applications-with-idiomatic-redux\" target=\"_blank\" rel=\"noopener\">Building React Applications with Idiomatic Redux</a></li>\n</ul>\n<h4 id=\"从零开始学-ReactJS（ReactJS-101）\"><a href=\"#从零开始学-ReactJS（ReactJS-101）\" class=\"headerlink\" title=\"从零开始学 ReactJS（ReactJS 101）\"></a><a href=\"https://github.com/carlleton/reactjs101/tree/zh-CN\" target=\"_blank\" rel=\"noopener\">从零开始学 ReactJS（ReactJS 101）</a></h4><p>从零开始学 ReactJS（ReactJS 101）是一本希望让初学者一看就懂的 ReactJS 中文入门教学书，由浅入深学习 ReactJS 生态系 (Flux, Redux, React Router, ImmutableJS, React Native, Relay/GraphQL etc.)。</p>\n<h3 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h3><h4 id=\"入门Webpack，看这篇就够了\"><a href=\"#入门Webpack，看这篇就够了\" class=\"headerlink\" title=\"入门Webpack，看这篇就够了\"></a><a href=\"http://www.jianshu.com/p/42e11515c10f#\" target=\"_blank\" rel=\"noopener\">入门Webpack，看这篇就够了</a></h4><p>进度条说明了一切，作者通过对比 gulp 和 webpack，详细的介绍了 webpack 的优缺点，同时还介绍了一些其他工具的用法，虽然篇幅较长，但是大部分都是代码，可以跟着作者自己敲一遍，相信敲完之后的你可以自信的说 webpack 我终(hai)于(shi)会(bu)了(hui)</p>\n<h4 id=\"webpack-2-打包实战\"><a href=\"#webpack-2-打包实战\" class=\"headerlink\" title=\"webpack 2 打包实战\"></a><a href=\"https://github.com/fenivana/webpack-in-action/\" target=\"_blank\" rel=\"noopener\">webpack 2 打包实战</a></h4><p>这是一篇对于 webpack 2 的讲解，作者通过追根溯源向我们阐述了为什么需要 webpack，作为历史的产物， webpack 具备哪些优势，文章篇幅较长，不过弥补了 webpack 官方文档写的很差的缺陷，是一篇比较不错的 webpack 入门文档</p>\n<h4 id=\"令人困惑的webpack之entry\"><a href=\"#令人困惑的webpack之entry\" class=\"headerlink\" title=\"令人困惑的webpack之entry\"></a><a href=\"https://segmentfault.com/a/1190000008288240\" target=\"_blank\" rel=\"noopener\">令人困惑的webpack之entry</a></h4><p>鉴于 webpack 的文档实在太差，而 webpack 本身又比较复杂，各种 loader，各种 plugin，各种配置，所以刚接触 webpack 的童鞋会感到很头疼，而 entry 作为 webpack 中最基础的配置，可以作为入门 webpack 的关键点，这篇文章非常详细的介绍了 entry 配置项的作用以及参数含义</p>\n<h4 id=\"用grunt搭建自动化的web前端开发环境-完整教程\"><a href=\"#用grunt搭建自动化的web前端开发环境-完整教程\" class=\"headerlink\" title=\"用grunt搭建自动化的web前端开发环境-完整教程\"></a><a href=\"http://developer.51cto.com/art/201506/479127.htm\" target=\"_blank\" rel=\"noopener\">用grunt搭建自动化的web前端开发环境-完整教程</a></h4><p>jQuery 在使用 grunt，bootstrap 在使用 grunt，百度 UEditor 在使用 grunt，你没有理由不学、不用！</p>\n<h4 id=\"Sublime-Text-2-性感无比的代码编辑器！程序员必备神器！\"><a href=\"#Sublime-Text-2-性感无比的代码编辑器！程序员必备神器！\" class=\"headerlink\" title=\"Sublime Text 2 - 性感无比的代码编辑器！程序员必备神器！\"></a><a href=\"http://www.iplaysoft.com/sublimetext.html\" target=\"_blank\" rel=\"noopener\">Sublime Text 2 - 性感无比的代码编辑器！程序员必备神器！</a></h4><p>这是一篇比较全的 sublime 介绍文章，作者介绍了很多 sublime 的特性和优点，同时还推荐了一些插件和使用技巧。</p>\n<h4 id=\"浅入浅出webpack\"><a href=\"#浅入浅出webpack\" class=\"headerlink\" title=\"浅入浅出webpack\"></a><a href=\"https://juejin.im/post/5afa9cd0f265da0b981b9af9\" target=\"_blank\" rel=\"noopener\">浅入浅出webpack</a></h4><p>webpack 作为一个非常流行的构建工具，其文档和使用一直为人所诟病，而当我真正的自己对 webpack 进行了了解和实战之后，发现其实 webpack 并不是那么难理解，而很多童鞋其实是因为 webpack 的功能太强大而对其产生了畏惧，这篇文章对这部分童鞋来说是一篇很好的教程，从基本使用的角度对 webpack 进行了介绍和讲解，除此之外还介绍一些高阶应用，如 TreeShaking、构建 PWA 应用等</p>\n<h4 id=\"iOS开发工具——网络封包分析工具Charles\"><a href=\"#iOS开发工具——网络封包分析工具Charles\" class=\"headerlink\" title=\"iOS开发工具——网络封包分析工具Charles\"></a><a href=\"http://www.infoq.com/cn/articles/network-packet-analysis-tool-charles\" target=\"_blank\" rel=\"noopener\">iOS开发工具——网络封包分析工具Charles</a></h4><p><a href=\"http://www.charlesproxy.com/\" target=\"_blank\" rel=\"noopener\">Charles</a> 是在 Mac 下常用的截取网络封包的工具。Charles 通过将自己设置成系统的网络访问代理服务器，使得所有的网络访问请求都通过它来完成，从而实现了网络封包的截取和分析。作者在该教程中介绍了安装 Charles、安装SSL证书、将Charles设置成系统代理、过滤网络请求、截取 iPhone 上的网络封包、截取 SSL 信息、模拟慢速网络、修改网络请求内容等内容。</p>\n<h4 id=\"webpack-教程资源收集\"><a href=\"#webpack-教程资源收集\" class=\"headerlink\" title=\"webpack 教程资源收集\"></a><a href=\"https://github.com/kraaas/webpack-tutorial-collection\" target=\"_blank\" rel=\"noopener\">webpack 教程资源收集</a></h4><p>作者收集总结了关于 webpack 的各种教程，大概共有 50 篇文章。</p>\n<h4 id=\"运营小白带你5分钟入门谷歌分析-GA\"><a href=\"#运营小白带你5分钟入门谷歌分析-GA\" class=\"headerlink\" title=\"运营小白带你5分钟入门谷歌分析(GA)\"></a><a href=\"https://mp.weixin.qq.com/s/oJv0cOl71VfUW_Q2RUzChA\" target=\"_blank\" rel=\"noopener\">运营小白带你5分钟入门谷歌分析(GA)</a></h4><p>主要通过截图的方式简单介绍了如何使用 GA 进行数据分析，以及 GA 都有哪些功能。</p>\n<h4 id=\"全网最贴心的webpack4系列中文教程和配套代码\"><a href=\"#全网最贴心的webpack4系列中文教程和配套代码\" class=\"headerlink\" title=\"全网最贴心的webpack4系列中文教程和配套代码\"></a><a href=\"https://github.com/dongyuanxin/webpack-demos\" target=\"_blank\" rel=\"noopener\">全网最贴心的webpack4系列中文教程和配套代码</a></h4><p>作者花费了 3 个多月整理了这份教程，一共分成 16 节，每节都有讲解，并且准备了配套代码。</p>\n<h3 id=\"理论\"><a href=\"#理论\" class=\"headerlink\" title=\"理论\"></a>理论</h3><h4 id=\"同构-Isomorphic-web-是什么鬼？\"><a href=\"#同构-Isomorphic-web-是什么鬼？\" class=\"headerlink\" title=\"同构(Isomorphic) web 是什么鬼？\"></a><a href=\"http://www.jianshu.com/p/5ce23647e7e3\" target=\"_blank\" rel=\"noopener\">同构(Isomorphic) web 是什么鬼？</a></h4><p>同构这个概念最近比较火，相比 SPA，同构会有其独特的优势，作者用非常简短的语言介绍了同构产生的背景和如何将自己的网站改造为同构 web。</p>\n<h4 id=\"再不懂区块链，你就OUT了！\"><a href=\"#再不懂区块链，你就OUT了！\" class=\"headerlink\" title=\"再不懂区块链，你就OUT了！\"></a><a href=\"http://jingyan.baidu.com/zt/qukuailian/index.html\" target=\"_blank\" rel=\"noopener\">再不懂区块链，你就OUT了！</a></h4><p>区块链从 15 年到 17 年，但是你却任对区块链一知半解，百度经验联合火币网打造讲解区块链的系列小动画《区块链100问》 ，将抽象的区块链概念转化为100集轻松易懂的 1 分钟小动画，每集学懂一个知识点~</p>\n<h4 id=\"快乐的Linux命名行\"><a href=\"#快乐的Linux命名行\" class=\"headerlink\" title=\"快乐的Linux命名行\"></a><a href=\"http://billie66.github.io/TLCL/book/\" target=\"_blank\" rel=\"noopener\">快乐的Linux命名行</a></h4><p><a href=\"http://linuxcommand.org/\" target=\"_blank\" rel=\"noopener\">The Linux Command Line</a> 的中文版，一个文科生说他看完这个都会 Linux 了</p>\n<h4 id=\"HTTPS-的故事\"><a href=\"#HTTPS-的故事\" class=\"headerlink\" title=\"HTTPS 的故事\"></a><a href=\"https://juejin.im/post/5b10aa22e51d4506c5568f1d\" target=\"_blank\" rel=\"noopener\">HTTPS 的故事</a></h4><p>作者缘于在 Twitter 上看到的 <a href=\"https://link.juejin.im?target=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fmedium.freecodecamp.org%2Fhttps-explained-with-carrier-pigeons-7029d2193351\" target=\"_blank\" rel=\"noopener\">HTTPS explained with carrier pigeons</a>，原作者用很简单的故事就把 HTTP / HTTPS 的传输过程讲解的很清楚。 借原文的意思，该作者重新写了这个故事，加上了一些配图和补充，很形象的解释了为什么要有https以及如何实现。</p>\n<h4 id=\"JS-函数式编程指南\"><a href=\"#JS-函数式编程指南\" class=\"headerlink\" title=\"JS 函数式编程指南\"></a><a href=\"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/\" target=\"_blank\" rel=\"noopener\">JS 函数式编程指南</a></h4><p>这是<em><a href=\"https://github.com/DrBoolean/mostly-adequate-guide\" target=\"_blank\" rel=\"noopener\">mostly-adequate-guide</a></em>的中文版，可以说是最好的\b函数式编程书籍，作者还非常有心的提供了 EPUB 和 MOBI 格式的下载。</p>\n<h4 id=\"Bash-脚本-set-命令教程\"><a href=\"#Bash-脚本-set-命令教程\" class=\"headerlink\" title=\"Bash 脚本 set 命令教程\"></a><a href=\"http://www.ruanyifeng.com/blog/2017/11/bash-set.html\" target=\"_blank\" rel=\"noopener\">Bash 脚本 set 命令教程</a></h4><p>阮一峰老师写的教程，也是一些大牛推荐的 set 命令教程，文章短小精悍，基本上把 set 命令相关的所有知识都涵盖了。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><h4 id=\"npm-scripts-使用指南\"><a href=\"#npm-scripts-使用指南\" class=\"headerlink\" title=\"npm scripts 使用指南\"></a><a href=\"http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html\" target=\"_blank\" rel=\"noopener\">npm scripts 使用指南</a></h4><p>阮一峰讲解的 npm script 入门知识，关于 npm script 首推这篇文章</p>\n<h4 id=\"Linux大棚版Thrift入门教程\"><a href=\"#Linux大棚版Thrift入门教程\" class=\"headerlink\" title=\"Linux大棚版Thrift入门教程\"></a><a href=\"http://roclinux.cn/?p=3316\" target=\"_blank\" rel=\"noopener\">Linux大棚版Thrift入门教程</a></h4><p>thrift 作为一种 RPC 框架，其诞生以来就受到了广泛关注，虽然 RPC 框架有很多种，但是 thrift 还是有其独特优势的，这篇入门教程篇幅较长，作者介绍了 thrift 的基础概念，同时通过实例介绍了如何应用 thrift，比其他教程要详细很多。</p>\n<h4 id=\"Shell脚本编程30分钟入门\"><a href=\"#Shell脚本编程30分钟入门\" class=\"headerlink\" title=\"Shell脚本编程30分钟入门\"></a><a href=\"https://github.com/qinjx/30min_guides/blob/master/shell.md\" target=\"_blank\" rel=\"noopener\">Shell脚本编程30分钟入门</a></h4><p>前端工程师和 shell 打交道会比较少，但是知道一些往往会节省自己很多时间，比如定时备份、定时提交修改神马的，这篇文章虽然看上去有点“标题党”的意思，但是作者介绍的还算详细，同时作者还有一些其他类型的“30 分钟教程”，也可以看一看（作者是多么喜欢30分钟这个时间段啊。。）</p>\n<h4 id=\"Docker-入门\"><a href=\"#Docker-入门\" class=\"headerlink\" title=\"Docker 入门\"></a><a href=\"http://www.jianshu.com/p/d4f24f8012fd\" target=\"_blank\" rel=\"noopener\">Docker 入门</a></h4><p>Docker 是一个非常有趣的项目。它最大的作用就是隔绝了操作系统环境，类似于虚拟机，但是相对于虚拟机，他又拥有绝对的高效率、和通用性。相信看完这篇文章之后，你会对docker有一个直观的认识= =</p>\n<h4 id=\"图说设计模式\"><a href=\"#图说设计模式\" class=\"headerlink\" title=\"图说设计模式\"></a><a href=\"\bhttp://design-patterns.readthedocs.io/zh_CN/latest/index.html\">图说设计模式</a></h4><p>通过画图的方式理解设计模式，以一种轻松的姿势理解高深的学问。</p>\n<h4 id=\"Go-指南\"><a href=\"#Go-指南\" class=\"headerlink\" title=\"Go 指南\"></a><a href=\"https://tour.go-zh.org/list\" target=\"_blank\" rel=\"noopener\">Go 指南</a></h4><p>该指南介绍了 Go 的大部分重要特性，同时有一些练习进行巩固。</p>\n<h4 id=\"centos-6-7安装最新版-git\"><a href=\"#centos-6-7安装最新版-git\" class=\"headerlink\" title=\"centos 6.7安装最新版 git\"></a><a href=\"https://segmentfault.com/a/1190000007134786\" target=\"_blank\" rel=\"noopener\">centos 6.7安装最新版 git</a></h4><p>阿里云上的 ECS 很多人都会选择 CentOS 系统，而作为前端，可能需要安装 nvm，但是 CentOS 6.7 默认安装的 git 版本是比较低的 1.7.1 版本，所以需要重新安装最新版 git，这篇教程讲的很详细，我按照他的步骤很顺利的就安装成功了。</p>\n<h4 id=\"Jenkins-nginx-搭建前端构建环境\"><a href=\"#Jenkins-nginx-搭建前端构建环境\" class=\"headerlink\" title=\"Jenkins+nginx 搭建前端构建环境\"></a><a href=\"https://juejin.im/post/5b371678f265da599f68dfa2\" target=\"_blank\" rel=\"noopener\">Jenkins+nginx 搭建前端构建环境</a></h4><p>废话很少，直接上代码的方式我很喜欢，Jenkins 解决了很令人头疼的构建问题，所以如果想成为一名称职的前端工程师，这是一篇值得参考和手巧的教程，赶快跟着作者的手速敲起来吧！</p>\n<h4 id=\"技术胖-155-集前端视频教程\"><a href=\"#技术胖-155-集前端视频教程\" class=\"headerlink\" title=\"技术胖 155 集前端视频教程\"></a><a href=\"https://juejin.im/post/5a5bc8c36fb9a01ca26774eb\" target=\"_blank\" rel=\"noopener\">技术胖 155 集前端视频教程</a></h4><p>技术胖在 2017 年录制的 155 集视频教程，可以免费观看，其中包括 Vue2.x、Vue-cli、Vue-router、vuex、Vue实战、weex、ES6、React基础、React全家桶、Koa2.x、Fabric.js 和 CocosCreater 实战教程等。</p>\n<h2 id=\"进阶级\"><a href=\"#进阶级\" class=\"headerlink\" title=\"进阶级\"></a>进阶级</h2><h4 id=\"深入理解JSON\"><a href=\"#深入理解JSON\" class=\"headerlink\" title=\"深入理解JSON\"></a><a href=\"https://mp.weixin.qq.com/s/CQKFfecqy3_EgW0jLfEMIQ\" target=\"_blank\" rel=\"noopener\">深入理解JSON</a></h4><p>作者将 JSON 和 JS 中的 JSON 都梳理了一遍，也对里面的细节和注意点进行了一次遍历，从中我们能够知道 JSON 是一种语法上衍生于JS语言的一种轻量级的数据交换格式，也会明白 JSON 相对于一般的JS数据结构（尤其是对象）的差别；除此之外，作者更进一步地仔细讨论了 JS 中关于 JSON 处理的 3 个函数和细节。</p>\n<h4 id=\"通用-CSS-笔记、建议与指导\"><a href=\"#通用-CSS-笔记、建议与指导\" class=\"headerlink\" title=\"通用 CSS 笔记、建议与指导\"></a><a href=\"https://github.com/chadluo/CSS-Guidelines/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">通用 CSS 笔记、建议与指导</a></h4><p>作者总结了 CSS 的相关规范，但是建议下面腾讯 AlloyTeam 总结的那篇。。</p>\n<h4 id=\"前端规范总结-AlloyTeam\"><a href=\"#前端规范总结-AlloyTeam\" class=\"headerlink\" title=\"前端规范总结-AlloyTeam\"></a><a href=\"http://alloyteam.github.io/CodeGuide/\" target=\"_blank\" rel=\"noopener\">前端规范总结-AlloyTeam</a></h4><p>腾讯 AlloyTeam 通过分析 github 代码库总结出来的工程师代码书写习惯，内容很全很详细，值得一看！</p>\n<h4 id=\"CSS进阶系列\"><a href=\"#CSS进阶系列\" class=\"headerlink\" title=\"CSS进阶系列\"></a><a href=\"http://www.cnblogs.com/coco1s/category/833837.html\" target=\"_blank\" rel=\"noopener\">CSS进阶系列</a></h4><p>通过作者的 github，可以看出来这是一位腾讯的大牛，作者通过 CSS 实现了很多复杂的效果，其中有些例子是《CSS揭秘》这本书里面的，这本书也是我之前强烈推荐大家看的一本 CSS 进阶书籍。</p>\n<h4 id=\"简书-前端基础进阶系列\"><a href=\"#简书-前端基础进阶系列\" class=\"headerlink\" title=\"简书-前端基础进阶系列\"></a><a href=\"http://www.jianshu.com/p/cd3fee40ef59\" target=\"_blank\" rel=\"noopener\">简书-前端基础进阶系列</a></h4><p>作者叫“波同学”，我之前是从来没有听说过作者大名的，但是读过作者这一系列的文章之后对作者的前端能力很是钦佩，同时作者的讲解能力也很强，将一些别人讲的晦涩难懂的原理讲的很透彻，十分推荐大家认真阅读一下作者这一系列的文章，我相信你看完之后你的前端水平会有很大的提升</p>\n<blockquote>\n<p>更新于2017-01-26：波同学将自己在简书上的文章都迁移到了<a href=\"https://yangbo5207.github.io/wutongluo/\" target=\"_blank\" rel=\"noopener\">自己的Gitbook</a>上</p>\n</blockquote>\n<h4 id=\"深入理解-JavaScript-系列\"><a href=\"#深入理解-JavaScript-系列\" class=\"headerlink\" title=\"深入理解 JavaScript 系列\"></a><a href=\"http://www.cnblogs.com/TomXu/archive/2011/12/15/2288411.html\" target=\"_blank\" rel=\"noopener\">深入理解 JavaScript 系列</a></h4><p>汤姆大叔写的文章，文章内容实在是多。。而且感觉难度有点大，推荐大家先看一下上面简书的前端基础进阶系列，再来看汤姆大叔这一系列的文章，可能理解起来会更容易一些。</p>\n<h4 id=\"webshell-原理\"><a href=\"#webshell-原理\" class=\"headerlink\" title=\"webshell 原理\"></a><a href=\"http://www.jianshu.com/p/02aac12e459f\" target=\"_blank\" rel=\"noopener\">webshell 原理</a></h4><p>webshell，顾名思义：web 指的是在 web 服务器上，而 shell 是用脚本语言编写的脚本程序，webshell 就是就是 web 的一个管理工具，可以对 web 服务器进行操作的权限，也叫 webadmin。接触过集群的童鞋对这个概念肯定不会感到陌生，虽然一般人不会接触到 webshell，但是多了解一些总是没错的~</p>\n<h4 id=\"全自动科学上网方案分享\"><a href=\"#全自动科学上网方案分享\" class=\"headerlink\" title=\"全自动科学上网方案分享\"></a><a href=\"https://github.com/bestswifter/blog/commit/b68a7bbc413874c3883a66b6b065413f0f351156\" title=\"[Add] 全自动科学上网方案分享\" target=\"_blank\" rel=\"noopener\">全自动科学上网方案分享</a></h4><p>有些童鞋并不了解如何通过 VPS 实现科学上网，这篇文章介绍了如何利用 VPS 进行代理配置，以及实现自动切换，讲解的很详细。</p>\n","raw":null,"categories":[{"name":"summary","path":"api/categories/summary.json"}],"tags":[{"name":"前端","path":"api/tags/前端.json"},{"name":"教程","path":"api/tags/教程.json"}]},{"title":"前端可以这样玩儿！","slug":"前端可以这样玩儿！","date":"2017-04-12T13:36:41.000Z","updated":"2019-03-02T06:40:00.870Z","comments":true,"path":"api/articles/前端可以这样玩儿！.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_40.png","content":"<p>本文总结了一些前端冷知识，相信看完之后的你一定会觉得前端为什么如此好玩儿？！（源自 Quora 上的一个帖子，同时又查阅了一些其他资料）</p>\n<h2 id=\"HTML-篇\"><a href=\"#HTML-篇\" class=\"headerlink\" title=\"HTML 篇\"></a>HTML 篇</h2><h3 id=\"浏览器地址栏运行-JavaScript-代码\"><a href=\"#浏览器地址栏运行-JavaScript-代码\" class=\"headerlink\" title=\"浏览器地址栏运行 JavaScript 代码\"></a>浏览器地址栏运行 JavaScript 代码</h3><p>这个相信很多人是知道的，在浏览器地址栏可以直接运行 JavaScript 代码，做法是以 javascript: 开头后跟要执行的语句。比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript:alert(<span class=\"string\">'hello \bMerrier :)'</span>);</span><br></pre></td></tr></table></figure>\n<p>将以上代码贴到浏览器地址栏回车后 alert 正常执行，一个弹窗神现。需要注意的是如果是通过 copy paste 代码到浏览器地址栏的话，IE 及 Chrome 会自动去掉代码开头的 javascript:，所以需要手动添加起来才能正确执行，而 Firefox 中虽然不会自动去掉，但它根本就不支持在地址栏运行 JS 代码，sigh~</p>\n<h3 id=\"浏览器地址栏运行-HTML-代码\"><a href=\"#浏览器地址栏运行-HTML-代码\" class=\"headerlink\" title=\"浏览器地址栏运行 HTML 代码\"></a>浏览器地址栏运行 HTML 代码</h3><p>如果说上面那条小秘密知道的人还算多的话，这条秘笈知道的人就要少一些了，在非 IE 内核的浏览器地址栏可以直接运行 HTML 代码！比如在地址栏输入以下代码然后回车运行，会出现指定的页面内容。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data:text/html,<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, world!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_40.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"你造么，可以把浏览器当编辑器\"><a href=\"#你造么，可以把浏览器当编辑器\" class=\"headerlink\" title=\"你造么，可以把浏览器当编辑器\"></a>你造么，可以把浏览器当编辑器</h3><p>还是浏览器地址栏上做文章，将以下代码贴到地址栏运行后浏览器变成了一个原始而简单的编辑器，与 Windows 自带的 notepad 一样，吼吼。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data:text/html, <span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">contenteditable</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_47.gif\" alt=\"\" width=\"500\"></div>\n\n<p>归根结底多亏了 HTML5 中新加的 contenteditable 属性，当元素指定了该属性后，元素的内容成为可编辑状态。</p>\n<h3 id=\"整个页面变得可编辑\"><a href=\"#整个页面变得可编辑\" class=\"headerlink\" title=\"整个页面变得可编辑\"></a>整个页面变得可编辑</h3><p>将以下代码放到 console 执行后，整个页面将变得可编辑，随意践踏吧~</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.body.contentEditable=<span class=\"string\">'true'</span>;</span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_45.gif\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"利用-a-标签自动解析-URL\"><a href=\"#利用-a-标签自动解析-URL\" class=\"headerlink\" title=\"利用 a 标签自动解析 URL\"></a>利用 a 标签自动解析 URL</h3><p>很多时候我们有从一个 URL 中提取域名，查询关键字，变量参数值等的需要，而万万没想到可以让浏览器方便地帮我们完成这一任务而不用我们写正则去抓取。方法就在 JS 代码里先创建一个a标签然后将需要解析的 URL 赋值给 a 的 href 属性，然后就得到了一切我们想要的了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'a'</span>);</span><br><span class=\"line\">a.href = <span class=\"string\">'http://www.cnblogs.com/wayou/p/'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.host);</span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_41.png\" alt=\"\" width=\"500\"></div>\n\n<p>利用这一原理，稍微扩展一下，就得到了一个更加健壮的解析 URL 各部分的通用方法了</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseURL</span>(<span class=\"params\">url</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a =  <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'a'</span>);</span><br><span class=\"line\">    a.href = url;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        source: url,</span><br><span class=\"line\">        protocol: a.protocol.replace(<span class=\"string\">':'</span>,<span class=\"string\">''</span>),</span><br><span class=\"line\">        host: a.hostname,</span><br><span class=\"line\">        port: a.port,</span><br><span class=\"line\">        query: a.search,</span><br><span class=\"line\">        params: (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> ret = &#123;&#125;,</span><br><span class=\"line\">                seg = a.search.replace(<span class=\"regexp\">/^\\?/</span>,<span class=\"string\">''</span>).split(<span class=\"string\">'&amp;'</span>),</span><br><span class=\"line\">                len = seg.length, i = <span class=\"number\">0</span>, s;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (;i&lt;len;i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!seg[i]) &#123; <span class=\"keyword\">continue</span>; &#125;</span><br><span class=\"line\">                s = seg[i].split(<span class=\"string\">'='</span>);</span><br><span class=\"line\">                ret[s[<span class=\"number\">0</span>]] = s[<span class=\"number\">1</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">        &#125;)(),</span><br><span class=\"line\">        file: (a.pathname.match(<span class=\"regexp\">/\\/([^\\/?#]+)$/i</span>) || [,<span class=\"string\">''</span>])[<span class=\"number\">1</span>],</span><br><span class=\"line\">        hash: a.hash.replace(<span class=\"string\">'#'</span>,<span class=\"string\">''</span>),</span><br><span class=\"line\">        path: a.pathname.replace(<span class=\"regexp\">/^([^\\/])/</span>,<span class=\"string\">'/$1'</span>),</span><br><span class=\"line\">        relative: (a.href.match(<span class=\"regexp\">/tps?:\\/\\/[^\\/]+(.+)/</span>) || [,<span class=\"string\">''</span>])[<span class=\"number\">1</span>],</span><br><span class=\"line\">        segments: a.pathname.replace(<span class=\"regexp\">/^\\//</span>,<span class=\"string\">''</span>).split(<span class=\"string\">'/'</span>)</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"页面拥有-ID-的元素会创建全局变量\"><a href=\"#页面拥有-ID-的元素会创建全局变量\" class=\"headerlink\" title=\"页面拥有 ID 的元素会创建全局变量\"></a>页面拥有 ID 的元素会创建全局变量</h3><p>在一张 HTML 页面中，所有设置了 ID 属性的元素会在 JavaScript 的执行环境中创建对应的全局变量，这意味着 document.getElementById 像人的阑尾一样显得多余了。但实际项目中最好老老实实该怎么写就怎么写，毕竟常规代码出乱子的机会要小得多。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"sample\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(sample);</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_42.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"加载-CDN-文件时，可以省掉-HTTP-标识\"><a href=\"#加载-CDN-文件时，可以省掉-HTTP-标识\" class=\"headerlink\" title=\"加载 CDN 文件时，可以省掉 HTTP 标识\"></a>加载 CDN 文件时，可以省掉 HTTP 标识</h3><p>现在很流行的 CDN 即从专门的服务器加载一些通用的 JS 和 CSS 文件，出于安全考虑有的 CDN 服务器使用 HTTPS 方式连接，而有的是传统的 HTTP，其实我们在使用时可以忽略掉这个，将它从 URL 中省去。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//domain.com/path/to/script.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"利用-script-标签保存任意信息\"><a href=\"#利用-script-标签保存任意信息\" class=\"headerlink\" title=\"利用 script 标签保存任意信息\"></a>利用 script 标签保存任意信息</h3><p>将 script 标签设置为 type=’text’ 然后可以在里面保存任意信息，之后可以在 JavaScript 代码中很方便地获取。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"template\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>This won't display<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> text = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'template'</span>).innerHTML</span><br></pre></td></tr></table></figure>\n<h2 id=\"CSS-篇\"><a href=\"#CSS-篇\" class=\"headerlink\" title=\"CSS 篇\"></a>CSS 篇</h2><h3 id=\"我的鼠标呢？\"><a href=\"#我的鼠标呢？\" class=\"headerlink\" title=\"我的鼠标呢？\"></a>我的鼠标呢？</h3><p>相信你看完以下代码后能够预料到会出现什么效果。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&#123;</span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: none<span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"简单的文字模糊效果\"><a href=\"#简单的文字模糊效果\" class=\"headerlink\" title=\"简单的文字模糊效果\"></a>简单的文字模糊效果</h3><p>以下两行简单的 CSS3 代码可达到将文字模糊化处理的目的，出来的效果有点像使用 PS 的滤镜，so cool!</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: transparent;</span><br><span class=\"line\">    <span class=\"attribute\">text-shadow</span>: <span class=\"number\">#111</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"垂直居中\"><a href=\"#垂直居中\" class=\"headerlink\" title=\"垂直居中\"></a>垂直居中</h3><p>当然你可以将容器设置为 display: table，然后将子元素也就是要垂直居中显示的元素设置为 display: table-cell，然后加上 vertical-align: middle 来实现，但此种实现往往会因为 display: table 而破坏整体布局，那还不如直接用 table 标签了呢。下面这个样式利用了 translate 来巧妙实现了垂直居中样式，需 IE9+。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.center-vertical</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-50%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>相比而言，水平居中要简单得多，像上面提到的 text-align: center，经常用到的技巧还有 margin: 0 auto。但对于 margin 大法也只在子元素宽度小于容器宽度时管用，当子元素宽度大于容器宽度时此法失效。如法炮制，利用 left 和 transform 同样可实现水平居中，不过意义不大，毕竟 text-align 和 margin 差不多满足需求了。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.center-horizontal</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(-50%); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"多重边框\"><a href=\"#多重边框\" class=\"headerlink\" title=\"多重边框\"></a>多重边框</h3><p>利用重复指定 box-shadow 来达到多个边框的效果</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* CSS Border with Box-Shadow Example */</span></span><br><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">6px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.2),</span><br><span class=\"line\">                <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">12px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.2),</span><br><span class=\"line\">                <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">18px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.2),</span><br><span class=\"line\">                <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">24px</span> <span class=\"built_in\">rgba</span>(0, 0, 0, 0.2);</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">400px</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_43.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"实时编辑-CSS\"><a href=\"#实时编辑-CSS\" class=\"headerlink\" title=\"实时编辑 CSS\"></a>实时编辑 CSS</h3><p>通过设置 style 标签的 display: block 样式可以让页面的 style 标签显示出来，并且加上 contentEditable 属性后可以让样式成为可编辑状态，更改后的样式效果也是实时更新呈现的。此技巧在 IE 下无效。拥有此技能者，逆天也！</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">style</span>=<span class=\"string\">\"display:block\"</span> <span class=\"attr\">contentEditable</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">        \t<span class=\"selector-tag\">body</span> &#123; <span class=\"attribute\">color</span>: blue &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_46.gif\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"创建长宽比固定的元素\"><a href=\"#创建长宽比固定的元素\" class=\"headerlink\" title=\"创建长宽比固定的元素\"></a>创建长宽比固定的元素</h3><p>通过设置父级窗口的 padding-bottom 可以达到让容器保持一定的长度比的目的，这在响应式页面设计中比较有用，能够保持元素不变形。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 100%; position: relative; padding-bottom: 20%;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"position: absolute; left: 0; top: 0; right: 0; bottom: 0;background-color:yellow;\"</span>&gt;</span></span><br><span class=\"line\">        this content will have a constant aspect ratio that varies based on the width.</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_48.gif\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"CSS-中也可以做简单运算\"><a href=\"#CSS-中也可以做简单运算\" class=\"headerlink\" title=\"CSS 中也可以做简单运算\"></a>CSS 中也可以做简单运算</h3><p>通过 CSS 中的 calc 方法可以进行一些简单的运算，从而达到动态指定元素样式的目的。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-position</span>: <span class=\"built_in\">calc</span>(100% - 50px) <span class=\"built_in\">calc</span>(100% - 20px);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"JavaScript-篇\"><a href=\"#JavaScript-篇\" class=\"headerlink\" title=\"JavaScript 篇\"></a>JavaScript 篇</h2><h3 id=\"生成随机字符串\"><a href=\"#生成随机字符串\" class=\"headerlink\" title=\"生成随机字符串\"></a>生成随机字符串</h3><p>利用 Math.random 和 toString 生成随机字符串，来自前一阵子看到的一篇<a href=\"http://flippinawesome.org/2013/12/23/45-useful-javascript-tips-tricks-and-best-practices/\" target=\"_blank\" rel=\"noopener\">博文</a>。这里的技巧是利用了 toString 方法可以接收一个基数作为参数的原理，这个基数从 2 到 36 封顶。如果不指定，默认基数是 10 进制。略屌！</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generateRandomAlphaNum</span>(<span class=\"params\">len</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> rdmString = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (; rdmString.length &lt; len; )&#123;</span><br><span class=\"line\">        rdmString += <span class=\"built_in\">Math</span>.random().toString(<span class=\"number\">36</span>).substr(<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rdmString.substr(<span class=\"number\">0</span>, len);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_44.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"整数的操作\"><a href=\"#整数的操作\" class=\"headerlink\" title=\"整数的操作\"></a>整数的操作</h3><p>JavaScript 中是没有整型概念的，但利用好位操作符可以轻松处理，同时获得效率上的提升。|0 和 ~~ 是很好的一个例子，使用这两者可以将浮点转成整型且效率方面要比同类的 parseInt, Math.round 要快。在处理像素及动画位移等效果的时候会很有用。性能比较<a href=\"http://jsperf.com/math-floor-vs-math-round-vs-parseint/42\" target=\"_blank\" rel=\"noopener\">见此</a>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = (<span class=\"number\">12.4</span> / <span class=\"number\">4.13</span>) | <span class=\"number\">0</span>; <span class=\"comment\">// 结果为3</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = ~~(<span class=\"number\">12.4</span> / <span class=\"number\">4.13</span>); <span class=\"comment\">// 结果为3</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"重写原生浏览器方法以实现新功能\"><a href=\"#重写原生浏览器方法以实现新功能\" class=\"headerlink\" title=\"重写原生浏览器方法以实现新功能\"></a>重写原生浏览器方法以实现新功能</h3><p>下面的代码通过重写浏览器的 alert 让它可以记录弹窗的次数。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> oldAlert = <span class=\"built_in\">window</span>.alert,</span><br><span class=\"line\">        count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.alert = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">        count ++;</span><br><span class=\"line\">        oldAlert(a + <span class=\"string\">\"\\n You've called alert \"</span> + count + <span class=\"string\">\" times now. Stop, it's evil!\"</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\">alert(<span class=\"string\">\"Hello World\"</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"console-显示图片以及为文字加样式\"><a href=\"#console-显示图片以及为文字加样式\" class=\"headerlink\" title=\"console 显示图片以及为文字加样式\"></a>console 显示图片以及为文字加样式</h3><p>在 Chrome 的开发者工具里，console 可以加样式，可以显示缤纷的颜色，甚至图片。简直爽翻了。具体来说，是可以对输出到 console 控制台的文字进行 CSS 控制。格式如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"%c需要输出的信息 \"</span>, <span class=\"string\">\"css 代码\"</span>);</span><br></pre></td></tr></table></figure>\n<p>下面是一些已经写好的 console 新玩法代码，可以在 chrome 控制台里面实测（关于 console 的更多玩法，推荐 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console#示例\" target=\"_blank\" rel=\"noopener\">MDN关于console的文档</a>）：</p>\n<h4 id=\"1-3D-Text\"><a href=\"#1-3D-Text\" class=\"headerlink\" title=\"1. 3D Text\"></a>1. 3D Text</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"%c3D Text\"</span>,<span class=\"string\">\" text-shadow: 0 1px 0 #ccc,0 2px 0 #c9c9c9,0 3px 0 #bbb,0 4px 0 #b9b9b9,0 5px 0 #aaa,</span></span><br><span class=\"line\"><span class=\"string\">0 6px 1px rgba(0,0,0,.1),0 0 5px rgba(0,0,0,.1),0 1px 3px rgba(0,0,0,.3),0 3px 5px rgba(0,0,0,.2),</span></span><br><span class=\"line\"><span class=\"string\">0 5px 10px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.2),0 20px 20px rgba(0,0,0,.15);font-size:5em\"</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-Colorful-CSS\"><a href=\"#2-Colorful-CSS\" class=\"headerlink\" title=\"2. Colorful CSS\"></a>2. Colorful CSS</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"%cColorful CSS\"</span>,<span class=\"string\">\"background: rgba(252,234,187,1);background: -moz-linear-gradient(left, rgba(252,234,187,1) 0%, </span></span><br><span class=\"line\"><span class=\"string\">rgba(175,250,77,1) 12%, rgba(0,247,49,1) 28%, rgba(0,210,247,1) 39%,rgba(0,189,247,1) 51%, rgba(133,108,217,1) 64%, </span></span><br><span class=\"line\"><span class=\"string\">rgba(177,0,247,1) 78%, rgba(247,0,189,1) 87%, rgba(245,22,52,1) 100%);background: -webkit-gradient(left top, right top, </span></span><br><span class=\"line\"><span class=\"string\">color-stop(0%, rgba(252,234,187,1)), color-stop(12%, rgba(175,250,77,1)), color-stop(28%, rgba(0,247,49,1)), </span></span><br><span class=\"line\"><span class=\"string\">color-stop(39%, rgba(0,210,247,1)), color-stop(51%, rgba(0,189,247,1)), color-stop(64%, rgba(133,108,217,1)), </span></span><br><span class=\"line\"><span class=\"string\">color-stop(78%, rgba(177,0,247,1)), color-stop(87%, rgba(247,0,189,1)), color-stop(100%, rgba(245,22,52,1)));</span></span><br><span class=\"line\"><span class=\"string\">background: -webkit-linear-gradient(left, rgba(252,234,187,1) 0%, rgba(175,250,77,1) 12%, rgba(0,247,49,1) 28%, </span></span><br><span class=\"line\"><span class=\"string\">rgba(0,210,247,1) 39%, rgba(0,189,247,1) 51%, rgba(133,108,217,1) 64%, rgba(177,0,247,1) 78%, rgba(247,0,189,1) 87%, </span></span><br><span class=\"line\"><span class=\"string\">rgba(245,22,52,1) 100%);background: -o-linear-gradient(left, rgba(252,234,187,1) 0%, rgba(175,250,77,1) 12%, rgba(0,247,49,1) 28%, </span></span><br><span class=\"line\"><span class=\"string\">rgba(0,210,247,1) 39%, rgba(0,189,247,1) 51%, rgba(133,108,217,1) 64%, rgba(177,0,247,1) 78%, rgba(247,0,189,1) 87%, </span></span><br><span class=\"line\"><span class=\"string\">rgba(245,22,52,1) 100%);background: -ms-linear-gradient(left, rgba(252,234,187,1) 0%, rgba(175,250,77,1) 12%, rgba(0,247,49,1) 28%, </span></span><br><span class=\"line\"><span class=\"string\">rgba(0,210,247,1) 39%, rgba(0,189,247,1) 51%, rgba(133,108,217,1) 64%, rgba(177,0,247,1) 78%, rgba(247,0,189,1) 87%, </span></span><br><span class=\"line\"><span class=\"string\">rgba(245,22,52,1) 100%);background: linear-gradient(to right, rgba(252,234,187,1) 0%, rgba(175,250,77,1) 12%, rgba(0,247,49,1) 28%, </span></span><br><span class=\"line\"><span class=\"string\">rgba(0,210,247,1) 39%, rgba(0,189,247,1) 51%, rgba(133,108,217,1) 64%, rgba(177,0,247,1) 78%, rgba(247,0,189,1) 87%, rgba(245,22,52,1) 100%);</span></span><br><span class=\"line\"><span class=\"string\">filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fceabb', endColorstr='#f51634', GradientType=1 );font-size:5em\"</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-Rainbow-Text\"><a href=\"#3-Rainbow-Text\" class=\"headerlink\" title=\"3. Rainbow Text\"></a>3. Rainbow Text</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'%cRainbow Text '</span>, <span class=\"string\">'background-image:-webkit-gradient( linear, left top, right top, color-stop(0, #f22), </span></span><br><span class=\"line\"><span class=\"string\">color-stop(0.15, #f2f), color-stop(0.3, #22f), color-stop(0.45, #2ff), color-stop(0.6, #2f2),color-stop(0.75, #2f2), </span></span><br><span class=\"line\"><span class=\"string\">color-stop(0.9, #ff2), color-stop(1, #f22) );color:transparent;-webkit-background-clip: text;font-size:5em;'</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-输出图片\"><a href=\"#4-输出图片\" class=\"headerlink\" title=\"4. 输出图片\"></a>4. 输出图片</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"%c\"</span>, <span class=\"string\">\"padding:50px 300px;line-height:120px;background:url('https://ss0.bdstatic.com/5aV1bjqh\\_Q23odCf/static/superman/img/logo/bd\\_logo1_31bdc765.png') no-repeat;\"</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"不声明第三个变量的值交换\"><a href=\"#不声明第三个变量的值交换\" class=\"headerlink\" title=\"不声明第三个变量的值交换\"></a>不声明第三个变量的值交换</h3><p>我们都知道交换两个变量值的常规做法，那就是声明一个中间变量来暂存。但鲜有人去挑战不声明中间变量的情况，下面的代码给出了这种实现。蛮有创意的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">2</span>;</span><br><span class=\"line\">a= [b, b = a][<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_49.jpg\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"万物皆对象\"><a href=\"#万物皆对象\" class=\"headerlink\" title=\"万物皆对象\"></a>万物皆对象</h3><p>在 JavaScript 的世界，万物皆对象。除了 null 和 undefined，其他基本类型数字，字符串和布尔值都有对应有包装对象。对象的一个特征是你可以在它身上直接调用方法。对于数字基本类型，当试图在其身上调用 toString 方法会失败，但用括号括起来后再调用就不会失败了，内部实现是用相应的包装对象将基本类型转为对象。所以 <strong>(1).toString()</strong> 相当于 <strong>new Number(1).toString()</strong>。因此，你的确可以把基本类型数字，字符串，布尔等当对象使用的，只是注意语法要得体。同时我们注意到，JavaScript 中数字是不分浮点和整形的，所有数字其实均是浮点类型，只是把小数点省略了而已，比如你看到的 1 可以写成 1.，这也就是为什么当你试图 1.toString() 时会报错，所以正确的写法应该是这样：<strong>1..toString()</strong>，或者如上面所述加上括号，这里括号的作用是纠正 JS 解析器，不要把 1 后面的点当成小数点。内部实现如上面所述，是将 1. 用包装对象转成对象再调用方法。</p>\n<h3 id=\"If-语句的变形\"><a href=\"#If-语句的变形\" class=\"headerlink\" title=\"If 语句的变形\"></a>If 语句的变形</h3><p>当你需要写一个 if 语句的时候，不妨尝试另一种更简便的方法，用 JavaScript 中的逻辑操作符来代替。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> day = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>).getDay() === <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//传统if语句</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (day) &#123;</span><br><span class=\"line\">  alert(<span class=\"string\">'Today is Sunday!'</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//运用逻辑与代替if</span></span><br><span class=\"line\">day &amp;&amp; alert(<span class=\"string\">'Today is Sunday!'</span>);</span><br></pre></td></tr></table></figure>\n<p>比如上面的代码，首先得到今天的日期，如果是星期天，则弹窗，否则什么也不做。我们知道逻辑操作存在短路的情况，对于逻辑与表达式，只有两者都真才结果才为真，如果前面的 day 变量被判断为假了，那么对于整个与表达式来说结果就是假，所以就不会继续去执行后面的 alert 了，如果前面 day 为真，则还要继续执行后面的代码来确定整个表达式的真假。利用这点达到了 if 的效果。</p>\n<h3 id=\"禁止别人以-iframe-加载你的页面\"><a href=\"#禁止别人以-iframe-加载你的页面\" class=\"headerlink\" title=\"禁止别人以 iframe 加载你的页面\"></a>禁止别人以 iframe 加载你的页面</h3><p>下面的代码已经不言自明了，没什么好多说的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.location != <span class=\"built_in\">window</span>.parent.location) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.parent.location = <span class=\"built_in\">window</span>.location;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://www.quora.com/Web-Development/What-are-the-most-interesting-HTML-JS-DOM-CSS-hacks-that-most-web-developers-dont-know-about?utm\\_source=html5weekly&amp;utm\\_medium=email\" target=\"_blank\" rel=\"noopener\">What are the most interesting HTML/JS/DOM/CSS hacks that most web developers don’t know about?</a></li>\n<li><a href=\"http://www.cnblogs.com/Wayou/p/things_you_dont_know_about_frontend.html\" target=\"_blank\" rel=\"noopener\">前端不为人知的一面–前端冷知识集锦</a></li>\n</ul>\n","raw":null,"categories":[{"name":"summary","path":"api/categories/summary.json"}],"tags":[{"name":"技巧","path":"api/tags/技巧.json"},{"name":"JS","path":"api/tags/JS.json"},{"name":"CSS","path":"api/tags/CSS.json"},{"name":"HTML","path":"api/tags/HTML.json"}]},{"title":"是时候为网易云音乐的评论打call了","slug":"是时候为网易云音乐的评论打call了","date":"2017-11-07T08:37:46.000Z","updated":"2019-03-02T06:40:00.874Z","comments":true,"path":"api/articles/是时候为网易云音乐的评论打call了.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_232.jpeg","content":"<p>如果你问我，用的最频繁的软件是什么？我的回答不会是微信 or QQ ，而是<strong>网易云音乐</strong>！是的，虽然从研究生开始才入了网易云音乐的坑，但是入了坑才发现之前的音乐播放器都是什么鬼东西啊我的天！而更吸引我的是网易云音乐的评论，一个纯粹的音乐软件竟然把评论系统做的如此有声有色实属不易；所以，是时候为网易云音乐的评论打 call 了！</p>\n<h2 id=\"一生所爱（卢冠廷版）\"><a href=\"#一生所爱（卢冠廷版）\" class=\"headerlink\" title=\"一生所爱（卢冠廷版）\"></a>一生所爱（卢冠廷版）</h2><p>第一首给我最爱的《一生所爱》，最爱的电影《大话西游》和最喜欢的导演星爷</p>\n<ul>\n<li>不戴金箍，如何救你；戴了金箍，如何爱你。</li>\n<li>白晶晶爱的是孙悟空，爱白晶晶的是至尊宝，紫霞爱的是至尊宝，爱紫霞的是孙悟空，你以为是同一个人，其实已经相隔 500 年。</li>\n<li>95 版此恨绵绵无绝期，15版曾经沧海难为水，时移、事易，不同心境而已。无悔，都是自己的回忆。有回忆，还是好的。有怨，还是未能免俗。世俗了，我能理解，不接受。</li>\n<li>《大话西游》的结尾有句话，“你看那个人，好奇怪哟，象一条狗”。像条狗的人，是放弃了人间的男女情欢，无欲无念兢兢业业走在西天取经路上的至尊宝。他如你我这般，收起了脾气火气不再任性淘气，只顾奔波职场。人生百年，谁不曾大闹天宫，谁不曾头上紧箍，谁不曾爱上层楼，谁不曾孤单上路。</li>\n</ul>\n<h2 id=\"一生所爱（莫文蔚版）\"><a href=\"#一生所爱（莫文蔚版）\" class=\"headerlink\" title=\"一生所爱（莫文蔚版）\"></a>一生所爱（莫文蔚版）</h2><p>莫文蔚在天籁之战第八期上的翻唱版本，就像评论说的“兜兜转转，最终没有得到孙悟空的白晶晶又唱起了一生所爱，我想没有人会比她更适合翻唱这首歌了。”</p>\n<ul>\n<li>想要救紫霞就必须打败牛魔王，想要打败牛魔王就必须要变成孙悟空，想要变成孙悟空就必须忘掉七情六欲从此不能再有半点沾染。人生就是这样：想自由地和心爱之人在一起必须要事业有成，想要事业有成就必须要抛弃天真戴上面具，当你变得有能力给心爱之人一切时，却发现找不回最初的自己亦失去了爱的能力。</li>\n<li>白晶晶和紫霞都找到了如意郎君，只有至尊宝沉迷在“大话西游”的世界出不来。</li>\n<li>“昨晚你念晶晶的名字98次，哦，晶晶是我的娘子，还有个叫紫霞的你念了784次，啊，这紫霞一定欠你很多钱。”之前以为这句台词只是为了搞笑</li>\n<li>知乎上有个提问：为何我年龄越大，看周星驰的电影就越心酸？点赞数最高的答案结尾写道：究其原因，我们都变成了我们当初讨厌的模样。</li>\n<li>“从此相逢，便是路人”——一致《一生所爱》</li>\n<li>孟婆汤是否分六口，一口出世甜、二口叛逆辣、三口珍惜酸、四口情责苦、五口身心麻，最后一口却为白水，淡了口中味，忘了前尘事，泯了爱恩仇，舒了川字眉</li>\n<li>每个男人都想当至尊宝有梦想的日子，简单快乐，却不得不戴上紧箍咒，变成齐天大圣，但你会失去很多，生活就是紧箍咒，社会就是牛魔王，父母就是唐僧，紫霞就是梦想，可是你却活的像条狗</li>\n</ul>\n<h2 id=\"I-Wanna-Fuck-You\"><a href=\"#I-Wanna-Fuck-You\" class=\"headerlink\" title=\"I Wanna Fuck You\"></a>I Wanna Fuck You</h2><p>额。。我英语不好。。</p>\n<ul>\n<li>想草就直说，别披着爱情的虚伪</li>\n<li>看到歌名我沉默了，我想了很久，还是同意了，来吧，阿肯，如果你不介意我是个男的话</li>\n<li>有时候你想约个炮，却不小心谈了场恋爱；有时候你想好好谈个恋爱，却发现只是约了个炮。世界那么大，床却那么小，床上的两个人曾经那么好，却不能一起携手到老。我喜欢牵了手就能成婚的故事，却活在了一个上了床也没有结果的时代。</li>\n</ul>\n<h2 id=\"隔烟水（Cover-晃儿）\"><a href=\"#隔烟水（Cover-晃儿）\" class=\"headerlink\" title=\"隔烟水（Cover 晃儿）\"></a>隔烟水（Cover 晃儿）</h2><p>歌手：暖阳/特曼，之前一直看不起古风类的歌曲，后来发现有些古风歌曲不管是词还是曲都还是蛮不错的。。</p>\n<ul>\n<li>爹爹给我的基因也就只有美貌了</li>\n<li>我只剩一百块了 我还是愿意花三十块钱打个车去找你 六十块钱买两张电影票再花八块钱给你买两杯奶茶 剩下两块钱自己坐公交车到银行 提三百万明天我们一起花</li>\n<li>总有一天，你会碰到这样一个女孩，她温柔体贴，漂亮大方，不嫌你穷，不嫌你丑，不要你的钱，也不要你的车，也不要你。</li>\n</ul>\n<h2 id=\"Strength-Of-A-Thousand-Men\"><a href=\"#Strength-Of-A-Thousand-Men\" class=\"headerlink\" title=\"Strength Of A Thousand Men\"></a>Strength Of A Thousand Men</h2><p>自从听了几首纯音乐之后，日推就再也没有词了。。</p>\n<ul>\n<li>尼玛 送快递 听这些音乐 感觉自己在护送核弹</li>\n<li>别让 isis 看到这个歌单。。。</li>\n<li>我要把中国的雾霾全吸干净 不要拦着我</li>\n<li>借我三千虎骑，复我浩荡中华！ 饮马恒河畔，剑指天山西； 碎叶城揽月，库叶岛赏雪； 黑海之滨垂钓，贝加尔湖张弓； 中南半岛访古，东京废墟遥祭华夏列祖。 汉旗指处，望尘逃遁——敢犯中华天威者、虽远必诛;</li>\n<li>爸妈，对不起，原谅我的不辞而别。我只是在床上听了这首音乐，感觉地球有灾难了，我必须站出来了！</li>\n<li>扶朕起来！朕还能再刷几十道高数！！</li>\n</ul>\n<h2 id=\"步戏\"><a href=\"#步戏\" class=\"headerlink\" title=\"步戏\"></a>步戏</h2><p>歌手：五音Jw</p>\n<ul>\n<li>我此生遇到过三个戏子，第一个哥哥演绎的程蝶衣，一生戏痴，第二个二月红，以情入戏，第三个解语花，红妆倾城，从此入了戏，世间有朵解语花，凭谁解花语 这三个中有两个在三叔笔下 他们都有血有肉 对于我来说已经不只是一个书中的角色那么简单了 我本是听书人 奈何入戏太深——典狱司</li>\n<li>讲真的，哪一天这歌很火了，他们就开始疯狂的刷评论，而我们这些老一辈的评论就有很重要的历史意义了，是我们帮他们打下江山，那时候我们早开始新的旅程了，而他们还刚开始。不知过了多久，他们便会发现，哪里都有我们的足迹</li>\n<li>这么多年，他硬是将这身粉色穿出了杀气。</li>\n<li>当这个歌没火的时候评论多半在说第几第几 坐等火 不火没道理之类的 火了之后人们才开始说歌词和故事 而没有故事的万年单身狗只能凭借一腔喜欢刷评论 简单而执着</li>\n<li>瞎子无眼，却道破天机。 哑巴无言，却生死不弃。 戏子无情，却缘定倾心。 天真无邪，却阴谋算尽。</li>\n<li>一身是血的他笑着嘲笑吴邪太天真，告诉他倒斗界里有规矩，不管同伴是谁都要先保自己，却忘了是谁一身伤仍披着沉重的盔甲，忍受着头发钻进伤口的痛苦，一步一步把吴邪带出山洞；忘了是谁还未了解计划的全部，就为了吴邪铤而走险，与强大的对手搏斗。他叫解雨臣，有着世界上最冰冷的温柔。</li>\n</ul>\n<h2 id=\"九九八十一-piano-ver\"><a href=\"#九九八十一-piano-ver\" class=\"headerlink\" title=\"九九八十一 piano ver.\"></a>九九八十一 piano ver.</h2><p>评论的各位大佬真的是 666</p>\n<ul>\n<li>“何谓孤寂？”“清风、艳日，无笑意。”“可否具体？”“左拥、右抱，无情欲。”“可否再具体？”“不得你。”</li>\n<li>“何谓思服？”“巧笑、含睇、山阿盼。”“可否具体？”“琴瑟、钟鼓、寤寐求。”“可否再具体？”“不见你。”</li>\n<li>“何谓无医？” “灵丹、妙药、救不急。”“可否具体”“华佗、仲景、摇头不语。”“可否再具体？”“思你成疾”</li>\n<li>“何谓绝色？”“长空，落日，江山雪。”“可否具体？”“青冥，残霞，天水一线。”“可否再具体？”“不如你”</li>\n<li>“何谓颓靡？” “功名、利禄、皆无趣。”“可否具体”“山珍、糟粕、食之如一。”“可否再具体？”“让我忘了你”</li>\n<li>“何谓遗世？”“流放，独立，无踪迹。”“可否具体？”“无情，冷梦，旧不记。”“可否再具体？”“他已弃。”</li>\n<li>“何谓怠惰?”“无痛，无痒，心惆怅”“可否具体”“淡欲，浅望，双眼迷离”“可否再具体”“心在轮回道”</li>\n<li>“何谓痴情？”“相思泪、千杯酒，是否再遇。”“可否具体？”“足荆棘、手玫瑰，只博一笑。”“可否再具体？”“爱上你。”</li>\n<li>“何为漂泊？”“飞蓬，飘萍，无根底。”“可否具体？”“只鹤，孤雁，寒塘独下迟。”“可否再具体？”“南游，东出，客愁，旅思，离乡千万里。”“可否更具体？”“春行，秋度，杳杳无归期。”“仍是不解。”“浪迹云游，何处寻你。”</li>\n<li>“何谓分裂？”“喜孤、厌闹、渴关注。”“可否具体？”“古风、电音、蒸汽波。”“可否再具体？”“欲卸网易却不舍。”</li>\n</ul>\n<h2 id=\"天空之城\"><a href=\"#天空之城\" class=\"headerlink\" title=\"天空之城\"></a>天空之城</h2><p>歌手：李志，其实蒋敦豪版本也不错。。</p>\n<ul>\n<li>有次校园广播，一哥们说点一首天空之城送给他的港岛妹妹，于是响起了经典的久石让</li>\n<li>这个高冷的人，关闭了微博评论，舞台上他很少话就一直唱啊唱，一曲又一曲，曲曲都肆意。起初不以为意，听久了才发现他是一个经得起单曲循环的歌者。</li>\n<li>从今天起朝九晚五，早起早睡，作息规律，有法定休假，有保险，福利，有体面的工作，有规划有书有音乐，终于成为了普通人，和这座城市的所有人一样，不再奢望仗剑走天涯不再以梦为马，终于可以坦然的承认所有的不羁都将成为过去，都将随着公交车周而复始的轮回被淹没，一切，为了更好的生活。</li>\n<li>人平均活到六十八岁，一共24820天，19万个小时，3500万分钟，差不多21亿秒左右，这10秒，你在读这段话，这十秒，你只属于我，我爱你陌生人</li>\n<li>爱民谣的人是孤独的…05年许巍，06年朴树，07年李健，08年李志，09年绕十三，10年宋冬野，11年贰佰，12年左小祖咒，13年赵雷，14年王喂马，15年周云鹏……身边朋友都说我听的歌变态…是吗？也许这就是用心听歌与用耳听歌的区别吧…</li>\n<li>梵高的爱人是一个妓女 他把所有的钱都用在画画和妓女身上 有一天妓女说想要梵高的耳朵 于是梵高真的把耳朵割下来 有了著名的梵高的自画像 但是当梵高把耳朵给了妓女的时候妓女吓的落荒而逃了 你看 为什么我把你想要的给了你 你还是走了</li>\n</ul>\n<h2 id=\"如果我爱你\"><a href=\"#如果我爱你\" class=\"headerlink\" title=\"如果我爱你\"></a>如果我爱你</h2><p>歌手：周冬雨/张一山，电视剧《春风十里，不如你》片头曲；“春风十里，不如你”，很喜欢这句话。</p>\n<ul>\n<li>公交车上来两个初中生，他们聊天声音很轻，之间的距离也保持在刚好不会碰到彼此。男孩一直害羞低着头不看旁边的女生，女孩一直笑笑的听男生说话，他们一直偷偷瞟着对方。我突然心里柔软得想要笑着落泪，那样青涩又美好的时光，就像小时候偷喝了蜜糖，踩在云端，甜在心里，却再也回不来。✔很棒</li>\n<li>如果我们不能结婚，你来当伴郎吧，因为我们也算是同走红地毯。后来我又想，如果我们不能结婚，你来砸我场、抢我走吧，我一定脱下高跟鞋，跟你私奔到天涯。后来仔细想想，算了，如果我们不能结婚，你别来了，我怕你什么都不做、却举杯祝我幸福。</li>\n<li>“我喜欢你”四个字，在我肠子里饶了几个弯儿，在我胸口跌倒好几回，爬到我的喉咙里又开始胆怯，滑到我的嘴边又改头换面，最后乔装打扮成“你好吗”又或者是“你在干嘛”</li>\n</ul>\n<h2 id=\"逝年\"><a href=\"#逝年\" class=\"headerlink\" title=\"逝年\"></a>逝年</h2><p>歌手：夏小虎，“时间似流水，催促我们长大，年轻的心有了白发，当初的人呐，你们如今在哪”</p>\n<ul>\n<li>当所有人喜欢《董小姐》的时候，你听董小姐，当所以人热捧《南山南》的时候，你循环南山南，我说这些美丽你遇见的太晚了，你说我不懂流行，我笑你不懂民谣。仅此而已。</li>\n<li>我有故事，你有酒嘛</li>\n</ul>\n<h2 id=\"逆流时光\"><a href=\"#逆流时光\" class=\"headerlink\" title=\"逆流时光\"></a>逆流时光</h2><p>歌手：安图声乐队，第一次听这首歌的时候感觉没什么，第二次感觉还可以，就这样听了将近一百次。。</p>\n<ul>\n<li>后来听说你混的风声水起 可我还是喜欢那个与世无争的你</li>\n<li>如果我18岁， 我会喜欢这首歌。 好吧，其实我28岁也喜欢， 但是，我已经38岁了。 那又怎样，我48岁依旧爱这首歌。</li>\n<li>一般般吧，我也就单曲循环了2个小时就换歌了。</li>\n<li>愿你有高跟鞋也有跑鞋，喝茶也喝酒。愿你有勇敢的朋友，有牛逼的对手。愿你对过往的一切情深意重，但从不回头。愿你特别美丽，特别平静，特别凶狠，也特别温柔。</li>\n</ul>\n<h2 id=\"慢慢捱\"><a href=\"#慢慢捱\" class=\"headerlink\" title=\"慢慢捱\"></a>慢慢捱</h2><p>歌手：土不叔叔乐队/李柏凝，曲很简单，词也很简单，但是放在一起就不简单了</p>\n<ul>\n<li>带着当初跟朋友借的200块买了一张火车票孤身一人出门闯荡，当时立志士不成名誓不还，闯过北京，去过上海，到过深圳，从当初的200块到30万，再到200万，500万，800万，再到现在的1300万，我没有任何炫富的意思，我只是想告诉大家，手机像素越高拍的照片越清晰。</li>\n<li>网易诗人多如狗，可惜都没女朋友</li>\n<li>生来平庸，茅屋未破衣暖饭饱。打量比较，陷于名利未圆其梦。前方泥沼，后有余埃。微笑苦笑，未知几年几日，死于荒谬。</li>\n</ul>\n<h2 id=\"一个歌手的情书\"><a href=\"#一个歌手的情书\" class=\"headerlink\" title=\"一个歌手的情书\"></a>一个歌手的情书</h2><p>歌手：周三/蔡健雅，从《红色高跟鞋》认识蔡健雅，然后就反复地听她的歌了</p>\n<ul>\n<li>你不是赵雷的南方姑娘，不是马頔的傲寒，不是宋冬野的董小姐，不是李志的港岛妹妹，不是海龟的玛卡瑞纳，不是王威的她，不是贰佰的玫瑰，不是尧十三的北方女王，不是许巍的故乡，不是低苦艾的小花花，不是陈粒的祝星。不是周三情书里的那个心上人。你只是风尘中我恋恋不舍的姑娘。</li>\n<li>她说民谣太穷了，一听就是一根烟，一听就是一瓶酒。而我只有一根烟了，还要撑一夜，只剩一点爱了，还要过一生。</li>\n</ul>\n<h2 id=\"别有天\"><a href=\"#别有天\" class=\"headerlink\" title=\"别有天\"></a>别有天</h2><p>歌手：排骨教主，平常听古风类歌曲的话比较喜欢听排骨教主的，嗓音很特别</p>\n<ul>\n<li>你说，十里桃花，两人一马； 后来，谢了繁华，生死无话。 你说，修起篱笆，闲话桑麻； 后来，岁至月腊，空负韶华。 你说，对坐饮茶，共看晚霞； 后来，惨淡月牙，心思暗哑。 你说，不恋戎马，归田卸甲； 后来，倾覆天下，一夜白发。</li>\n<li>自古红尘多少人只欲寻仙问道超然去，却不知，总有仙人偶然窥见了人间华灯初上的光景，便甘愿从此坠入红尘中寻世间烟火、听市井俚歌，只为遇到一个萍水相逢的你。一场绮梦天涯，此生无悔。</li>\n<li>采桑子 欧阳修 画船载酒西湖好， 急管繁弦， 玉盏催传， 稳泛平波任醉眠。 行云却在行舟下， 空水澄鲜， 俯仰留连， 疑是湖中别有天。</li>\n</ul>\n<h2 id=\"你，好不好？\"><a href=\"#你，好不好？\" class=\"headerlink\" title=\"你，好不好？\"></a>你，好不好？</h2><p>歌手：周兴哲，电视剧《遗憾拼图》片尾图，相信很多人听到这首歌都会有很多感受</p>\n<ul>\n<li>有些异性不能拿来做恋人，却也舍不得给别人。</li>\n<li>想让你吃醋，又怕你祝我幸福。</li>\n<li>我戒烟了，没玩游戏了，每天不断的充实自己，我真的过的很好，你来看下我好不好</li>\n<li>牙疼 你的喜糖就不吃了 不胜酒力 你的喜酒就不喝了 健忘 特别健忘 你叫什么就不记了 ​​</li>\n<li>朋友之间，千万别谈爱情，要么一生，要么陌生。</li>\n</ul>\n<h2 id=\"ブルーバード\"><a href=\"#ブルーバード\" class=\"headerlink\" title=\"ブルーバード\"></a>ブルーバード</h2><p>每当听到这首歌的时候就想起了火影，就像某条评论“虽然不会日语，但这首歌我差不多可以唱完。”</p>\n<ul>\n<li>看火影那么多年，才知道。晓组织的十叛忍：佩恩，迪达拉，小南，鼬，绝，带土，鬼鲛，角都，飞段，蝎。代表了人类的十个梦想：和平，艺术，友情，亲情，统治，爱情，力量，金钱，宗教，童年。</li>\n<li>此生无悔入火影，来世愿生木叶村</li>\n<li>电影院里一个小孩问妈妈：“怎么这么多大人？大人也爱看动漫么？” 妈妈说“是看动漫的小孩都长大了”</li>\n<li>看了那么多年火影，才知道木叶三忍，自来也，纲手，大蛇丸分别代表黄，赌，毒。</li>\n<li>每次听到这歌，心中的火之意志在熊熊燃烧，尼玛我们村长太腐败了，劳资要推翻他，建立和平の村。</li>\n<li>整个火影故事里，有人相信血统，有人相信精神，有人相信身体，有人相信眼睛，有人相信先天传承，有人相信后天努力。只有大蛇丸，他相信科学。</li>\n</ul>\n<h2 id=\"生きていたんだよな\"><a href=\"#生きていたんだよな\" class=\"headerlink\" title=\"生きていたんだよな\"></a>生きていたんだよな</h2><p>歌名翻译成中文的意思是：她曾活过啊</p>\n<ul>\n<li>这是一首歌颂死亡的歌，无论一个人选择如何结束自己的生命，都不是未经历过死亡的我们可以靠着想象来自以为是地理解并指手画脚的，因为无论如何，她曾经活过啊。</li>\n<li>不知道是否安慰你，但是我突然想起我的语文老师对我开导的一句话“人生就像心电图，一帆风顺，就死了。”我仍然记得那时她说这句话时眼里闪烁的泪，以及她声音的颤，最忘不了的是她紧紧握住的，我的手。</li>\n<li>“有一天我忽然意识到：我自己是我一生中最后一个死去的人。”</li>\n<li>初一冬天得了抑郁， 割腕以后痛的心慌， 打了出租去医院， 捧着手狂哭， 司机后座被我弄的全都是血， 到了医院还带我去处理， 生意都不要了， 带着我去吃了一顿饭， 他一边哭一边说： “十来岁的小姑娘， 人生路还长， 千万别冲动， 千万别学我女儿。”</li>\n<li>齐奥朗认为自杀的念头是自然的、健康的，对存在的强烈渴望才是一种严重的缺陷。他甚至将自杀视为能保证人活下去的唯一想法，因为“自杀让我明白，我可以在我愿意的时候离开这个世界，这令生命变得可以承受，而不是毁掉它。”</li>\n<li>喜欢iPad你就去买，喜欢莱卡你就去赚，想喝港式奶茶你就过口岸，想当team leader你就努力学习然后努力去工作，想去威尼斯你就攒钱去，想爱谁你就去爱，想追谁你就去追，想到了就去做，拼命努力，拼命享受，忍着守着惦记着，青春就过去了，何必用40岁的心态过20岁的年华。</li>\n<li>小时候家里养过一只猫和一只狗 狗总是被猫欺负 不是狗憨厚 而是斗不过猫 比如猫藏在鞋盒偷袭狗 狗只能绕着鞋盒转圈 后来狗去世了 猫没看见它去世的样子 只是没见狗回来 半年过去了 有天我故意在门口喊了声狗的名字 猫从屋里飞奔到门口左右张望</li>\n<li>很多自杀的人最后一刻都是后悔的，证据是，90%跳楼而死的人，都伤在手部，肘部或者腿骨，因为在最后一刻他们采取了撑地的姿势，他们想活下去。有个朋友说，像香港女星陈宝莲就是这样的。但也有10%的例外，他们最后的姿势是仰躺，比如张国荣</li>\n</ul>\n<h2 id=\"写在后面\"><a href=\"#写在后面\" class=\"headerlink\" title=\"写在后面\"></a>写在后面</h2><p>很荣幸你能看到最后（或者你直接就翻到最后了。。），现在网易云音乐对于我而言已经不再是一款单纯的音乐软件了，而是一种信仰！所以，我的网易云音乐账户叫 <code>wangcongbug</code>，欢迎大家关注我~（我收藏了很多好听到爆的歌曲，希望你也能喜欢~）：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_232.jpeg\" alt=\"\" width=\"300\"></div>\n\n<p>歌单里又有很多歌变灰了，在版权面前，情怀仿佛变得不堪一击，但是，我不会选择离开，你会吗？</p>\n","raw":null,"categories":[{"name":"summary","path":"api/categories/summary.json"}],"tags":[{"name":"life","path":"api/tags/life.json"},{"name":"网易云音乐","path":"api/tags/网易云音乐.json"}]},{"title":"Chrome扩展程序推荐&(伪)开发指南","slug":"Chrome扩展程序推荐&(伪)开发指南","date":"2017-06-28T09:25:28.000Z","updated":"2019-03-02T06:40:00.866Z","comments":true,"path":"api/articles/Chrome扩展程序推荐&(伪)开发指南.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_239.png","content":"<p>chrome 作为 Google 公司研发的一款网页浏览器，其诞生之初就备受关注，从一开始的全年占有率上升幅度最大到如今的全球使用人数最多，chrome 成为了 Google 最值得骄傲的产品之一；而作为前端工程师，和浏览器打交道是最多的，所以如何用好浏览器就成为了一项潜在的技能。chrome 本身就基于其他开源软件所撰写（WebKit、Blink），所以其丰富的扩展程序成为了另一大杀器，下面就分享一下我用的一些扩展程序（排名不分先后，如果你也有用着很爽的插件，欢迎在评论中分享哦～），同时简单的介绍一下自己如果想开发一个 Chrome 扩展程序，应该从何下手。</p>\n<h2 id=\"扩展程序推荐\"><a href=\"#扩展程序推荐\" class=\"headerlink\" title=\"扩展程序推荐\"></a>扩展程序推荐</h2><h3 id=\"React-Developer-Tools\"><a href=\"#React-Developer-Tools\" class=\"headerlink\" title=\"React Developer Tools\"></a><a href=\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi\" target=\"_blank\" rel=\"noopener\">React Developer Tools</a></h3><p>之所以将这款插件排在第一位，那是因为 react 实在是太火了，颇有一统前端框架之势（想多了，怎么可能），所以就首先推荐这款插件了。这款插件是 facebook 官方推荐的（<a href=\"https://github.com/facebook/react-devtools\" target=\"_blank\" rel=\"noopener\">Github 地址</a>），目前已经有 64W 用户下载使用，所以其性能方面是不容置疑的，不过由于我目前还没有更深入的接触 react，所以这款插件自从下载之后就没有实际用过，具体怎样就没办法描述了。。</p>\n<h3 id=\"JSONView\"><a href=\"#JSONView\" class=\"headerlink\" title=\"JSONView\"></a><a href=\"https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc\" target=\"_blank\" rel=\"noopener\">JSONView</a></h3><p>这款插件其实功能很简单，就是能够让你在浏览器中更方便地看 JSON 类型的数据，我们前端工程师常会有这样的困扰：后台提供了一个接口，返回的是 JSON 数据，但是我们通过 URL 直接在浏览器中打开的话，中文会显示乱码，而且如果其中有类似 URL 这种格式的数据，也没有办法点击跳转；此时，这款插件就派上了用场，虽然其提供的功能很简单，但是 105W+ 的用户量已经说明了一切，截图神马的最有说服力了：</p>\n<h4 id=\"JSONView之前\"><a href=\"#JSONView之前\" class=\"headerlink\" title=\"JSONView之前\"></a>JSONView之前</h4><div align=\"center\"><img src=\"/images/hexo_post_239.png\" alt=\"\" width=\"700\"></div>\n\n<h4 id=\"JSONView之后\"><a href=\"#JSONView之后\" class=\"headerlink\" title=\"JSONView之后\"></a>JSONView之后</h4><div align=\"center\"><img src=\"/images/hexo_post_238.png\" alt=\"\" width=\"700\"></div>\n\n<h3 id=\"Set-Character-Encoding\"><a href=\"#Set-Character-Encoding\" class=\"headerlink\" title=\"Set Character Encoding\"></a><a href=\"https://chrome.google.com/webstore/detail/set-character-encoding/bpojelgakakmcfmjfilgdlmhefphglae\" target=\"_blank\" rel=\"noopener\">Set Character Encoding</a></h3><p>这款插件的功能也很简单，就像它的名字一样，是用来改变网页编码格式的，相信用最新版本 Chrome 的童鞋会发现，右键改编码格式的日子一去不复返了，甚至连高级设置中都没有办法改编码格式了，那么如何修改万恶的编码格式呢？这款插件就派上了用场，使用很简单：安装之后在你想要改变编码格式的网页右键，就会出现下面这个东东：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_240.png\" alt=\"\" width=\"400\"></div>\n\n<p>使用起来就是如此的简单，还在担心乱码吗？赶紧安装一下试试吧！</p>\n<h3 id=\"印象笔记·剪藏\"><a href=\"#印象笔记·剪藏\" class=\"headerlink\" title=\"印象笔记·剪藏\"></a><a href=\"https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">印象笔记·剪藏</a></h3><p>印象笔记作为一款最受欢迎的笔记类应用之一，其本身提供的功能已经足够惊艳了，但是它的这款 chrome 插件更是好用到爆，安装之后在浏览网页时点击它的大象 logo 就会在你的网页右上角弹出如下弹框：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_241.png\" alt=\"\" width=\"300\"></div>\n\n<p>该弹框基本上涵盖了你所需要的所有功能，包括命名、内容选择、存储位置、标签、注释等等，可以让你很方便的保存你所浏览的任何内容（可以<a href=\"https://www.yinxiang.com/webclipper/guide/#1\" target=\"_blank\" rel=\"noopener\">点击这里</a>查看这款插件的玩法介绍），如果你是印象笔记的用户或潜在用户，一定要安装试一下，童叟无欺哦～</p>\n<h3 id=\"YSlow\"><a href=\"#YSlow\" class=\"headerlink\" title=\"YSlow\"></a><a href=\"https://chrome.google.com/webstore/detail/yslow/ninejjcohidippngpapiilnmkgllmakh\" target=\"_blank\" rel=\"noopener\">YSlow</a></h3><p>YSlow（why slow）是雅虎基于网站优化规则推出的工具，帮助你分析并优化网站性能。说到雅虎，就不得不提一下<a href=\"http://developer.yahoo.com/performance/rules.html\" target=\"_blank\" rel=\"noopener\">雅虎军规</a>了，雅虎军规在十几个方面给你的网站提出优化建议，YSlow 会根据这些规则分析你的网站，并给出评级。雅虎作为一家对前端性能追求卓越的公司，虽然已光辉不再，但是 YSlow 这款插件（<a href=\"https://addons.mozilla.org/en-US/firefox/addon/5369\" target=\"_blank\" rel=\"noopener\">Firefox 也有相应插件</a>）对于前端开发者来说还是能提供很多思路的，官方网站：<a href=\"http://developer.yahoo.com/yslow/\" target=\"_blank\" rel=\"noopener\">http://developer.yahoo.com/yslow/</a> 我的个人博客用YSlow的评分结果。。：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_212.png\" alt=\"\" width=\"700\"></div>\n\n<h3 id=\"花瓣网页收藏工具\"><a href=\"#花瓣网页收藏工具\" class=\"headerlink\" title=\"花瓣网页收藏工具\"></a><a href=\"https://chrome.google.com/webstore/detail/%E8%8A%B1%E7%93%A3%E7%BD%91%E9%A1%B5%E6%94%B6%E8%97%8F%E5%B7%A5%E5%85%B7/imamemhokkdleoelohnmkimbmpfglcil\" target=\"_blank\" rel=\"noopener\">花瓣网页收藏工具</a></h3><p>这是<a href=\"http://www.huaban.com\" target=\"_blank\" rel=\"noopener\">花瓣网</a>官方提供的扩展，这个扩展程序可以让你方便地从任意网站上采集喜欢的图片、视频或者网页截图，并且可以全部保存下来，甚至可以追溯到这张图片的源网页继续查看。从某种角度而言，是一款不仅仅适合设计师的插件</p>\n<div align=\"center\"><img src=\"/images/hexo_post_213.png\" alt=\"\" width=\"300\"></div>\n\n<h3 id=\"Check-my-links\"><a href=\"#Check-my-links\" class=\"headerlink\" title=\"Check my links\"></a><a href=\"https://chrome.google.com/webstore/detail/check-my-links/ojkcdipcgfaekbeaelaapakgnjflfglf\" target=\"_blank\" rel=\"noopener\">Check my links</a></h3><p>该插件会检查当前页面中链接的有效性，会告诉你哪些地方的链接已经是死链等等，对 SEO 很有帮助，下图是这个插件的主界面：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_283.png\" alt=\"\" width=\"300\"></div>\n\n<h3 id=\"Host-Switch-Plus\"><a href=\"#Host-Switch-Plus\" class=\"headerlink\" title=\"Host Switch Plus\"></a><a href=\"https://chrome.google.com/webstore/detail/host-switch-plus/bopepoejgapmihklfepohbilpkcdoaeo?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">Host Switch Plus</a></h3><p>快速切换 Domain-IP 配置而不需要编辑 Hosts 文件，并方便的添加、修改、分组（批量开关）。对于程序员来说也是一大神器啊！其实有一个软件也是用来切换 hosts 的，叫做 <strong>SwitchHosts</strong> ，感兴趣的话可以试用一下，同样很简洁。</p>\n<h3 id=\"Fatkun图片批量下载\"><a href=\"#Fatkun图片批量下载\" class=\"headerlink\" title=\"Fatkun图片批量下载\"></a><a href=\"https://chrome.google.com/webstore/detail/fatkun-batch-download-ima/nnjjahlikiabnchcpehcpkdeckfgnohf\" target=\"_blank\" rel=\"noopener\">Fatkun图片批量下载</a></h3><p>就像名字一样，它的功能是找出当前页面的所有图片并下载，提供按分辨率、链接等筛选图片，是一款十分简洁但又功能强大的扩展程序。可能更适合设计师吧？！</p>\n<h3 id=\"Extension-Source-Locator\"><a href=\"#Extension-Source-Locator\" class=\"headerlink\" title=\"Extension Source Locator\"></a><a href=\"https://chrome.google.com/webstore/detail/extension-source-locator/cmhbfegjgncgaikpopenldnaidbhdopp\" target=\"_blank\" rel=\"noopener\">Extension Source Locator</a></h3><p>这是一款神奇的扩展程序，翻译成中文就是“<strong>扩展程序源码定位器</strong>”，它是干什么的呢，根据被翻译过来的不太准确的大中华语可以大概知道这玩意儿可以定位到一个你已经在谷歌浏览器上安装了的扩展程序的源码，或者说源文件 ，在你电脑磁盘的哪个地方。更重要的是它让我们可以修改一些自己喜欢的扩展程序，让其更加适合自己的使用。具体参见<a href=\"http://www.cnblogs.com/Wayou/p/how_to_adapt_chrome_extension_for_your_own_willing.html\" target=\"_blank\" rel=\"noopener\">这篇介绍文章</a></p>\n<h3 id=\"Vimium\"><a href=\"#Vimium\" class=\"headerlink\" title=\"Vimium\"></a><a href=\"https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb\" target=\"_blank\" rel=\"noopener\">Vimium</a></h3><p>首先，不知道为什么叫这个名字。。用惯 vim 的人可能习惯用键盘操控一切了，那么这款插件一定能够满足你，它让你能够通过键盘控制浏览器，包括跳转，点击某个按钮，翻页以及所有你能想到的浏览器功能，实在是佩服这款插件的开发者，可以先看一下它的<a href=\"https://youtu.be/t67Sn0RGK54\" target=\"_blank\" rel=\"noopener\">宣传视频</a>（来自油管，需要翻墙~）压压惊</p>\n<h3 id=\"一键管理所有扩展\"><a href=\"#一键管理所有扩展\" class=\"headerlink\" title=\"一键管理所有扩展\"></a><a href=\"https://chrome.google.com/webstore/detail/%E4%B8%80%E9%94%AE%E7%AE%A1%E7%90%86%E6%89%80%E6%9C%89%E6%89%A9%E5%B1%95/niemebbfnfbjfojajlmnbiikmcpjkkja\" target=\"_blank\" rel=\"noopener\">一键管理所有扩展</a></h3><p>名字已经说明了一切，当我们安装了很多扩展程序的时候，一键管理就派上用场了，快速激活、禁用插件。可以安装多个插件，切换使用，缓解 Chrome 的吃内存问题</p>\n<h3 id=\"Adblock-Plus\"><a href=\"#Adblock-Plus\" class=\"headerlink\" title=\"Adblock Plus\"></a><a href=\"https://chrome.google.com/webstore/detail/adblock-plus/cfhdojbkjhnklbpkdaibdccddilifddb\" target=\"_blank\" rel=\"noopener\">Adblock Plus</a></h3><p>去除广告的插件，满天飞的弹窗广告相当烦人啊。具体效果还没有试验，但是看到“\b去除广告”这四个字的时候，我就决定要安装一下了</p>\n<h3 id=\"WEB-前端助手-FeHelper\"><a href=\"#WEB-前端助手-FeHelper\" class=\"headerlink\" title=\"WEB 前端助手(FeHelper)\"></a><a href=\"https://chrome.google.com/webstore/detail/web%E5%89%8D%E7%AB%AF%E5%8A%A9%E6%89%8Bfehelper/pkgccpejnmalmdinmhkkfafefagiiiad\" target=\"_blank\" rel=\"noopener\">WEB 前端助手(FeHelper)</a></h3><p>提供了很多前端开发者经常用到的功能，包括字符串编解码、图片 base64 编码、代码压缩、时间戳转换、二维码生成、页面性能检测等等功能，具体看下图吧：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_101.png\" alt=\"\" width=\"200\"></div>\n\n<h3 id=\"新浪微博图床\"><a href=\"#新浪微博图床\" class=\"headerlink\" title=\"新浪微博图床\"></a><a href=\"https://chrome.google.com/webstore/detail/%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E5%9B%BE%E5%BA%8A/fdfdnfpdplfbbnemmmoklbfjbhecpnhf\" target=\"_blank\" rel=\"noopener\">新浪微博图床</a></h3><p>简单好用的图片上传工具，支持选择、拖拽、粘贴、上传图片，并且生成图片地址、HTML、UBB 和 Markdown 等格式，同时还支持批量上传等功能，很适合那些需要把图片放网上供其他人浏览的场景</p>\n<h3 id=\"惠惠购物助手\"><a href=\"#惠惠购物助手\" class=\"headerlink\" title=\"惠惠购物助手\"></a><a href=\"https://chrome.google.com/webstore/detail/%E6%83%A0%E6%83%A0%E8%B4%AD%E7%89%A9%E5%8A%A9%E6%89%8B/ohjkicjidmohhfcjjlahfppkdblibkkb\" target=\"_blank\" rel=\"noopener\">惠惠购物助手</a></h3><p>剁手党的神器！虽然名字起得像一个垃圾广告，但是功能还是蛮实用的。。可以自动显示淘宝、京东、当当等各大网上商城的报价（安装它之后，必须要进入扩展选项设置，不然这货会弹出广告！）</p>\n<blockquote>\n<p>更新自2017-9-10：突然发现，这个插件会在后来运行，然后在有优惠信息时，会在右上角弹出推送消息（和 service worker 类似），如下图：</p>\n</blockquote>\n<div align=\"center\"><img src=\"/images/hexo_post_284.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"Octotree\"><a href=\"#Octotree\" class=\"headerlink\" title=\"Octotree\"></a><a href=\"https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc\" target=\"_blank\" rel=\"noopener\">Octotree</a></h3><p>这是一款非常方便的 github 扩展，安装了这款插件之后，你可以在 Github 项目页面的左侧看到相应项目树状结构图，对于项目管理以及具体的文件跳转来说非常方便（同时还可以一键下载某文件，这个功能我最喜欢了！）：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_122.png\" alt=\"\" width=\"600\"></div>\n\n<h3 id=\"BuiltWith-Technology-Profiler\"><a href=\"#BuiltWith-Technology-Profiler\" class=\"headerlink\" title=\"BuiltWith Technology Profiler\"></a><a href=\"https://chrome.google.com/webstore/detail/builtwith-technology-prof/dapjbgnjinbpoindlpdmhochffioedbn\" target=\"_blank\" rel=\"noopener\">BuiltWith Technology Profiler</a></h3><p>这款插件很适合充满好奇心的“极客”，它可以帮你<strong>探测出当前网站所用的技术栈并按类型分类</strong>，从此再也不用去看代码推测技术栈了！</p>\n<h3 id=\"User-Agent-Switcher-for-Chrome\"><a href=\"#User-Agent-Switcher-for-Chrome\" class=\"headerlink\" title=\"User-Agent Switcher for Chrome\"></a><a href=\"https://chrome.google.com/webstore/detail/user-agent-switcher-for-c/djflhoibgkdhkhhcedjiklpkjnoahfmg\" target=\"_blank\" rel=\"noopener\">User-Agent Switcher for Chrome</a></h3><p>有时候我们需要同时在不同设备上测试网页的自适应情况，而有了这款插件，你可以随时更换 UA，节省了“检查元素”窗口的空间，同时还显得自己是一个很厉害的“前端工程师”~</p>\n<blockquote>\n<p>更新自2017-09-11：偶然间发现一篇文章：<a href=\"https://www.v2ex.com/t/389340\" target=\"_blank\" rel=\"noopener\">大家注意了 Chrome 的插件 User-Agent Switcher 是个木马</a>，但是这篇文章里面说的插件是 User-Agent Switcher for Google Chrome，所以大家安装插件的时候一定要擦亮眼睛啊~</p>\n</blockquote>\n<h3 id=\"Always-Clear-Downloads\"><a href=\"#Always-Clear-Downloads\" class=\"headerlink\" title=\"Always Clear Downloads\"></a><a href=\"https://chrome.google.com/webstore/detail/always-clear-downloads/cpbmgiffkljiglnpdbljhlenaikojapc\" target=\"_blank\" rel=\"noopener\">Always Clear Downloads</a></h3><p>自动清理下载记录和关闭令人厌烦的必须手动关闭的下载栏；但是我安装之后发现没有什么变化，是我的姿势不对吗？</p>\n<h3 id=\"Imagus\"><a href=\"#Imagus\" class=\"headerlink\" title=\"Imagus\"></a><a href=\"https://chrome.google.com/webstore/detail/imagus/immpkjjlgappgfkkfieppnmlhakdmaab\" target=\"_blank\" rel=\"noopener\">Imagus</a></h3><p>鼠标停在小图片上即可显示出原图大小的图片，从此刷微博不必点击展开图片，刷淘宝、京东不必点击到商品页面细看，但是我安装之后还是看不了，难道我的姿势又不对了吗？</p>\n<blockquote>\n<p>更新于2017-09-07：我发现有的图片它不会放大，可能没有压缩过的图片它不会显示原图吧，不过用过之后感觉还是蛮好用的。</p>\n</blockquote>\n<h3 id=\"主题创建者\"><a href=\"#主题创建者\" class=\"headerlink\" title=\"主题创建者\"></a><a href=\"https://chrome.google.com/webstore/detail/theme-creator-create-cust/ognfcdaekjfmdjhcjaacfapijblalleg?utm_source=chrome-app-launcher-info-dialog\" target=\"_blank\" rel=\"noopener\">主题创建者</a></h3><p>为谷歌浏览器创建自定义主题。可以为每个区域选择颜色和背景。追求个性化浏览器的童鞋可以尝试一下。</p>\n<h3 id=\"Proxy-SwitchyOmega\"><a href=\"#Proxy-SwitchyOmega\" class=\"headerlink\" title=\"Proxy SwitchyOmega\"></a><a href=\"https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif\" target=\"_blank\" rel=\"noopener\">Proxy SwitchyOmega</a></h3><p>轻松快捷地管理和切换多个代理设置。很适合程序猿的一款扩展，不仅可以全局代理，还可以通过正则或其他规则进行局部代理，除此之外还可以加载 PAC 脚本，翻墙神器，你不可错过。</p>\n<h3 id=\"Video-DownloadHelper\"><a href=\"#Video-DownloadHelper\" class=\"headerlink\" title=\"Video DownloadHelper\"></a><a href=\"https://chrome.google.com/webstore/detail/video-downloadhelper/lmjnegcaeklhafolokijcfjliaokphfk\" target=\"_blank\" rel=\"noopener\">Video DownloadHelper</a></h3><p>通过名字就可以看出来，这是一款用来下载视频的扩展，可以下载多种格式的视频，同时其提供了多种额外的功能，有兴趣的童鞋可以自行了解。</p>\n<h3 id=\"Smart-TOC\"><a href=\"#Smart-TOC\" class=\"headerlink\" title=\"Smart TOC\"></a><a href=\"https://chrome.google.com/webstore/detail/smart-toc/lifgeihcfpkmmlfjbailfpfhbahhibba\" target=\"_blank\" rel=\"noopener\">Smart TOC</a></h3><blockquote>\n<p>Add a table of contents for web article or documentation</p>\n</blockquote>\n<p>这个插件的作用很难用语言来描述。。大致的作用就是给当前网页生成一个“目录”，同时支持锚链接，当我们再看那种“老太太裹脚布”的文章的时候，这个扩展就可以大展身手了，类似下图：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_230.png\" alt=\"\" width=\"700\"></div>\n\n<h3 id=\"斗鱼HTML5播放器\"><a href=\"#斗鱼HTML5播放器\" class=\"headerlink\" title=\"斗鱼HTML5播放器\"></a><a href=\"https://chrome.google.com/webstore/detail/%E6%96%97%E9%B1%BChtml5%E6%92%AD%E6%94%BE%E5%99%A8/hbocinidadgpnbcamhjgfbgiebhpnmfj\" target=\"_blank\" rel=\"noopener\">斗鱼HTML5播放器</a></h3><p>替换斗鱼TV的 Flash 播放器, 并支持弹幕, 送礼等功能. 目前是测试版本, 可能无法播放部分直播间. 基于 flv.js(<a href=\"https://github.com/Bilibili/flv.js)(感谢谦谦)\" target=\"_blank\" rel=\"noopener\">https://github.com/Bilibili/flv.js)(感谢谦谦)</a></p>\n<h3 id=\"Tampermonkey\"><a href=\"#Tampermonkey\" class=\"headerlink\" title=\"Tampermonkey\"></a><a href=\"https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo\" target=\"_blank\" rel=\"noopener\">Tampermonkey</a></h3><p>这个插件属于必装的插件之一，大家通常称其为“油猴脚本”，有了这个，你会发现<strong>新世界大门</strong>向你打开，里面有各种<strong>秀出天</strong>际的脚本：百度网盘直接下载助手、VIP 视频破解、解决百度云大文件下载限制等等，安装脚本很简单，第一次安装该插件时会有一个简单的教程，还可以去<a href=\"http://greasyfork.org\" target=\"_blank\" rel=\"noopener\">greasyfork.org</a>下载更多更厉害的脚本，从此上网之路会变得异常酷爽！</p>\n<h3 id=\"Onetab\"><a href=\"#Onetab\" class=\"headerlink\" title=\"Onetab\"></a><a href=\"https://chrome.google.com/webstore/detail/onetab/chphlpgkkbolifaimnlloiipkdnihall\" target=\"_blank\" rel=\"noopener\">Onetab</a></h3><p>用电脑经常用着用着就<strong>不知觉地打开了很多页面</strong>，用了多年的扎扎电脑很容易就出现浏览器<strong>崩溃的状况</strong>。装上这个 onetab 插件后，点击一下就可以把当前浏览器<strong>打开的所有标签页集中到一个页面</strong>，又可以开始愉快地浏览了，然后可以单独或全部恢复这些标签页。 或者可以打开一组<strong>相关的页面</strong>，点击后作为<strong>一个合集分享出去</strong>，工作上分享资料可以用到。 最重要的是能够<strong>节省高达95％的内存：</strong></p>\n<div align=\"center\"><img src=\"/images/hexo_post_229.jpg\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"Infinity新标签页-Pro\"><a href=\"#Infinity新标签页-Pro\" class=\"headerlink\" title=\"Infinity新标签页(Pro)\"></a><a href=\"https://chrome.google.com/webstore/detail/infinity-new-tab-pro/nnnkddnnlpamobajfibfdgfnbcnkgngh\" target=\"_blank\" rel=\"noopener\">Infinity新标签页(Pro)</a></h3><p>这个<strong>自定义的标签页</strong>颜值颇高，同时还提供了<strong>谷歌邮件自动提醒</strong>功能，还有精美天气，待办事项，印象笔记一样的记事应用，高清壁纸，必应，百度，谷歌搜索，让你的使用更加简单方便快捷。还有高清壁纸库，从 3 万多张超清壁纸中一张一张搭配图标，精心挑选出 365 张，形成每日一图，当然你也可以从你自己电脑上选择图片作为壁纸。这是它的<a href=\"https://www.infinitynewtab.com\" target=\"_blank\" rel=\"noopener\">官网</a>，可以说是居家必备良品了。</p>\n<h3 id=\"Copyfish\"><a href=\"#Copyfish\" class=\"headerlink\" title=\"Copyfish\"></a><a href=\"https://chrome.google.com/webstore/detail/copyfish-%F0%9F%90%9F-free-ocr-soft/eenjdnjldapjajjofmldgmkjaienebbj\" target=\"_blank\" rel=\"noopener\">Copyfish</a></h3><p>一款免费的 <strong>OCR文字识别插件</strong>，可以帮助我们快速地从网页中进行区域选定识别文字。Copyfish 可以从图像，PDF甚至是视频中识别提取文本，使用方法也很简便。非常适合用于那些不能复制文字的网页，选定后则会自动进行识别，弹出识别结果。还可以在设置中进行翻译语言设置等，识别后一键翻译。</p>\n<h3 id=\"掘金\"><a href=\"#掘金\" class=\"headerlink\" title=\"掘金\"></a><a href=\"https://chrome.google.com/webstore/detail/%E6%8E%98%E9%87%91/lecdifefmmfjnjjinhaennhdlmcaeeeb\" target=\"_blank\" rel=\"noopener\">掘金</a></h3><p>可以让你的新标签页变成掘金文章列表，包含 Android、前端、产品、设计、iOS、后端六大频道，每个频道内都有一到多个为你精心准备的优质内容源。同时还可以添加 Github、Dribbble 的内容，为设计师、程序员、产品经理每日发现优质内容。当然，如果你不想作为新标签页使用的话，还可以使用其<a href=\"https://e.xitu.io/\" target=\"_blank\" rel=\"noopener\">网页版</a>，其功能和新标签页是一模一样的，可以说是十分贴心了。</p>\n<h3 id=\"Momentum\"><a href=\"#Momentum\" class=\"headerlink\" title=\"Momentum\"></a><a href=\"https://chrome.google.com/webstore/detail/momentum/laookkfknpbbblfpciffpaejjkokdgca\" target=\"_blank\" rel=\"noopener\">Momentum</a></h3><p>这也是一款改造新标签页的扩展程序，从下面的截图中可以看到，改造之后非常的炫酷，关键是每一天的壁纸都不一样，而且还可以添加 todoList 等更多功能，如果感兴趣的话可以自行探索。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_292.jpg\" alt=\"\" width=\"700\"></div>\n\n<h3 id=\"New-Tab-Dribbble\"><a href=\"#New-Tab-Dribbble\" class=\"headerlink\" title=\"New Tab Dribbble\"></a><a href=\"https://link.juejin.im/?target=https%3A%2F%2Fchrome.google.com%2Fwebstore%2Fdetail%2Fnew-tab-dribbble%2Fomhhjicbfncielplfgggjedgnkjoicjj\" target=\"_blank\" rel=\"noopener\">New Tab Dribbble</a></h3><p>这个就更厉害了，可以说是设计师的必备，你每次打开新的标签页都会第一时间把每日精品设计作品展示出来，你每天都能看到来自大神的作品，简直是灵感的源泉，作品都来自 Dribbble。</p>\n<h3 id=\"Isometric-Contributions\"><a href=\"#Isometric-Contributions\" class=\"headerlink\" title=\"Isometric Contributions\"></a><a href=\"https://link.juejin.im/?target=https%3A%2F%2Fchrome.google.com%2Fwebstore%2Fdetail%2Fisometric-contributions%2Fmjoedlfflcchnleknnceiplgaeoegien\" target=\"_blank\" rel=\"noopener\">Isometric Contributions</a></h3><p>这个应该是程序员专属，它可以让我们 Github 的贡献图变成 3D 效果，非常适合用来装逼有没有，是不是很高大上：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_293.png\" alt=\"\" width=\"600\"></div>\n\n<h3 id=\"GitHub-Repository-Size\"><a href=\"#GitHub-Repository-Size\" class=\"headerlink\" title=\"GitHub Repository Size\"></a><a href=\"https://chrome.google.com/webstore/detail/github-repository-size/apnjnioapinblneaedefcnopcjepgkci/related\" target=\"_blank\" rel=\"noopener\">GitHub Repository Size</a></h3><p>这款插件也是 Github 相关的一款辅助工具，它可以直接将仓库的大小以及仓库中各个文件的大小显示出来：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_228.jpg\" alt=\"\" width=\"600\"></div>\n\n<h3 id=\"Darkness\"><a href=\"#Darkness\" class=\"headerlink\" title=\"Darkness\"></a><a href=\"https://chrome.google.com/webstore/detail/darkness-beautiful-dark-t/imilbobhamcfahccagbncamhpnbkaenm\" target=\"_blank\" rel=\"noopener\">Darkness</a></h3><p>Darkness为热门网站提供精美的深色主题，可以显著减轻由明亮的电脑屏幕引起的眼睛负担和疲劳：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_227.jpg\" alt=\"\" width=\"700\"></div>\n\n<h3 id=\"云盘万能钥匙\"><a href=\"#云盘万能钥匙\" class=\"headerlink\" title=\"云盘万能钥匙\"></a><a href=\"https://chrome.google.com/webstore/detail/%E4%BA%91%E7%9B%98%E4%B8%87%E8%83%BD%E9%92%A5%E5%8C%99/anlllmnpjodopgbkbpnghnjlelnogfjc\" target=\"_blank\" rel=\"noopener\">云盘万能钥匙</a></h3><p>官网地址：<a href=\"https://ypsuperkey.meek.com.cn/\" target=\"_blank\" rel=\"noopener\">https://ypsuperkey.meek.com.cn/</a>，这款插件可以自动识别百度网盘提取密码，标识已失效的网盘链接，网盘分享从此更加简单。不过这款插件之所以会有如此能力，是因为它会在你提交百度网盘分享链接提取密码时收集提取密码信息，可能会涉及到隐私问题。除了 Chrome 浏览器，它还支持其他大部分浏览器，包括火狐、360、QQ、搜狗、UC 等等。</p>\n<h3 id=\"沙拉查词\"><a href=\"#沙拉查词\" class=\"headerlink\" title=\"沙拉查词\"></a><a href=\"https://chrome.google.com/webstore/detail/沙拉查词-多词典专业划词翻译/cdonnmffkdaoajfknoeeecmchibpmkmg\" target=\"_blank\" rel=\"noopener\">沙拉查词</a></h3><p>涵盖所有主流词典，多重划词模式，极致交互体验，灵活导出生词本，高度可配置，支持 PDF，兼容 Vimium 全键盘操作。对于想学英语的童鞋来说是一个很好的工具。</p>\n<h3 id=\"GayHub\"><a href=\"#GayHub\" class=\"headerlink\" title=\"GayHub\"></a><a href=\"https://chrome.google.com/webstore/detail/gayhub/mdcffelghikdiafnfodjlgllenhlnejl\" target=\"_blank\" rel=\"noopener\">GayHub</a></h3><p>首先，请忽略这个扩展的名字。。它的主要功能是优化 Github 的阅读体验：</p>\n<ul>\n<li>文件目录树：把 Vscode 的精美的侧边栏完美移植到 github 上</li>\n<li>TOC导航：能完美解析当前内容的所有嵌套标题，性能优越，滑动起来如丝滑般流畅。</li>\n<li>夜间暗色主题</li>\n<li>图片全屏预览</li>\n<li>一键复制代码</li>\n</ul>\n<h3 id=\"Lighthouse\"><a href=\"#Lighthouse\" class=\"headerlink\" title=\"Lighthouse\"></a><a href=\"https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk\" target=\"_blank\" rel=\"noopener\">Lighthouse</a></h3><p>Lighthouse 是一个开源的自动化工具，用于改进网络应用的质量。 可以将其作为一个 Chrome 扩展程序运行，或从命令行运行。 当为 Lighthouse 提供一个要审查的网址，它将针对此页面运行一连串的测试，然后生成一个有关页面性能的报告。可以参考失败的测试，看看可以采取哪些措施来改进应用。</p>\n<p>运行 Lighthouse 的方式有两种：作为 Chrome 扩展程序运行，或作为命令行工具运行。</p>\n<h3 id=\"Wayback-Machine\"><a href=\"#Wayback-Machine\" class=\"headerlink\" title=\"Wayback Machine\"></a><a href=\"https://chrome.google.com/webstore/detail/wayback-machine/fpnmgdkabkmnadcjpehmlllkndpkmiak\" target=\"_blank\" rel=\"noopener\">Wayback Machine</a></h3><p>这是一个国外的网站，它是互联网的一个备份工具，被称为互联网时光机。自从 1996 年以来，Wayback Machine 已经累计备份了超过 4350 亿个网页。你只要在它的网站上输入一个网站地址，就能看到这个网站在过去的不同时期分别长什么样。</p>\n<p>Wayback Machine 网站有相应的同名插件，支持主流浏览器，只要点击插件，然后点击 Save Page Now，可以手动保存当前网站到这个互联网档案库里。N 年后再来会看今天的你，那感觉挺棒！</p>\n<h2 id=\"其他人推荐的扩展程序\"><a href=\"#其他人推荐的扩展程序\" class=\"headerlink\" title=\"其他人推荐的扩展程序\"></a>其他人推荐的扩展程序</h2><p>以上是我自己使用过或在使用的一些扩展程序，还有一些扩展程序可能我自己并没有使用但是其他人推荐了，我也列举在下方，方便大家查看和选择：</p>\n<ul>\n<li><a href=\"https://mikelin.cn/1201.html\" target=\"_blank\" rel=\"noopener\">MIKELIN常用的几款Chrome插件推荐</a></li>\n<li><a href=\"https://juejin.im/post/5b470d8de51d4519105d3bbd\" target=\"_blank\" rel=\"noopener\">优秀程序员都在用哪些Chrome拓展工具？</a></li>\n</ul>\n<p>如果因为某些显而易见的问题，无法从应用商店安装插件的话，可以尝试到<a href=\"https://extfans.com/\" target=\"_blank\" rel=\"noopener\">扩展迷官网</a>下载。</p>\n<h2 id=\"开发指南\"><a href=\"#开发指南\" class=\"headerlink\" title=\"开发指南\"></a>开发指南</h2><p>其实 Chrome 扩展程序的开发并不是很难，只要你有前端的一些基础知识（HTML、CSS、JavaScript）就足够了，剩下的一些就是按照官方的文档或其他教程一步一步的编写+理解就可以了，下面是一些推荐的教程，相信看过之后你一定可以开发出一个类似天气、股票、PM2.5 这样的扩展程序：</p>\n<ul>\n<li><a href=\"http://www.ituring.com.cn/book/1421\" target=\"_blank\" rel=\"noopener\">Chrome 扩展及应用开发</a> -&gt; 来自图灵社区的免费电子书，适合入门。</li>\n<li><a href=\"https://link.zhihu.com/?target=http%3A//open.chrome.360.cn/extension_dev/overview.html\" target=\"_blank\" rel=\"noopener\">Chrome扩展开发文档</a> -&gt; 来自 360 极速浏览器翻译的官方文档（比较老了，不是很推荐）。</li>\n<li><a href=\"https://developer.chrome.com/extensions\" target=\"_blank\" rel=\"noopener\">Chrome 插件开发官方文档(英文)</a> -&gt; 前两个适合入门，实际开发的时候还是推荐官方的，查API啥的都很方便，况且这篇文档写的很赞，也简单易懂，强烈推荐。</li>\n<li><a href=\"http://www.cnblogs.com/coco1s/p/8004510.html\" target=\"_blank\" rel=\"noopener\">ChokCoco-手把手教你开发扩展程序</a> -&gt; ChokCoco 老师的扩展程序开发教程，讲的挺好的，五星推荐！</li>\n<li><a href=\"https://developer.chrome.com/webstore/publish\" target=\"_blank\" rel=\"noopener\">Publish in the Chrome Web Store</a> -&gt; Chrome官方出的发布自己的扩展程序的教程</li>\n<li><a href=\"https://github.com/sxei/chrome-plugin-demo\" target=\"_blank\" rel=\"noopener\">Chrome插件开发全攻略</a> -&gt; 作者花了将近一个多月的时间断断续续写下这篇博文，并精心写下了这个完整 demo，里面包含的内容很多，包括了大部分的配置项，同时还附有源码，是一篇很不错的入门文章。</li>\n<li><a href=\"https://juejin.im/post/5c135a275188257284143418\" target=\"_blank\" rel=\"noopener\">一篇文章教你顺利入门和开发chrome扩展程序（插件）</a> -&gt; 前面部分大多数是一些基础介绍，和别人的资料大同小异，但是用的是通俗的语言或者作者自己理解来描述的，不是拷贝官方的描述，更方便读者理解；后面部分多为一些作者在项目中总结的方法。</li>\n</ul>\n","raw":null,"categories":[{"name":"summary","path":"api/categories/summary.json"}],"tags":[{"name":"Chrome","path":"api/tags/Chrome.json"},{"name":"指南","path":"api/tags/指南.json"},{"name":"推荐","path":"api/tags/推荐.json"}]},{"title":"他山之石，可以攻玉，好文章推荐","slug":"他山之石，可以攻玉，好文章推荐","date":"2017-08-07T03:40:22.000Z","updated":"2019-03-02T06:40:00.870Z","comments":true,"path":"api/articles/他山之石，可以攻玉，好文章推荐.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>经常看别人的博客或者文章，有时候闲暇时间也会刷一刷微信公众号神马的（但其实微信公众号上的文章也是转载其他人的博客），所以难免会碰到一些“不想关闭”的文章，放到收藏夹里又怕哪天消失了，所以就放到这里吧，也可以节省大家寻找好文章的时间。（这些文章有些难度会比较大，不太推荐将大量的时间花费在“纠结原理”上）</p>\n<h2 id=\"人工智能相关\"><a href=\"#人工智能相关\" class=\"headerlink\" title=\"人工智能相关\"></a>人工智能相关</h2><h3 id=\"深入浅出看懂AlphaGo元\"><a href=\"#深入浅出看懂AlphaGo元\" class=\"headerlink\" title=\"深入浅出看懂AlphaGo元\"></a><a href=\"https://charlesliuyx.github.io/2017/10/18/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E7%9C%8B%E6%87%82AlphaGo%E5%85%83/\" target=\"_blank\" rel=\"noopener\">深入浅出看懂AlphaGo元</a></h3><p>前段时间关于阿法狗的一篇文章（《今日Nature: 人工智能从0到1, 无师自通完爆阿法狗100-0 | 深度解析》）火爆了微信朋友圈，而关于阿法元是如何自我学习的，这篇文章讲述的很明白。</p>\n<h3 id=\"浅谈人工智能：现状、任务、构架与统一-正本清源\"><a href=\"#浅谈人工智能：现状、任务、构架与统一-正本清源\" class=\"headerlink\" title=\"浅谈人工智能：现状、任务、构架与统一 | 正本清源\"></a><a href=\"https://mp.weixin.qq.com/s/-wSYLu-XvOrsST8_KEUa-Q\" target=\"_blank\" rel=\"noopener\">浅谈人工智能：现状、任务、构架与统一 | 正本清源</a></h3><p>“人工智能”这个名词在沉寂了近 30 年之后，最近两年“咸鱼翻身”，成为了科技公司公关的战场、网络媒体吸睛的风口，随后受到政府的重视和投资界的追捧。于是，新闻发布会、高峰论坛接踵而来，政府战略规划出台，各种新闻应接不暇，宣告一个“智能为王”时代的到来。 到底什么是人工智能？现在的研究处于什么阶段？今后如何发展？这是大家普遍关注的问题。这篇文章用大篇幅解释了这些问题，目录如下：</p>\n<ul>\n<li>第一节 现状：正视现实</li>\n<li>第二节 未来：一只乌鸦给我们的启示</li>\n<li>第三节 历史：从“春秋五霸”到“战国六雄”</li>\n<li>第四节 统一：“小数据、大任务”范式与认知构架</li>\n<li>第五节 学科一：计算视觉 — 从“深”到“暗”</li>\n<li>第六节 学科二：认知推理 — 走进内心世界</li>\n<li>第七节 学科三：语言通讯 — 沟通的认知基础</li>\n<li>第八节 学科四：博弈伦理 — 获取、共享人类的价值观</li>\n<li>第九节 学科五：机器人学 — 构建大任务平台</li>\n<li>第十节 学科六：机器学习 — 学习的终极极限与“停机问题”</li>\n<li>第十一节 总结：智能科学 — 牛顿与达尔文的统一</li>\n</ul>\n<h2 id=\"前端相关\"><a href=\"#前端相关\" class=\"headerlink\" title=\"前端相关\"></a>前端相关</h2><h3 id=\"从输入URL到页面加载的过程？如何由一道题完善自己的前端知识体系！\"><a href=\"#从输入URL到页面加载的过程？如何由一道题完善自己的前端知识体系！\" class=\"headerlink\" title=\"从输入URL到页面加载的过程？如何由一道题完善自己的前端知识体系！\"></a><a href=\"http://www.dailichun.com/2018/03/12/whenyouenteraurl.html\" target=\"_blank\" rel=\"noopener\">从输入URL到页面加载的过程？如何由一道题完善自己的前端知识体系！</a></h3><p>该文梳理了一个较为完整的前端向知识体系，内容超多</p>\n<h3 id=\"玉伯《从前端技术到体验科技（附演讲视频）》\"><a href=\"#玉伯《从前端技术到体验科技（附演讲视频）》\" class=\"headerlink\" title=\"玉伯《从前端技术到体验科技（附演讲视频）》\"></a><a href=\"https://cnodejs.org/topic/5a54a8a4afa0a121784a8ab0\" target=\"_blank\" rel=\"noopener\">玉伯《从前端技术到体验科技（附演讲视频）》</a></h3><p>我想，玉伯大神应该不用过多介绍了吧，从之前的 seajs 到现在的 ant design，而玉伯大神也从一名前端工程师“进化”为一名架构师，这篇文章是玉伯大神在 SEE Conf 大会上的演讲记录，同时文章末尾还有演讲视频链接，不喜欢看文字的朋友可以直接看演讲视频。</p>\n<h3 id=\"哔哩哔哩（B站）的前端之路\"><a href=\"#哔哩哔哩（B站）的前端之路\" class=\"headerlink\" title=\"哔哩哔哩（B站）的前端之路\"></a><a href=\"https://zhuanlan.zhihu.com/p/32487533\" target=\"_blank\" rel=\"noopener\">哔哩哔哩（B站）的前端之路</a></h3><p>作者总结了 B站 的前端进阶之路，前端的轮子很多，作者介绍了 B站 是如何选型的以及遇到了哪些坑。</p>\n<h3 id=\"深入剖析-WebKit\"><a href=\"#深入剖析-WebKit\" class=\"headerlink\" title=\"深入剖析 WebKit\"></a><a href=\"http://www.starming.com/2017/10/11/deeply-analyse-webkit/\" target=\"_blank\" rel=\"noopener\">深入剖析 WebKit</a></h3><p>这篇文章和他的题目一样，真的很“深入”，因为你可以看到滚轮滑动的速度。。不过图文并茂的表现形式并不会让你产生“看不下去”的感觉，来张目录感受一下是不是干货：</p>\n<div align=\"center\"><img src=\"\" alt=\"/images/hexo_post_286.png\" width=\"400\"></div>\n\n<h3 id=\"前端文章-收藏集-掘金\"><a href=\"#前端文章-收藏集-掘金\" class=\"headerlink\" title=\"前端文章- 收藏集 - 掘金\"></a><a href=\"https://segmentfault.com/a/1190000010452096\" target=\"_blank\" rel=\"noopener\">前端文章- 收藏集 - 掘金</a></h3><p>掘金上面关于前端的文章集合，闲暇时间看一下，可能会有意想不到的收获</p>\n<h3 id=\"前端工程——基础篇\"><a href=\"#前端工程——基础篇\" class=\"headerlink\" title=\"前端工程——基础篇\"></a><a href=\"https://github.com/fouber/blog/issues/10\" target=\"_blank\" rel=\"noopener\">前端工程——基础篇</a></h3><p>fis 作者张玉龙对于前端工程的理解，从组件化到资源管理都阐述了自己的观点，这是一篇 2015 年的文章，但是文中的某些观念到现在看来仍然是字字珠玑，相信看完之后的你可以对前端有更深层次的理解。</p>\n<h3 id=\"大公司里怎样开发和部署前端代码？\"><a href=\"#大公司里怎样开发和部署前端代码？\" class=\"headerlink\" title=\"大公司里怎样开发和部署前端代码？\"></a><a href=\"https://github.com/fouber/blog/issues/6\" target=\"_blank\" rel=\"noopener\">大公司里怎样开发和部署前端代码？</a></h3><p>又是张玉龙的文章，通过一个实际的场景一步步的告诉你大公司的前端代码是如何开发和部署上线的。</p>\n<h3 id=\"Web-前端知识体系精简\"><a href=\"#Web-前端知识体系精简\" class=\"headerlink\" title=\"Web 前端知识体系精简\"></a><a href=\"http://www.cnblogs.com/onepixel/p/7021506.html\" target=\"_blank\" rel=\"noopener\">Web 前端知识体系精简</a></h3><p>从前端三剑客：HTML、CSS、Javascript 的角度分析了前端的知识体系，涉及到的领域比较广泛，很适合前端新人开拓视野和寻找学习方向，同时总结的也很全面，是一篇不错的入门教材。</p>\n<h3 id=\"移动时代的前端加密\"><a href=\"#移动时代的前端加密\" class=\"headerlink\" title=\"移动时代的前端加密\"></a><a href=\"http://div.io/topic/1220\" target=\"_blank\" rel=\"noopener\">移动时代的前端加密</a></h3><p>这篇文章篇幅很长，对于前端来说，很多人感觉“加密”是莫须有的一种东西，其实这是一种误解，“加密”并不意味着绝对安全，这篇文章将从这个角度向你阐述前端加密的正确姿势。</p>\n<h3 id=\"前端疲劳\"><a href=\"#前端疲劳\" class=\"headerlink\" title=\"前端疲劳\"></a><a href=\"http://www.jianshu.com/p/a2eff3d721cb\" target=\"_blank\" rel=\"noopener\">前端疲劳</a></h3><p>有这么多不同的前端技术栈，不同的前端框架，不同的前端工具和库像水一样包裹着我，我不去学就不会，学了又学不完。在前端的海洋里越陷越深的我究竟该如何自救呢？这篇文章可能有你要的答案</p>\n<h3 id=\"精读前后端渲染之争\"><a href=\"#精读前后端渲染之争\" class=\"headerlink\" title=\"精读前后端渲染之争\"></a><a href=\"https://github.com/camsong/blog/issues/8\" target=\"_blank\" rel=\"noopener\">精读前后端渲染之争</a></h3><p>前后端渲染一直以来都是一个带有争议的话题，而该文章的作者对<a href=\"https://medium.freecodecamp.org/heres-why-client-side-rendering-won-46a349fadb52\" target=\"_blank\" rel=\"noopener\">国外一篇关于前后端渲染的文章</a>进行了精读，介绍了前后端渲染各自的优缺点，以及我们在实际项目中如何取舍。</p>\n<h3 id=\"技术雷达之「微前端」-将微服务理念扩展到前端开发\"><a href=\"#技术雷达之「微前端」-将微服务理念扩展到前端开发\" class=\"headerlink\" title=\"技术雷达之「微前端」- 将微服务理念扩展到前端开发\"></a><a href=\"https://zhuanlan.zhihu.com/p/32378432\" target=\"_blank\" rel=\"noopener\">技术雷达之「微前端」- 将微服务理念扩展到前端开发</a></h3><p>看标题就知道，这是一篇基本上看不懂的文章，不过图文并茂的形式让这篇文章生动了很多，内容很充实，覆盖面很广</p>\n<h3 id=\"理解-Web-路由\"><a href=\"#理解-Web-路由\" class=\"headerlink\" title=\"理解 Web 路由\"></a><a href=\"https://zhuanlan.zhihu.com/p/24814675\" target=\"_blank\" rel=\"noopener\">理解 Web 路由</a></h3><p>关于路由，其实是一个很抽象的概念，而这篇文章对经常提到的前端路由和后端路由的实现和区别进行了很详细很清晰的讲解，同时对动态路由和严格路由也进行了介绍。</p>\n<h3 id=\"一站到底—前端基础之网络\"><a href=\"#一站到底—前端基础之网络\" class=\"headerlink\" title=\"一站到底—前端基础之网络\"></a><a href=\"https://juejin.im/post/5b3357556fb9a00e5a4b63df\" target=\"_blank\" rel=\"noopener\">一站到底—前端基础之网络</a></h3><p>这篇文章算是近几年来我读过的信息量最大、知识点最全的文章了，作者从访问一个网址说起，为读者建立了一个健全的网络知识体系，该文章解答了以下问题：</p>\n<p><strong>必会：</strong></p>\n<ul>\n<li>http 报文都有哪些内容？</li>\n<li>HTTP 协议头含有哪些重要的部分，HTTP 状态码？</li>\n<li>HTTP 状态码状态码都有哪些？</li>\n<li>什么是强缓存？什么是弱缓存？</li>\n<li>浏览器的现缓存机制是什么？如何设置 HTTP 缓存？</li>\n<li>你知道有哪些 HTTP 方法？POST 和 PUT 有什么区别？</li>\n<li>如何对数据进行压缩（ZLIB），Gzip? 压缩的范围是什么，请求头会压缩吗？</li>\n<li>跨域，为什么 JS 会对跨域做出限制？如何允许跨域?</li>\n</ul>\n<p><strong>基础：</strong></p>\n<ul>\n<li>影响网速的原因有哪些？网络丢包的主要原因是什么？</li>\n<li>网络体系结构的五层参考模型都是什么？它们之间的关系是什么？</li>\n<li>我们常听到报文、段（分组）、数据报、帧、和数据包，它们有什么关系？</li>\n<li>Ajax 能发送 http 请求，它和 http 有什么样的关系？</li>\n<li>HTTP1.0 到 HTTP1.1 解决了什么问题？</li>\n<li>http2 有什么特性？</li>\n<li>http1.1 为什么会有队首阻塞？</li>\n<li>SSL 与 TLS 关系？HTTPS 协议如何实现？</li>\n</ul>\n<p><strong>补课与拓展：（慢慢更新）</strong></p>\n<ul>\n<li>常用的传输层协议有哪些？TCP 和 UDP 分别有什么特点？</li>\n<li>解释一下 TCP 的三次握手和四次挥手？</li>\n<li>为什么说 TCP 可能是网络通信的瓶颈？如何解决 TCP 队首阻塞？</li>\n<li>谷歌新出 QUIC 为什么要基于 UDP？</li>\n<li>QUIC 有哪些新特性，解决了什么问题？</li>\n</ul>\n<h3 id=\"WEB-服务器探究\"><a href=\"#WEB-服务器探究\" class=\"headerlink\" title=\"WEB 服务器探究\"></a><a href=\"https://wangzitian0.github.io/2017/06/27/WEB-server-explore/\" target=\"_blank\" rel=\"noopener\">WEB 服务器探究</a></h3><p>作者介绍了 web 服务器的基本概念，和常见的服务端演替路线。图文并茂的方式很容易理解，干货满满。</p>\n<h3 id=\"网站性能优化实战——从12-67s到1-06s的故事\"><a href=\"#网站性能优化实战——从12-67s到1-06s的故事\" class=\"headerlink\" title=\"网站性能优化实战——从12.67s到1.06s的故事\"></a><a href=\"http://imweb.io/topic/5b6fd3c13cb5a02f33c013bd\" target=\"_blank\" rel=\"noopener\">网站性能优化实战——从12.67s到1.06s的故事</a></h3><p>作者将<a href=\"http://jerryonlyzrj.com/resume/\" target=\"_blank\" rel=\"noopener\">自己的在线简历</a>进行了性能优化，首屏时间从 12.67s 降低到了 1.06s，这个过程中作者踩了很多坑，翻阅了很多书籍，最终总结出了这篇文章。文章涉及到的知识点比较全面，对性能优化进行了系统的介绍。</p>\n<h3 id=\"现代-Web-开发基础与工程实践\"><a href=\"#现代-Web-开发基础与工程实践\" class=\"headerlink\" title=\"现代 Web 开发基础与工程实践\"></a><a href=\"https://github.com/wxyyxc1992/Web-Series/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">现代 Web 开发基础与工程实践</a></h3><p>前端大牛@王下邀月熊的著作，对 Web 开发基础与工程实践的相关博客、示例代码与开源项目、整理成的系列书籍等内容进行了总结，信息量异常庞大，包含以下篇章：</p>\n<ul>\n<li><a href=\"https://github.com/wxyyxc1992/Web-Series/blob/master/%E5%AF%BC%E8%AE%BA\" target=\"_blank\" rel=\"noopener\">导论篇</a>: Web 开发简史与运行机制，数据流驱动的界面，模块化与组件化，工具化与工程化，前后端分离与 GraphQL，大前端与 WebAssembly。</li>\n<li><a href=\"https://github.com/wxyyxc1992/Web-Series/blob/master/%E5%9F%BA%E7%A1%80\" target=\"_blank\" rel=\"noopener\">基础篇</a>: 对于 HTML、CSS、DOM 等 Web 开发中涉及的基础知识与理念的总结介绍。</li>\n<li><a href=\"https://github.com/wxyyxc1992/Web-Series/blob/master/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5\" target=\"_blank\" rel=\"noopener\">工程实践篇</a>: 构建工具，测试，安全，WebAssembly。</li>\n<li><a href=\"https://github.com/wxyyxc1992/Web-Series/blob/master/%E6%9E%B6%E6%9E%84%E4%BC%98%E5%8C%96%E7%AF%87\" target=\"_blank\" rel=\"noopener\">架构优化篇</a>: 组件化，状态管理，性能优化，PWA。</li>\n<li><a href=\"https://github.com/wxyyxc1992/Web-Series/blob/master/React\" target=\"_blank\" rel=\"noopener\">React 篇</a>：近年来前端领域百花齐放，各种技术方案争妍斗艳，各领风骚。本书立足于其中的佼佼者 React，深入浅出的介绍 React、Webpack 、 ES6、Redux 、 MobX 等常见前端开发工具与开发库的用法，帮助初学者能够迅速成为一名合格前端工程师。而本书也不仅局限于工具使用的层面，探寻各种技术方案背后蕴含的设计思想与架构模式，从前端工程化的角度讨论前端开发者在进阶过程中需要掌握的工程实践、模块化与组件化、质量保障、性能优化等知识要点。最终帮助开发者在前端开发中能够因地制宜的指定合理方案，以尽可能快的速度实现可信赖的产品。</li>\n<li><a href=\"https://github.com/wxyyxc1992/Web-Series/blob/master/Vue\" target=\"_blank\" rel=\"noopener\">Vue 篇</a>：本部分目前正逐步启动，笔者的初衷是希望能够保证本书章节与 <a href=\"https://github.com/wxyyxc1992/Web-Series/blob/master/React\" target=\"_blank\" rel=\"noopener\">React 与前端工程化实践</a>尽可能一致，从而更方便地去介绍不同技术栈下相通的设计理念；目前本书的目录只是拷贝自 <a href=\"https://github.com/wxyyxc1992/Web-Series/blob/master/React\" target=\"_blank\" rel=\"noopener\">React 与前端工程化实践</a>，未来笔者会逐步完善。</li>\n</ul>\n<h3 id=\"雅虎前端优化35条规则翻译\"><a href=\"#雅虎前端优化35条规则翻译\" class=\"headerlink\" title=\"雅虎前端优化35条规则翻译\"></a><a href=\"https://github.com/creeperyang/blog/issues/1\" target=\"_blank\" rel=\"noopener\">雅虎前端优化35条规则翻译</a></h3><p>本文是大名鼎鼎的雅虎前端优化规则（<strong>Yslow</strong>）的翻译。作者对其中的一些例子进行了精简。</p>\n<h3 id=\"前端知识体系目录\"><a href=\"#前端知识体系目录\" class=\"headerlink\" title=\"前端知识体系目录\"></a><a href=\"http://hao.jser.com/archive/5314/\" target=\"_blank\" rel=\"noopener\">前端知识体系目录</a></h3><p>从基础到进阶，从 HTML、CSS、JS 到 HTTP，简单的总结了前端领域需要了解的知识点，同时推荐了一些书籍，对于那些想要入坑前端的童鞋来说是一份不错的指引文档。</p>\n<h3 id=\"微前端的那些事儿\"><a href=\"#微前端的那些事儿\" class=\"headerlink\" title=\"微前端的那些事儿\"></a><a href=\"https://github.com/phodal/microfrontends\" target=\"_blank\" rel=\"noopener\">微前端的那些事儿</a></h3><blockquote>\n<p>微前端是一种类似于微服务的架构，它将微服务的理念应用于浏览器端，即将 Web 应用由单一的单体应用转变为<strong>多个小型前端应用聚合为一的应用</strong>。各个前端应用还可以<strong>独立运行</strong>、<strong>独立开发</strong>、<strong>独立部署</strong>。</p>\n</blockquote>\n<p>这篇文章是 phodal 对于微前端的解读，包括其实现方式以及方案对比，而微服务与前端的结合会有多大的优势，值得期待。</p>\n<h3 id=\"2018-前端常见题汇总\"><a href=\"#2018-前端常见题汇总\" class=\"headerlink\" title=\"2018 前端常见题汇总\"></a><a href=\"https://github.com/qianbin01/frontend_train\" target=\"_blank\" rel=\"noopener\">2018 前端常见题汇总</a></h3><p>汇总了前端一些问题，作者不定时更新，建议收藏</p>\n<ol>\n<li><a href=\"https://github.com/qianbin01/frontend_train#html\" target=\"_blank\" rel=\"noopener\">HTML 相关</a></li>\n<li><a href=\"https://github.com/qianbin01/frontend_train#css\" target=\"_blank\" rel=\"noopener\">CSS 相关</a></li>\n<li><a href=\"https://github.com/qianbin01/frontend_train#javascript\" target=\"_blank\" rel=\"noopener\">JAVASCRIPT 相关</a></li>\n<li><a href=\"https://github.com/qianbin01/frontend_train#dom\" target=\"_blank\" rel=\"noopener\">DOM 相关</a></li>\n<li><a href=\"https://github.com/qianbin01/frontend_train#http\" target=\"_blank\" rel=\"noopener\">HTTP 相关</a></li>\n<li><a href=\"https://github.com/qianbin01/frontend_train#vue\" target=\"_blank\" rel=\"noopener\">VUE 相关</a></li>\n<li><a href=\"https://github.com/qianbin01/frontend_train#sort\" target=\"_blank\" rel=\"noopener\">算法相关</a></li>\n<li><a href=\"https://github.com/qianbin01/frontend_train#web\" target=\"_blank\" rel=\"noopener\">网络安全相关</a></li>\n<li><a href=\"https://github.com/qianbin01/frontend_train#webpack\" target=\"_blank\" rel=\"noopener\">webpack 相关</a></li>\n<li><a href=\"https://github.com/qianbin01/frontend_train#other\" target=\"_blank\" rel=\"noopener\">其他</a></li>\n</ol>\n<h3 id=\"InfoQ-趋势报告之-JavaScript-和-Web-开发\"><a href=\"#InfoQ-趋势报告之-JavaScript-和-Web-开发\" class=\"headerlink\" title=\"InfoQ 趋势报告之 JavaScript 和 Web 开发\"></a><a href=\"https://www.infoq.cn/article/TFXQXkWbPPM*cK5KFJrW\" target=\"_blank\" rel=\"noopener\">InfoQ 趋势报告之 JavaScript 和 Web 开发</a></h3><p>文章简单介绍了 Javascript 生态系统的现状和发展历程，文中提到了很多名词和框架，是一篇很不错的“扫盲”文章。</p>\n<h3 id=\"2019-Web开发技术指南和趋势\"><a href=\"#2019-Web开发技术指南和趋势\" class=\"headerlink\" title=\"2019 - Web开发技术指南和趋势\"></a><a href=\"https://www.jianshu.com/p/062c978d9f04\" target=\"_blank\" rel=\"noopener\">2019 - Web开发技术指南和趋势</a></h3><p>这是一个 2019 年你成为前端，后端或全栈开发者的进阶指南:</p>\n<ol>\n<li>你不需要学习所有的技术成为一个 web 开发者</li>\n<li>这个指南只是通过简单分类列出了技术选项</li>\n<li>我将从我的经验和参考中给出建议</li>\n<li>首选我们会介绍通用的知识, 最后介绍 2019 年的 Web 的一些趋势</li>\n</ol>\n<p>要想知道更多细节, 请看 Youtube 视频: <a href=\"https://www.youtube.com/watch?v=UnTQVlqmDQ0&amp;t=18s\" target=\"_blank\" rel=\"noopener\">Web Development in 2019</a></p>\n<h3 id=\"前端模块化详解-完整版\"><a href=\"#前端模块化详解-完整版\" class=\"headerlink\" title=\"前端模块化详解(完整版)\"></a><a href=\"https://juejin.im/post/5c17ad756fb9a049ff4e0a62\" target=\"_blank\" rel=\"noopener\">前端模块化详解(完整版)</a></h3><p>这篇文章内容主要有理解模块化，为什么要模块化，模块化的优缺点以及模块化规范，并且介绍下开发中最流行的 CommonJS, AMD, ES6、CMD 规范。作者试图站在小白的角度，用通俗易懂的笔调介绍这些枯燥无味的概念，希望屏幕前的你阅读后，对模块化编程有个全新的认识和理解！</p>\n<h3 id=\"2018-前端性能优化清单\"><a href=\"#2018-前端性能优化清单\" class=\"headerlink\" title=\"2018 前端性能优化清单\"></a><a href=\"https://cherryblog.site/front-end-performance-checklist-2018.html\" target=\"_blank\" rel=\"noopener\">2018 前端性能优化清单</a></h3><p>英文原文：<a href=\"https://www.smashingmagazine.com/2018/01/front-end-performance-checklist-2018-pdf-pages/\" target=\"_blank\" rel=\"noopener\">https://www.smashingmagazine.com/2018/01/front-end-performance-checklist-2018-pdf-pages/</a>，文章较长，需要比较长的时间才能读完，涉及到的地方非常全面，五星推荐。</p>\n<h3 id=\"列一份前端知识架构图\"><a href=\"#列一份前端知识架构图\" class=\"headerlink\" title=\"列一份前端知识架构图\"></a><a href=\"https://time.geekbang.org/column/article/77804\" target=\"_blank\" rel=\"noopener\">列一份前端知识架构图</a></h3><p>计算机之子“Winter”列的一份前端知识框架图</p>\n<h3 id=\"茴字的四种写法—移动适配方案的进化\"><a href=\"#茴字的四种写法—移动适配方案的进化\" class=\"headerlink\" title=\"茴字的四种写法—移动适配方案的进化\"></a><a href=\"https://segmentfault.com/a/1190000014309664\" target=\"_blank\" rel=\"noopener\">茴字的四种写法—移动适配方案的进化</a></h3><p>这是一篇一站式的文章，可以系统的了解前端适配的演进。</p>\n<h3 id=\"现代前端开发路线图：从零开始，一步步成为前端工程师\"><a href=\"#现代前端开发路线图：从零开始，一步步成为前端工程师\" class=\"headerlink\" title=\"现代前端开发路线图：从零开始，一步步成为前端工程师\"></a><a href=\"https://36kr.com/p/5128487.html\" target=\"_blank\" rel=\"noopener\">现代前端开发路线图：从零开始，一步步成为前端工程师</a></h3><p>很多人都想学编程。但是苦于没有具体的步骤和指导。比如想找份前端开发的工作，却不知道应该先学习什么再学习什么，也不知道该选择什么样的工具。因为经常被人问到类似的问题，全栈开发者Kamran Ahmed索性在github上制订了一份<a href=\"https://github.com/kamranahmedse/developer-roadmap\" target=\"_blank\" rel=\"noopener\">现代前端开发的路线图</a>，并且用<a href=\"https://medium.com/tech-tajawal/modern-frontend-developer-in-2018-4c2072fa2b9c\" target=\"_blank\" rel=\"noopener\">一篇文章</a>对前端开发的整个学习过程进行了详细解释。感兴趣的初学者不容错过。</p>\n<p>而这篇文章的目的就是依次解释路线图的每一个步骤，对于前端初学者来说具有指引作用。</p>\n<h2 id=\"JS相关\"><a href=\"#JS相关\" class=\"headerlink\" title=\"JS相关\"></a>JS相关</h2><h3 id=\"统一回复《怎么学JavaScript？》\"><a href=\"#统一回复《怎么学JavaScript？》\" class=\"headerlink\" title=\"统一回复《怎么学JavaScript？》\"></a><a href=\"http://www.qdfuns.com/notes/17398/d3f6dd40e2d3ff15b209810dfa98be0b:storey-71.html\" target=\"_blank\" rel=\"noopener\">统一回复《怎么学JavaScript？》</a></h3><p>作者通过自己的经历告诉大家：如何学习前端。这是一篇很不错的前端入门文章，作者推荐了一些前端方面的书籍，同时还注明了这些书籍适合什么时候阅读以及适合怎样阅读，建议仍然不知道如何学前端的你好好看一下这篇文章</p>\n<h3 id=\"javascript-的-12-个怪癖（quirks）\"><a href=\"#javascript-的-12-个怪癖（quirks）\" class=\"headerlink\" title=\"javascript 的 12 个怪癖（quirks）\"></a><a href=\"http://justjavac.com/javascript/2013/04/08/12-javascript-quirks.html\" target=\"_blank\" rel=\"noopener\">javascript 的 12 个怪癖（quirks）</a></h3><p>实际上 javascript 是一个相当简洁的语言，但是也难免会有一些怪癖（quirks）。这是作者翻译的国外一个开发者的系列文章，同时在我发布之前（2017-8-7），作者还没有翻译团队，如果有英语比较好的前端小伙伴，欢迎加入翻译的队伍中，像我这种英语“战五渣”表示只能“拿来”了。。</p>\n<h3 id=\"80-应聘者都不及格的-JS-面试题\"><a href=\"#80-应聘者都不及格的-JS-面试题\" class=\"headerlink\" title=\"80% 应聘者都不及格的 JS 面试题\"></a><a href=\"https://juejin.im/post/58cf180b0ce4630057d6727c\" target=\"_blank\" rel=\"noopener\">80% 应聘者都不及格的 JS 面试题</a></h3><p>从最简单的 setTimeout() 执行队列，到自执行函数产生闭包，再到 ES6 中的 promise 以及 ES7 中的 async 和 await，作者通过一道不断延伸出来的js面试题讲解了在面试中经常遇到的问题，同时对以上的这些知识点进行了概括总结</p>\n<h3 id=\"翻译-We-have-a-problem-with-promises\"><a href=\"#翻译-We-have-a-problem-with-promises\" class=\"headerlink\" title=\"[翻译] We have a problem with promises\"></a><a href=\"http://fex.baidu.com/blog/2015/07/we-have-a-problem-with-promises/?qq-pf-to=pcqq.c2c\" target=\"_blank\" rel=\"noopener\">[翻译] We have a problem with promises</a></h3><p>promise 一直是被认为判断一名“前端工程师”是否仍然处在“初级”的利器，而这篇文章通过 promise 相关的四段代码对 promise 进行了深入剖析，这是一篇译文，英文原文可以<a href=\"http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html\" target=\"_blank\" rel=\"noopener\">点击这里</a>查看</p>\n<h3 id=\"学用-JavaScript-设计模式\"><a href=\"#学用-JavaScript-设计模式\" class=\"headerlink\" title=\"学用 JavaScript 设计模式\"></a><a href=\"http://wiki.jikexueyuan.com/project/javascript-design-patterns/constructor-mode.html\" target=\"_blank\" rel=\"noopener\">学用 JavaScript 设计模式</a></h3><p>设计模式的概念很早之前就有了，而 JS 虽然之前一直被认为是“做网页”的语言，但是JS中也有设计模式的思想，相信看完这个系列的文章之后，你会对 JS 有更加深入的理解，该系列文章对于没有“面向对象”语言基础的童鞋来说可能会有些难度，建议在看的过程中及时查阅其他资料。</p>\n<h3 id=\"ajax跨域，这应该是最全的解决方案了\"><a href=\"#ajax跨域，这应该是最全的解决方案了\" class=\"headerlink\" title=\"ajax跨域，这应该是最全的解决方案了\"></a><a href=\"https://segmentfault.com/a/1190000012469713\" target=\"_blank\" rel=\"noopener\">ajax跨域，这应该是最全的解决方案了</a></h3><p>看题目就很屌，恩。。</p>\n<h3 id=\"jQuery的document-ready与-onload事件——你真的思考过吗？\"><a href=\"#jQuery的document-ready与-onload事件——你真的思考过吗？\" class=\"headerlink\" title=\"jQuery的document ready与 onload事件——你真的思考过吗？\"></a><a href=\"https://www.cnblogs.com/lovesong/p/5641834.html\" target=\"_blank\" rel=\"noopener\">jQuery的document ready与 onload事件——你真的思考过吗？</a></h3><p>虽然题目看似和 jQuery 关系很大，但其实作者探究了很多 JS 相关问题，包括加载顺序以及 load 事件的产生原因，内容短小精悍，值得一看。下面这些问题是作者在文中所阐述探索的：</p>\n<ol>\n<li>window.onload 到底是什么加载完触发？</li>\n<li>body 为什么会有 onload 事件？</li>\n<li>为什么是 window.onload，而不是 document.onload？</li>\n<li>document ready到底是什么 ready，DOM 渲染完成？</li>\n<li>jQuery 怎么实现 $(document).ready？</li>\n<li>jQuery 的 ready，还能 ready 什么？</li>\n<li>jQuery 的 document ready 就一定比 window.onload 快吗？</li>\n<li>为什么外部 script 文件放页面内容后面好，是一定的吗？</li>\n</ol>\n<h3 id=\"10-分钟了解-JS-堆、栈以及事件循环的概念\"><a href=\"#10-分钟了解-JS-堆、栈以及事件循环的概念\" class=\"headerlink\" title=\"10 分钟了解 JS 堆、栈以及事件循环的概念\"></a><a href=\"https://github.com/BooheeFE/weekly/issues/2\" target=\"_blank\" rel=\"noopener\">10 分钟了解 JS 堆、栈以及事件循环的概念</a></h3><p>作者通过 <code>JS的内存机制</code>以及<code>事件机制</code>和<code>大量的（例子）</code>来讲解栈、堆究竟是个什么玩意。概念比较多，不用死读，把所有的实例代码手敲一遍就很清楚了，作者讲的很透彻，该文章来自于<a href=\"https://github.com/BooheeFE/weekly\" target=\"_blank\" rel=\"noopener\">薄荷前端周刊</a>，该周刊发布的文章都蛮不错的，建议阅读~</p>\n<h3 id=\"7-分钟理解-JS-的节流、防抖及使用场景\"><a href=\"#7-分钟理解-JS-的节流、防抖及使用场景\" class=\"headerlink\" title=\"7 分钟理解 JS 的节流、防抖及使用场景\"></a><a href=\"https://juejin.im/post/5b8de829f265da43623c4261?utm_medium=fe&amp;utm_source=weixinqun\" target=\"_blank\" rel=\"noopener\">7 分钟理解 JS 的节流、防抖及使用场景</a></h3><p>防抖和节流是两个很重要也经常会用到的知识点，这篇文章的重点并不是介绍它们的实现原理，而是着眼于它们的应用效果和应用场景，文中对于防抖和节流产生效果的总结很通俗易懂：</p>\n<blockquote>\n<p>函数防抖就是法师发技能的时候要读条，技能读条没完再按技能就会重新读条。<br>函数节流就是 fps 游戏的射速，就算一直按着鼠标射击，也只会在规定射速内射出子弹。</p>\n</blockquote>\n<h3 id=\"精读-The-Cost-of-JavaScript\"><a href=\"#精读-The-Cost-of-JavaScript\" class=\"headerlink\" title=\"精读 The Cost of JavaScript\"></a><a href=\"https://zhuanlan.zhihu.com/p/41292532\" target=\"_blank\" rel=\"noopener\">精读 The Cost of JavaScript</a></h3><p>Addy 在 <a href=\"https://medium.com/@addyosmani/the-cost-of-javascript-in-2018-7d8950fbb5d4\" target=\"_blank\" rel=\"noopener\">The Cost of JavaScript In 2018</a>一文中分享了在保证用户友好交互体验的前提下如何高效分发 JavaScript 的开发经验，而我现在推荐的这篇文章是一篇导读文章，原文作者首先将全文的内容压缩成几条观点总结出来，之后从用户体验为 Web 带来的变化开始说起，到 JavaScript 的成本有哪些、它们为何如此高昂、如何降低开销以及持续集成，全文形成一个非常完整的优化流程：</p>\n<ol>\n<li>写在开头的话</li>\n<li>膨胀的 JavaScript 与 Web 现状</li>\n<li>JavaScript 的成本所在</li>\n<li>页面交互性解释与建议</li>\n<li>处理 JavaScript 成本为何如此昂贵</li>\n<li>千差万别的移动用户与应对策略</li>\n<li>分发更少 JavaScript 的常见技巧</li>\n<li>持续集成四部曲</li>\n</ol>\n<h3 id=\"深入理解javascript原型和闭包系列\"><a href=\"#深入理解javascript原型和闭包系列\" class=\"headerlink\" title=\"深入理解javascript原型和闭包系列\"></a><a href=\"http://www.cnblogs.com/wangfupeng1988/p/4001284.html\" target=\"_blank\" rel=\"noopener\">深入理解javascript原型和闭包系列</a></h3><p>本系列有 16 篇文章，外加两篇后补的，一共 18 篇文章。将原型和闭包相关知识都进行了讲解，知识点很全，图文并茂。</p>\n<h3 id=\"JavaScript-模块化七日谈\"><a href=\"#JavaScript-模块化七日谈\" class=\"headerlink\" title=\"JavaScript 模块化七日谈\"></a><a href=\"https://github.com/Huxpro/js-module-7day\" target=\"_blank\" rel=\"noopener\">JavaScript 模块化七日谈</a></h3><p>作者以 slide 的形式讲解了 JS 模块化的发展历程，目录：</p>\n<ul>\n<li>第一日 上古时期 <em><strong>Module?</strong></em> 从设计模式说起</li>\n<li>第二日 石器时代 <em><strong>Script Loader</strong></em> 只有封装性可不够，我们还需要加载</li>\n<li>第三日 蒸汽朋克 <em><strong>Module Loader</strong></em> 模块化架构的工业革命</li>\n<li>第四日 号角吹响 <em><strong>CommonJS</strong></em> 征服世界的第一步是跳出浏览器</li>\n<li>第五日 双塔奇兵 <em><strong>AMD/CMD</strong></em> 浏览器环境模块化方案</li>\n<li>第六日 精灵宝钻 <em><strong>Browserify/Webpack</strong></em> 大势所趋，去掉这层包裹！</li>\n<li>第七日 王者归来 <em><strong>ES6 Module</strong></em> 最后的战役</li>\n</ul>\n<h3 id=\"写了-10-年-Javascript-未必全了解的连续赋值运算\"><a href=\"#写了-10-年-Javascript-未必全了解的连续赋值运算\" class=\"headerlink\" title=\"写了 10 年 Javascript 未必全了解的连续赋值运算\"></a><a href=\"https://yanhaijing.com/javascript/2012/04/05/javascript-continuous-assignment-operator/\" target=\"_blank\" rel=\"noopener\">写了 10 年 Javascript 未必全了解的连续赋值运算</a></h3><p><code>a.x = a = {n:2}</code> 是一个连续赋值表达式。 这个连续赋值表达式在引擎内部究竟发生了什么？是如何解释的？作者从这一问题出发，对 JS 中的变量定义规则进行了研究。</p>\n<h3 id=\"每个-JavaScript-工程师都应懂的33个概念\"><a href=\"#每个-JavaScript-工程师都应懂的33个概念\" class=\"headerlink\" title=\"每个 JavaScript 工程师都应懂的33个概念\"></a><a href=\"https://github.com/stephentian/33-js-concepts\" target=\"_blank\" rel=\"noopener\">每个 JavaScript 工程师都应懂的33个概念</a></h3><p>这篇文章是参照 @leonardomso 创立，英文版项目地址在<a href=\"https://github.com/leonardomso/33-js-concepts\" target=\"_blank\" rel=\"noopener\">这里</a>。 由于原版资源都要翻墙，所以作者创立了一个中文版，附上关于 JS 中的 33 个概念在国内的一些文章和视频。所以这可以看做是一个文章 / 视频集合，闲来无事的时候可以看一下巩固一下基础概念。</p>\n<h3 id=\"前端网老姚浅谈：怎么学-JavaScript？\"><a href=\"#前端网老姚浅谈：怎么学-JavaScript？\" class=\"headerlink\" title=\"前端网老姚浅谈：怎么学 JavaScript？\"></a><a href=\"https://zhuanlan.zhihu.com/p/23265155\" target=\"_blank\" rel=\"noopener\">前端网老姚浅谈：怎么学 JavaScript？</a></h3><p>前端老姚对如何学习JS这一问题的解答，主要回答了以下几个问题：</p>\n<ul>\n<li>看书有啥好处</li>\n<li>看什么书</li>\n<li>怎么看书</li>\n<li>看书的层次</li>\n<li>利用源码进行学习</li>\n<li>时间、兴趣等问题</li>\n</ul>\n<h3 id=\"Effective-JavaScript\"><a href=\"#Effective-JavaScript\" class=\"headerlink\" title=\"Effective JavaScript\"></a><a href=\"https://github.com/dreamapplehappy/effective-javascript\" target=\"_blank\" rel=\"noopener\">Effective JavaScript</a></h3><p>关于原生 JS 的 68 个实例，理论上,实践过下面的 68 个项目之后,你的JS能力应该有一个质的飞跃</p>\n<h3 id=\"how-javascript-works\"><a href=\"#how-javascript-works\" class=\"headerlink\" title=\"how javascript works\"></a><a href=\"https://github.com/Troland/how-javascript-works\" target=\"_blank\" rel=\"noopener\">how javascript works</a></h3><p>本文是翻译介绍 JavaScript 的工作原理的，该系列原文还在更新中，原文见<a href=\"https://blog.sessionstack.com/tagged/tutorial\" target=\"_blank\" rel=\"noopener\">这里</a>。</p>\n<h3 id=\"JavaScript-This-的六道坎\"><a href=\"#JavaScript-This-的六道坎\" class=\"headerlink\" title=\"JavaScript This 的六道坎\"></a><a href=\"https://blog.crimx.com/2016/05/12/understanding-this/\" target=\"_blank\" rel=\"noopener\">JavaScript This 的六道坎</a></h3><p>鉴于 this 风骚的运作方式，对 this 的理解是永不过时的话题，该文试图通过将其大卸六块来钉住这个磨人的妖精。通过六个成语对 this 进行了剖析讲解，非常清晰明了。</p>\n<h3 id=\"从浏览器多进程到JS单线程，JS运行机制最全面的一次梳理\"><a href=\"#从浏览器多进程到JS单线程，JS运行机制最全面的一次梳理\" class=\"headerlink\" title=\"从浏览器多进程到JS单线程，JS运行机制最全面的一次梳理\"></a><a href=\"http://www.dailichun.com/2018/01/21/js_singlethread_eventloop.html\" target=\"_blank\" rel=\"noopener\">从浏览器多进程到JS单线程，JS运行机制最全面的一次梳理</a></h3><ol>\n<li>展现形式：由于是属于系统梳理型，就没有由浅入深了，而是从头到尾的梳理知识体系，重点是将关键节点的知识点串联起来，而不是仅仅剖析某一部分知识。</li>\n<li>内容是：从浏览器进程，再到浏览器内核运行，再到 JS 引擎单线程，再到 JS 事件循环机制，从头到尾系统的梳理一遍，摆脱碎片化，形成一个知识体系</li>\n<li>目标是：看完这篇文章后，对浏览器多进程，JS 单线程，JS 事件循环机制这些都能有一定理解，有一个知识体系骨架，而不是似懂非懂的感觉。</li>\n<li>另外，本文适合有一定经验的前端人员，<strong>新手请规避</strong>，避免受到过多的概念冲击。可以先存起来，有了一定理解后再看，也可以分成多批次观看，避免过度疲劳。</li>\n</ol>\n<p><strong>大纲</strong>：</p>\n<ul>\n<li>区分进程和线程</li>\n<li>浏览器是多进程的<ul>\n<li>浏览器都包含哪些进程？</li>\n<li>浏览器多进程的优势</li>\n<li>重点是浏览器内核（渲染进程）</li>\n<li>Browser进程和浏览器内核（Renderer进程）的通信过程</li>\n</ul>\n</li>\n<li>梳理浏览器内核中线程之间的关系<ul>\n<li>GUI渲染线程与JS引擎线程互斥</li>\n<li>JS阻塞页面加载</li>\n<li>WebWorker，JS的多线程？</li>\n<li>WebWorker与SharedWorker</li>\n</ul>\n</li>\n<li>简单梳理下浏览器渲染流程<ul>\n<li>load事件与DOMContentLoaded事件的先后</li>\n<li>css加载是否会阻塞dom树渲染？</li>\n<li>普通图层和复合图层</li>\n</ul>\n</li>\n<li>从Event Loop谈JS的运行机制<ul>\n<li>事件循环机制进一步补充</li>\n<li>单独说说定时器</li>\n<li>setTimeout而不是setInterval</li>\n</ul>\n</li>\n<li>事件循环进阶：macrotask与microtask</li>\n<li>写在最后的话</li>\n</ul>\n<h3 id=\"关于-Promise-的-9-个提示\"><a href=\"#关于-Promise-的-9-个提示\" class=\"headerlink\" title=\"关于 Promise 的 9 个提示\"></a><a href=\"https://mp.weixin.qq.com/s/1ILwZ6BecgBFA49c4YvTRQ\" target=\"_blank\" rel=\"noopener\">关于 Promise 的 9 个提示</a></h3><p>通过 9 个鲜活的案例，我们可以加深对 Promise 的理解</p>\n<h2 id=\"HTML相关\"><a href=\"#HTML相关\" class=\"headerlink\" title=\"HTML相关\"></a>HTML相关</h2><h3 id=\"常用的-HTML-头部标签\"><a href=\"#常用的-HTML-头部标签\" class=\"headerlink\" title=\"常用的 HTML 头部标签\"></a><a href=\"https://github.com/yisibl/blog/issues/1\" target=\"_blank\" rel=\"noopener\">常用的 HTML 头部标签</a></h3><p>曾几何时，我们已经不再手写 HTML 标签。Emmet、Markdown 等工具让我们「健步如飞」，但是我们真的了解这些标签了吗？这篇文章着重介绍了一些我们容易忽视和用错的头部标签，特别是 iOS 等针对移动设备的一些标签。这是一篇非常基础的标签索引，其中 iOS 设备部分对设计师也有参考作用。</p>\n<h3 id=\"H5-项目常见问题汇总及解决方案\"><a href=\"#H5-项目常见问题汇总及解决方案\" class=\"headerlink\" title=\"H5 项目常见问题汇总及解决方案\"></a><a href=\"https://github.com/FrontEndRoad/HTML5-FAQ\" target=\"_blank\" rel=\"noopener\">H5 项目常见问题汇总及解决方案</a></h3><p>这是一篇还算比较新的文章（2017-3-26），作者总结了一些前端开发过程中的常见问题，虽然有些问题可能不算是“常见”，但是看过一遍之后留下点印象也是可行的，到时候如果真遇到了不会解决的问题就知道去哪里找答案了~</p>\n<h3 id=\"HTML5-进阶系列：文件上传下载\"><a href=\"#HTML5-进阶系列：文件上传下载\" class=\"headerlink\" title=\"HTML5 进阶系列：文件上传下载\"></a><a href=\"https://juejin.im/post/59598ecf5188250d8d141fff\" target=\"_blank\" rel=\"noopener\">HTML5 进阶系列：文件上传下载</a></h3><p>HTML5 中提供的文件API在前端中有着丰富的应用，上传、下载、读取内容等在日常的交互中很常见。而且在各个浏览器的兼容也比较好，包括移动端。作者在该文中介绍了一些上传下载的 API，包括 FileList 对象和 file 对象、Blob 对象和 FileReader 对象等。</p>\n<h3 id=\"图片上传知识点梳理\"><a href=\"#图片上传知识点梳理\" class=\"headerlink\" title=\"图片上传知识点梳理\"></a><a href=\"https://juejin.im/post/5be023b651882516bc47762e\" target=\"_blank\" rel=\"noopener\">图片上传知识点梳理</a></h3><p>在日常项目开发中，图片上传是一个十分常见的场景。在这篇文章中，作者通过简单的代码，解析了图片上传的各个知识点，包括样式自定义、图片校验、图片上传预览、图片上传与上传进度展示和拖拽上传。</p>\n<h3 id=\"requestAnimationFrame-知多少？\"><a href=\"#requestAnimationFrame-知多少？\" class=\"headerlink\" title=\"requestAnimationFrame 知多少？\"></a><a href=\"www.cnblogs.com/onepixel/p/7078617.html\">requestAnimationFrame 知多少？</a></h3><p>html5 提供了一个专门用于请求动画的 API，即 requestAnimationFrame（rAF），顾名思义就是 “请求动画帧”。这篇文章就是带你深入理解 rAF 背后的原理。</p>\n<h2 id=\"CSS相关\"><a href=\"#CSS相关\" class=\"headerlink\" title=\"CSS相关\"></a>CSS相关</h2><h3 id=\"写-CSS-的姿势\"><a href=\"#写-CSS-的姿势\" class=\"headerlink\" title=\"写 CSS 的姿势\"></a><a href=\"https://www.w3cplus.com/css/css-evolution.html\" target=\"_blank\" rel=\"noopener\">写 CSS 的姿势</a></h3><p>作者-大漠，内容很丰富，放在第一位是有原因的。。</p>\n<h3 id=\"CSS-实现长宽比的几种方案\"><a href=\"#CSS-实现长宽比的几种方案\" class=\"headerlink\" title=\"CSS 实现长宽比的几种方案\"></a><a href=\"https://www.w3cplus.com/css/aspect-ratio.html\" target=\"_blank\" rel=\"noopener\">CSS 实现长宽比的几种方案</a></h3><p>作者是传说中的大漠孤秋，介绍了单纯用CSS实现定比例长宽图形的几种方案</p>\n<h3 id=\"实用的-CSS-—-贝塞尔曲线-cubic-bezier\"><a href=\"#实用的-CSS-—-贝塞尔曲线-cubic-bezier\" class=\"headerlink\" title=\"实用的 CSS — 贝塞尔曲线(cubic-bezier)\"></a><a href=\"http://joveyzheng.com/2016/03/16/css-cubic-bezier/\" target=\"_blank\" rel=\"noopener\">实用的 CSS — 贝塞尔曲线(cubic-bezier)</a></h3><p>贝塞尔曲线在 CSS 动画中应用较广，了解一下对于 CSS 动画效果会有更深的理解</p>\n<h3 id=\"探究-CSS-解析原理\"><a href=\"#探究-CSS-解析原理\" class=\"headerlink\" title=\"探究 CSS 解析原理\"></a><a href=\"http://jartto.wang/2017/11/13/Exploring-the-principle-of-CSS-parsing/index.html\" target=\"_blank\" rel=\"noopener\">探究 CSS 解析原理</a></h3><p>作者对浏览器的渲染过程和 CSS 的解析原理进行了详细解释，代码很多，干货满满</p>\n<h3 id=\"改变用户体验的滚动新特性\"><a href=\"#改变用户体验的滚动新特性\" class=\"headerlink\" title=\"改变用户体验的滚动新特性\"></a><a href=\"https://www.w3cplus.com/css/new-scroll-features-that-change-the-user-experience.html\" target=\"_blank\" rel=\"noopener\">改变用户体验的滚动新特性</a></h3><p>作者是大漠，他在文中介绍了时至今日，CSS 中为浏览器滚动提供的相关新特性究竟能给用户带来哪些新的体验。图片和代码较多，慎用流量</p>\n<h3 id=\"说说CSS学习中的瓶颈\"><a href=\"#说说CSS学习中的瓶颈\" class=\"headerlink\" title=\"说说CSS学习中的瓶颈\"></a><a href=\"https://www.zhangxinxu.com/wordpress/2012/07/bottleneck-css-study/\" target=\"_blank\" rel=\"noopener\">说说CSS学习中的瓶颈</a></h3><p>张鑫旭 2012 年的文章，虽然年代比较久远了，但是至今看来还是颇受启发，如果你有“CSS好难”、“为什么CSS那么多属性”、“怎么让它垂直居中啊”等疑问，推荐你看这篇文章。</p>\n<h3 id=\"「前端那些事儿」③-CSS-布局方案\"><a href=\"#「前端那些事儿」③-CSS-布局方案\" class=\"headerlink\" title=\"「前端那些事儿」③ CSS 布局方案\"></a><a href=\"https://juejin.im/post/5bd805e6f265da0acd2107d7\" target=\"_blank\" rel=\"noopener\">「前端那些事儿」③ CSS 布局方案</a></h3><p>作者几乎罗列了日常工作中遇到的所有类型的布局，并附上了详细的代码，其中包括：居中布局、多列布局、并排等分，单排对齐靠左布局和圣杯布局&amp;双飞翼布局等。源码传送门：<a href=\"https://github.com/willspace/css-layout/tree/master/demo-1\" target=\"_blank\" rel=\"noopener\">https://github.com/willspace/css-layout/tree/master/demo-1</a></p>\n<h3 id=\"深入了解-CSS3-新特性\"><a href=\"#深入了解-CSS3-新特性\" class=\"headerlink\" title=\"深入了解 CSS3 新特性\"></a><a href=\"https://www.ibm.com/developerworks/cn/web/1202_zhouxiang_css3/\" target=\"_blank\" rel=\"noopener\">深入了解 CSS3 新特性</a></h3><p>这篇文章介绍了 Web 开发中关于 CSS3 的一些内容，由浅入深的逐步引出 CSS3 的各种相关属性。基于各个 CSS3 属性的原理，通过实际的源代码介绍各个 CSS3 新特性的特点，使用方式以及使用中需要注意的地方</p>\n<h3 id=\"You-need-to-know-css\"><a href=\"#You-need-to-know-css\" class=\"headerlink\" title=\"You need to know css\"></a><a href=\"https://lhammer.cn/You-need-to-know-css/#/\" target=\"_blank\" rel=\"noopener\">You need to know css</a></h3><p>作者把自己的收获和工作中常用的一些 CSS 小样式总结成了这份文档，包含了 43 个 CSS 的小样式。</p>\n<h3 id=\"06期：前端布局基础概述\"><a href=\"#06期：前端布局基础概述\" class=\"headerlink\" title=\"06期：前端布局基础概述\"></a><a href=\"https://mp.weixin.qq.com/s/-LcNZWFFty2lWuND6uuNNA\" target=\"_blank\" rel=\"noopener\">06期：前端布局基础概述</a></h3><p>作者找到了W3C组织对初始化包含块的官方定义，为了让刚入前端圈的同学少走一些弯路，于是系统地分享一下，同时掺杂了作者本人在前端布局基础方面积累的经验。（因为是系统概述，所以篇幅会比较长，希望各位读者有心理准备）</p>\n<h3 id=\"在-css-中什么是好的注释？\"><a href=\"#在-css-中什么是好的注释？\" class=\"headerlink\" title=\"在 css 中什么是好的注释？\"></a><a href=\"https://mp.weixin.qq.com/s/963TnTMNAXstdIPYCTsrqQ\" target=\"_blank\" rel=\"noopener\">在 css 中什么是好的注释？</a></h3><blockquote>\n<p>注释就意味着代码无法自说明 —— Robert C. Martin</p>\n</blockquote>\n<p>Martin在文中详细讨论了代码注释，他的意思是，这些注释是注定会过时的。程序执行时会忽视注释，所以无法保证这些说明注释会准确的描述代码作用。所以最好的方式是让代码自说明，如此，按照代码逻辑，程序员和程序获取到的信息是一致的。读完这篇文章后，我们就知道该怎么写注释了。</p>\n<h2 id=\"框架相关\"><a href=\"#框架相关\" class=\"headerlink\" title=\"框架相关\"></a>框架相关</h2><h3 id=\"react-组件的生命周期\"><a href=\"#react-组件的生命周期\" class=\"headerlink\" title=\"react 组件的生命周期\"></a><a href=\"https://segmentfault.com/a/1190000003691119\" target=\"_blank\" rel=\"noopener\">react 组件的生命周期</a></h3><p>作者详细介绍了和 react 生命周期的一些函数执行时机以及它们的作用，通过实例的方式进行了讲解，个人感觉讲解的非常清晰</p>\n<h3 id=\"Gulp-和-Webpack-对比\"><a href=\"#Gulp-和-Webpack-对比\" class=\"headerlink\" title=\"Gulp 和 Webpack 对比\"></a><a href=\"http://www.jianshu.com/p/b1022d224817\" target=\"_blank\" rel=\"noopener\">Gulp 和 Webpack 对比</a></h3><p>作者通过实际的代码对比了 gulp 和 webpack 在功能、原理以及模块化方面的优缺点</p>\n<h3 id=\"webpack-常用插件及其作用\"><a href=\"#webpack-常用插件及其作用\" class=\"headerlink\" title=\"webpack 常用插件及其作用\"></a><a href=\"http://www.monster1935.site/blog/2017/08/24/webpack%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E5%8F%8A%E5%85%B6%E4%BD%9C%E7%94%A8/\" target=\"_blank\" rel=\"noopener\">webpack 常用插件及其作用</a></h3><p>介绍了 webpack 经常用到的一些插件和它们的作用，美中不足的是没有具体代码以及介绍的插件有点少</p>\n<h3 id=\"webpack-源码阅读——npm-脚本运行-webpack-与命令行输入-webpack-的区别\"><a href=\"#webpack-源码阅读——npm-脚本运行-webpack-与命令行输入-webpack-的区别\" class=\"headerlink\" title=\"webpack 源码阅读——npm 脚本运行 webpack 与命令行输入 webpack 的区别\"></a><a href=\"http://www.monster1935.site/blog/2017/09/07/webpack%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-npm%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8Cwebpack%E4%B8%8E%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BE%93%E5%85%A5webpack%E6%89%A7%E8%A1%8C%E7%9A%84%E5%8C%BA%E5%88%AB/\" target=\"_blank\" rel=\"noopener\">webpack 源码阅读——npm 脚本运行 webpack 与命令行输入 webpack 的区别</a></h3><p>虽然是一个小知识点，不过作者读源码的精神可嘉</p>\n<h3 id=\"webpack-收藏集-掘金\"><a href=\"#webpack-收藏集-掘金\" class=\"headerlink\" title=\"webpack - 收藏集 - 掘金\"></a><a href=\"https://segmentfault.com/a/1190000009435832\" target=\"_blank\" rel=\"noopener\">webpack - 收藏集 - 掘金</a></h3><p>掘金上面的 webpack 相关文章，webpack 本身实在太复杂，还是需要一些文章差补缺漏的</p>\n<h3 id=\"Vue-js——60分钟快速入门\"><a href=\"#Vue-js——60分钟快速入门\" class=\"headerlink\" title=\"Vue.js——60分钟快速入门\"></a><a href=\"http://www.cnblogs.com/keepfool/p/5619070.html\" target=\"_blank\" rel=\"noopener\">Vue.js——60分钟快速入门</a></h3><p>vue 入门教程，还有另外两篇文章，文章最后有链接，个人认为是目前为止看到的最舒服的 vue 入门教程，排版配色都很不错</p>\n<h3 id=\"深入到源码：解读-redux-的设计思路与用法\"><a href=\"#深入到源码：解读-redux-的设计思路与用法\" class=\"headerlink\" title=\"深入到源码：解读 redux 的设计思路与用法\"></a><a href=\"https://github.com/Lucifier129/Lucifier129.github.io/issues/9\" target=\"_blank\" rel=\"noopener\">深入到源码：解读 redux 的设计思路与用法</a></h3><p>一直都没搞明白 redux，后来看了这篇文章，讲的很详细，而且讲解了一部分源码，推荐！（下面一段话取自该文章） 组织 <code>redux</code> 的流程莫过于：</p>\n<ul>\n<li>设计全局 state 的数据结构</li>\n<li>设计更改 state 数据的 actionTypes 常量以及其他跟视图展现相关的 actionTypes 常量</li>\n<li>根据 actionTypes 常量，书写 actionCreator 。</li>\n<li>根据各个 actionCreator 的返回值，涉及 reducer 做数据的最后处理</li>\n<li>在有了 reducer 函数之后，createStore(reducer, initState) 得到 store 对象</li>\n<li>用 bindActionCreators 函数将 actionCreators 和 store.dispatch 绑定起来，得到一组能修改全局状态的函数</li>\n<li>分发各个状态修改函数到各个 DOM 事件中。</li>\n</ul>\n<h3 id=\"Vue-生命周期深入\"><a href=\"#Vue-生命周期深入\" class=\"headerlink\" title=\"Vue 生命周期深入\"></a><a href=\"https://segmentfault.com/a/1190000014705819\" target=\"_blank\" rel=\"noopener\">Vue 生命周期深入</a></h3><p>这篇博客会从下面四个常见的应用诠释了组件的生命周期，以及各个生命周期应该干什么事，博主写的很不错，直观易懂，很适合接触 vue 不深的童鞋。</p>\n<ol>\n<li>单组件的生命周期</li>\n<li>父子组件的生命周期</li>\n<li>兄弟组件的生命周期</li>\n<li>宏 mixin 的生命周期</li>\n</ol>\n<h3 id=\"2019-年-Vue-学习路线图\"><a href=\"#2019-年-Vue-学习路线图\" class=\"headerlink\" title=\"2019 年 Vue 学习路线图\"></a><a href=\"https://mp.weixin.qq.com/s/jGmJndL-oK3i5lYLiQROIg\" target=\"_blank\" rel=\"noopener\">2019 年 Vue 学习路线图</a></h3><p>作者我将在这篇文章中展示了一个高级“知识地图”，它包含了与 Vue 开发相关的关键领域，你可以使用这张地图作为 2019 年学习 Vue 的图鉴。英文原文：<a href=\"https://vuejsdevelopers.com/2018/12/04/vue-js-2019-knowledge-map/\" target=\"_blank\" rel=\"noopener\">https://vuejsdevelopers.com/2018/12/04/vue-js-2019-knowledge-map/</a></p>\n<h3 id=\"一口-很长的-气了解-babel\"><a href=\"#一口-很长的-气了解-babel\" class=\"headerlink\" title=\"一口(很长的)气了解 babel\"></a><a href=\"https://juejin.im/post/5c19c5e0e51d4502a232c1c6\" target=\"_blank\" rel=\"noopener\">一口(很长的)气了解 babel</a></h3><p>作者详细介绍了 babel 究竟是做什么的，以及 babel 的一些配套工具的作用，同时还介绍了如何争取地进行配置和使用 babel。</p>\n<h3 id=\"Which-of-the-635000-npm-modules-do-I-choose\"><a href=\"#Which-of-the-635000-npm-modules-do-I-choose\" class=\"headerlink\" title=\"Which of the 635000 npm modules do I choose?\"></a><a href=\"https://www.coreycleary.me/which-of-the-635000-npm-modules-do-i-choose/\" target=\"_blank\" rel=\"noopener\">Which of the 635000 npm modules do I choose?</a></h3><p>npm 现在已经有 60 多万个库，如何在如此繁杂的 module 中选择合适自己的感觉是件难事，而作者就基于此对一些比较大型使用比较多的库进行了横向比较，会对你在技术上的选择起到帮助作用。</p>\n<h3 id=\"2019-年-React-学习路线图\"><a href=\"#2019-年-React-学习路线图\" class=\"headerlink\" title=\"2019 年 React 学习路线图\"></a><a href=\"https://mp.weixin.qq.com/s/PWSeeqDwu8QOcamlo_FJrA\" target=\"_blank\" rel=\"noopener\">2019 年 React 学习路线图</a></h3><p>和上面的 Vue 学习路线图类似，建议搭配食用，英文原文：<a href=\"https://hackernoon.com/the-2018-react-js-roadmap-4d0a43814c02\" target=\"_blank\" rel=\"noopener\">https://hackernoon.com/the-2018-react-js-roadmap-4d0a43814c02</a></p>\n<h3 id=\"细说-webpack-之流程篇\"><a href=\"#细说-webpack-之流程篇\" class=\"headerlink\" title=\"细说 webpack 之流程篇\"></a><a href=\"http://taobaofed.org/blog/2016/09/09/webpack-flow/\" target=\"_blank\" rel=\"noopener\">细说 webpack 之流程篇</a></h3><p>淘宝 FED 这篇博客，对 webpack 的整体流程梳理的非常清晰，以及 webpack 的基础架构讲解的很细致，对 compiler 和 complation 对象也做了很细致的剖析。</p>\n<h3 id=\"React-是怎样炼成的\"><a href=\"#React-是怎样炼成的\" class=\"headerlink\" title=\"React 是怎样炼成的\"></a><a href=\"https://segmentfault.com/a/1190000013365426\" target=\"_blank\" rel=\"noopener\">React 是怎样炼成的</a></h3><p>文章主要讲述 React 的诞生过程和优化思路。内容整理自 2014 年的 <a href=\"https://speakerdeck.com/vjeux/oscon-react-architecture\" target=\"_blank\" rel=\"noopener\">OSCON - React Architecture by vjeux</a>，虽然从今天来看可能会有点历史感，但仍然值得学习了解。以史为鉴，从中也可以管窥 Facebook 优秀的工程管理文化。</p>\n<h2 id=\"浏览器相关\"><a href=\"#浏览器相关\" class=\"headerlink\" title=\"浏览器相关\"></a>浏览器相关</h2><h3 id=\"js在微信、微博、QQ、Safari唤起App的解决方案\"><a href=\"#js在微信、微博、QQ、Safari唤起App的解决方案\" class=\"headerlink\" title=\"js在微信、微博、QQ、Safari唤起App的解决方案\"></a><a href=\"https://segmentfault.com/a/1190000012940046\" target=\"_blank\" rel=\"noopener\">js在微信、微博、QQ、Safari唤起App的解决方案</a></h3><p>一个全面的、最新（2018-01-22）的唤起方案，总结的很透彻，值得一读</p>\n<h3 id=\"浏览器进程？线程？傻傻分不清楚！\"><a href=\"#浏览器进程？线程？傻傻分不清楚！\" class=\"headerlink\" title=\"浏览器进程？线程？傻傻分不清楚！\"></a><a href=\"http://www.imweb.io/topic/58e3bfa845e5c13468f567d5\" target=\"_blank\" rel=\"noopener\">浏览器进程？线程？傻傻分不清楚！</a></h3><p>什么是多进程架构浏览器？为什么浏览器内核是多线程？Javascript 是单线程又是什么鬼？进程和线程是否分得清楚呢？文章干货和知识点比较多，需要查阅相关知识才能完全消化。</p>\n<h3 id=\"WebView-性能、体验分析与优化\"><a href=\"#WebView-性能、体验分析与优化\" class=\"headerlink\" title=\"WebView 性能、体验分析与优化\"></a><a href=\"https://tech.meituan.com/WebViewPerf.html\" target=\"_blank\" rel=\"noopener\">WebView 性能、体验分析与优化</a></h3><p>来自美团的技术文档，对 webview 的方方面面都进行了详细的介绍，同时指出了其存在的问题，相信看完之后对于 webview 会有更深层次的理解~</p>\n<h3 id=\"浅析-HTTP-缓存的机制-浏览器缓存\"><a href=\"#浅析-HTTP-缓存的机制-浏览器缓存\" class=\"headerlink\" title=\"浅析 HTTP 缓存的机制-浏览器缓存\"></a><a href=\"http://obkoro1.com/2018/06/09/%E6%B5%85%E6%9E%90HTTP%E7%BC%93%E5%AD%98%E7%9A%84%E6%9C%BA%E5%88%B6-%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98/\" target=\"_blank\" rel=\"noopener\">浅析 HTTP 缓存的机制-浏览器缓存</a></h3><p>在浏览器众多缓存中的 HTTP 缓存可能很多人对这个的概念并没有很清晰，每个人都知道进入一次网页之后再刷新一次页面，加载速度会比首次加载快非常多，每个人都知道这是浏览器缓存的 magic，但是对此背后的原因可能不甚了解；作者结合状态码介绍了强缓存和弱缓存的区别和触发条件，篇幅短小精悍，值得一读。</p>\n<h3 id=\"深入理解-JSCore\"><a href=\"#深入理解-JSCore\" class=\"headerlink\" title=\"深入理解 JSCore\"></a><a href=\"https://juejin.im/post/5b7f6a27e51d4538b063f233?utm_medium=fe&amp;utm_source=weixinqun\" target=\"_blank\" rel=\"noopener\">深入理解 JSCore</a></h3><p>目前业界流行的动态化方案，如 Facebook 的 React Native，阿里巴巴的 Weex 都采用了前端系的 DSL 方案，而它们在 iOS 系统上能够顺利的运行，都离不开一个背后的功臣：JavaScriptCore（以下简称 JSCore），它建立起了 Objective-C（以下简称OC）和 JavaScript（以下简称 JS）两门语言之间沟通的桥梁。作者从浏览器谈起，对 Webkit 内核的工作原理和组成进行了详细介绍，同时介绍了 JSCore 的组成部分：词法分析、语法分析和解释执行，后面还介绍了 iOS 中的 JSCore 的应用和一些机制，篇幅较长，但是干货满满，如果你对浏览器渲染引擎感兴趣，这篇文章值得一看~</p>\n<h3 id=\"H5-唤起-APP-指南-附开源唤端库\"><a href=\"#H5-唤起-APP-指南-附开源唤端库\" class=\"headerlink\" title=\"H5 唤起 APP 指南(附开源唤端库)\"></a><a href=\"https://juejin.im/post/5b7efb2ee51d45388b6af96c?utm_medium=fe&amp;utm_source=weixinqun\" target=\"_blank\" rel=\"noopener\">H5 唤起 APP 指南(附开源唤端库)</a></h3><p>唤端的定义：引导已下载用户打开 APP，引导未下载用户下载 APP。对于用户留存来讲，唤起 App 是一种很重要的手段，这篇文章可以说把所有和唤端相关的知识点都介绍了，最后还给自己的工具打了一发广告。。</p>\n<h3 id=\"当···时发生了什么？\"><a href=\"#当···时发生了什么？\" class=\"headerlink\" title=\"当···时发生了什么？\"></a><a href=\"https://github.com/skyline75489/what-happens-when-zh_CN\" target=\"_blank\" rel=\"noopener\">当···时发生了什么？</a></h3><p>这个仓库试图回答一个古老的面试问题：当你在浏览器中输入 google.com 并且按下回车之后发生了什么？不过作者不再局限于平常的回答，而是想办法回答地尽可能具体，不遗漏任何细节。包括一些硬件知识也包含其中，我相信如果面试官问到你这道题，然后你的回答是这篇文章里面描述的话，面试官肯定会大吃一惊！</p>\n<h3 id=\"HTTP-HTTP2-0-SPDY-HTTPS-你应该知道的一些事\"><a href=\"#HTTP-HTTP2-0-SPDY-HTTPS-你应该知道的一些事\" class=\"headerlink\" title=\"HTTP, HTTP2.0, SPDY, HTTPS 你应该知道的一些事\"></a><a href=\"http://www.alloyteam.com/2016/07/httphttp2-0spdyhttps-reading-this-is-enough/\" target=\"_blank\" rel=\"noopener\">HTTP, HTTP2.0, SPDY, HTTPS 你应该知道的一些事</a></h3><p>作为一个经常和 web 打交道的程序员，了解这些协议是必须的，而这篇文章就向大家介绍了一下这些协议的区别和基本概念，文中不局限于前端知识，还包括一些运维，协议方面的知识。</p>\n<h3 id=\"浏览器的工作原理：新式网络浏览器幕后揭秘\"><a href=\"#浏览器的工作原理：新式网络浏览器幕后揭秘\" class=\"headerlink\" title=\"浏览器的工作原理：新式网络浏览器幕后揭秘\"></a><a href=\"https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/#The_browser_main_functionality\" target=\"_blank\" rel=\"noopener\">浏览器的工作原理：新式网络浏览器幕后揭秘</a></h3><p>这是一篇全面介绍 WebKit 和 Gecko 内部操作的入门文章，是以色列开发人员塔利·加希尔大量研究的成果。在过去的几年中，她查阅了所有公开发布的关于浏览器内部机制的数，并花了很多时间来研读网络浏览器的源代码。 网络浏览器很可能是使用最广的软件。在这篇入门文章中，作者将会介绍它们的幕后工作原理。我们会了解到，从在地址栏输入 <code>google.com</code> 直到在浏览器屏幕上看到 Google 首页的整个过程中都发生了些什么。文章讲解的很详细，篇幅较长，需要比较大的耐心才能看下去。</p>\n<h3 id=\"HTTP-请求头中的-X-Forwarded-For\"><a href=\"#HTTP-请求头中的-X-Forwarded-For\" class=\"headerlink\" title=\"HTTP 请求头中的 X-Forwarded-For\"></a><a href=\"https://imququ.com/post/x-forwarded-for-header-in-http.html\" target=\"_blank\" rel=\"noopener\">HTTP 请求头中的 X-Forwarded-For</a></h3><p>这篇文章对 HTTP 请求头中的 X-Forwarded-For（XFF）进行了详细的讲解，当我们需要取到用户的真实 IP 时，对这个请求头的理解和使用就显得尤为重要了，而从这个应用场景出发，作者还对请求头中的 x-real-ip 字段以及 Remote Address 进行了介绍。作者还有关于 HTTP 的其他文章，可以<a href=\"https://imququ.com/post/series.html\" target=\"_blank\" rel=\"noopener\">点击这里</a>查看更多。</p>\n<h3 id=\"图解浏览器的基本工作原理\"><a href=\"#图解浏览器的基本工作原理\" class=\"headerlink\" title=\"图解浏览器的基本工作原理\"></a><a href=\"https://zhuanlan.zhihu.com/p/47407398\" target=\"_blank\" rel=\"noopener\">图解浏览器的基本工作原理</a></h3><p>可能每一个前端工程师都想要理解浏览器的工作原理。我们希望知道从在浏览器地址栏中输入 url 到页面展现的短短几秒内浏览器究竟做了什么；我们希望了解平时常常听说的各种代码优化方案是究竟为什么能起到优化的作用；我们希望更细化的了解浏览器的渲染流程。那么这篇文章就解答了上面的所有问题，文章较长，图文并茂。</p>\n<h3 id=\"Content-Security-Policy-An-Introduction\"><a href=\"#Content-Security-Policy-An-Introduction\" class=\"headerlink\" title=\"Content Security Policy - An Introduction\"></a><a href=\"https://scotthelme.co.uk/content-security-policy-an-introduction/\" target=\"_blank\" rel=\"noopener\">Content Security Policy - An Introduction</a></h3><p>一篇介绍 CSP 的文章，介绍了我们为什么需要 CSP，以及涉及到 CSP 的一些协议头等等相关信息。</p>\n<h3 id=\"认识-HTTP—-Cookie-和-Session-篇\"><a href=\"#认识-HTTP—-Cookie-和-Session-篇\" class=\"headerlink\" title=\"认识 HTTP—-Cookie 和 Session 篇\"></a><a href=\"https://zhuanlan.zhihu.com/p/27669892https://zhuanlan.zhihu.com/p/27669892https://zhuanlan.zhihu.com/p/27669892https://zhuanlan.zhihu.com/p/27669892\" target=\"_blank\" rel=\"noopener\">认识 HTTP—-Cookie 和 Session 篇</a></h3><p>虽然内容大多来自《图解HTTP》一书，但是条理清楚分明，文笔很好，作者解释的很清晰。</p>\n<h3 id=\"图解基于-HTTPS-的-DNS\"><a href=\"#图解基于-HTTPS-的-DNS\" class=\"headerlink\" title=\"图解基于 HTTPS 的 DNS\"></a><a href=\"https://www.infoq.cn/article/a-cartoon-intro-to-dns-over-https\" target=\"_blank\" rel=\"noopener\">图解基于 HTTPS 的 DNS</a></h3><p>这是关于 dns 查询的过程讲解，配上插图和文字，可以对 dns 的查询过程有一个大概了解。</p>\n<h3 id=\"理解-WebKit-和-Chromium\"><a href=\"#理解-WebKit-和-Chromium\" class=\"headerlink\" title=\"理解 WebKit 和 Chromium\"></a><a href=\"https://blog.csdn.net/milado_nju/article/details/7216067\" target=\"_blank\" rel=\"noopener\">理解 WebKit 和 Chromium</a></h3><p>系统的描述了 Chrome 浏览器的信息，可以更加全面的了解 Chrome 浏览器，最给力的是有很多工具的使用介绍。</p>\n<h3 id=\"你真的了解回流和重绘吗\"><a href=\"#你真的了解回流和重绘吗\" class=\"headerlink\" title=\"你真的了解回流和重绘吗?\"></a><a href=\"https://github.com/chenjigeng/blog/blob/master/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BA%86%E8%A7%A3%E5%9B%9E%E6%B5%81%E5%92%8C%E9%87%8D%E7%BB%98%E5%90%97.md\" target=\"_blank\" rel=\"noopener\">你真的了解回流和重绘吗?</a></h3><p>这篇文章主要讲了浏览器的渲染过程、浏览器的优化机制以及如何减少甚至避免回流和重绘，可以帮助读者更好的理解回流重绘。</p>\n<h3 id=\"这样使用GPU动画\"><a href=\"#这样使用GPU动画\" class=\"headerlink\" title=\"这样使用GPU动画\"></a><a href=\"https://www.w3cplus.com/animation/gpu-animation-doing-it-right.html\" target=\"_blank\" rel=\"noopener\">这样使用GPU动画</a></h3><p><a href=\"https://www.smashingmagazine.com/2016/12/gpu-animation-doing-it-right/\" target=\"_blank\" rel=\"noopener\">《GPU Animation: Doing It Right》</a>的译文，这篇文章能帮助你更好地了解浏览器如何使用GPU来渲染，这样你就可以创作能在所有设备上快速运行的令人印象深刻的网站。著作权归作者所有。</p>\n<h3 id=\"How-Blink-Works-中文译文\"><a href=\"#How-Blink-Works-中文译文\" class=\"headerlink\" title=\"How Blink Works 中文译文\"></a><a href=\"https://zhuanlan.zhihu.com/p/52918538\" target=\"_blank\" rel=\"noopener\">How Blink Works 中文译文</a></h3><p>Chromium 的工程师们写了两篇技术文章 <a href=\"https://docs.google.com/document/d/1aitSOucL0VHZa9Z2vbRJSyAIsAz24kX8LFByQ5xQnUg/edit?pli=1#\" target=\"_blank\" rel=\"noopener\">How Blink Works</a> 和 <a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/how_cc_works.md\" target=\"_blank\" rel=\"noopener\">How cc Works</a>，分别介绍了 Chrome 浏览器内核内部的两个重要模块 Blink 和 cc 内部设计和实现的一些细节。对于想要了解 Chrome 内核内部实现的同学，这两篇文章提供了不错的入门指引。</p>\n<h2 id=\"计算机基础\"><a href=\"#计算机基础\" class=\"headerlink\" title=\"计算机基础\"></a>计算机基础</h2><h3 id=\"编码简介：utf8-utf16-以及其它\"><a href=\"#编码简介：utf8-utf16-以及其它\" class=\"headerlink\" title=\"编码简介：utf8, utf16 以及其它\"></a><a href=\"https://github.com/creeperyang/blog/issues/4\" target=\"_blank\" rel=\"noopener\">编码简介：utf8, utf16 以及其它</a></h3><p>作者对 utf8 和 utf16 以及其它相关知识进行了介绍，前端同学可能很少会关注到字符编码规则，但是有时候我们经常会遇到乱码等问题和 Bug，而在阅读完这篇文章之后，相信你对字符编码这类知识会有一个很深的理解。</p>\n<h3 id=\"可以说的秘密-那些我们该讨论的前端加密方法\"><a href=\"#可以说的秘密-那些我们该讨论的前端加密方法\" class=\"headerlink\" title=\"可以说的秘密-那些我们该讨论的前端加密方法\"></a><a href=\"https://juejin.im/entry/5bc93545e51d450e5f3dceff\" target=\"_blank\" rel=\"noopener\">可以说的秘密-那些我们该讨论的前端加密方法</a></h3><p>这篇文章介绍了前端开发中常用的加密方法并给出了其适用场景。包括 Base64 编码、哈希算法、加盐、慢哈希函数、密钥哈希、XOR 和加密（Encrypt）等加密方法，</p>\n<h3 id=\"一个由正则表达式引发的血案（解决版）\"><a href=\"#一个由正则表达式引发的血案（解决版）\" class=\"headerlink\" title=\"一个由正则表达式引发的血案（解决版）\"></a><a href=\"https://zhuanlan.zhihu.com/p/46294360\" target=\"_blank\" rel=\"noopener\">一个由正则表达式引发的血案（解决版）</a></h3><p>正则表达式一直以来是广大码农处理字符串的福音，但与此同时，也容易引发血案。这篇文章从一则实例出发，对正则表达式可能引发的 CPU 爆表问题进行了分析，同时作者还介绍了一种遗传算法，该算法解决了如下问题：</p>\n<blockquote>\n<p>给定一个正则引擎和一个正则表达式，为这个正则表达式找到一个攻击字符串，它可以最大化正则引擎的匹配时间。</p>\n</blockquote>\n<p>感兴趣的童鞋可以认真研究一下这篇文章，或者作者发表的论文。</p>\n<h3 id=\"计算的本质：赋值和流的杂谈\"><a href=\"#计算的本质：赋值和流的杂谈\" class=\"headerlink\" title=\"计算的本质：赋值和流的杂谈\"></a><a href=\"https://mp.weixin.qq.com/s/UYOy9dCCci5P_Cc7OVp5sg\" target=\"_blank\" rel=\"noopener\">计算的本质：赋值和流的杂谈</a></h3><p>写了这么久的程序，不少人肯定会有疑问，<strong>计算的本质</strong>是什么？对一台图灵机来说，那就是无限长的纸带和能够自如移动的读写头，但这太抽象了。作者换了一种方式去理解计算并总结出了这篇文章，稍微有一些晦涩难懂，不过看完大有裨益。</p>\n<h2 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h2><h3 id=\"漫画：什么是动态规划？\"><a href=\"#漫画：什么是动态规划？\" class=\"headerlink\" title=\"漫画：什么是动态规划？\"></a><a href=\"https://mp.weixin.qq.com/s/uHlSIPDrzwlyyGTwnkslbQ\" target=\"_blank\" rel=\"noopener\">漫画：什么是动态规划？</a></h3><p>以漫画的形式生动形象的解释了动态规划是什么，以及其解法。虽然篇幅较长，但是漫画看起来一点都不枯燥。</p>\n<h3 id=\"漫画：如何求根号2（爱奇艺面试题）\"><a href=\"#漫画：如何求根号2（爱奇艺面试题）\" class=\"headerlink\" title=\"漫画：如何求根号2（爱奇艺面试题）\"></a><a href=\"https://mp.weixin.qq.com/s/is7ffzf1pofMchpT3azsOg\" target=\"_blank\" rel=\"noopener\">漫画：如何求根号2（爱奇艺面试题）</a></h3><p>用漫画的形式讲解了二分法和牛顿迭代法，最后还给出了源码</p>\n<h3 id=\"2018汇总数据结构算法篇\"><a href=\"#2018汇总数据结构算法篇\" class=\"headerlink\" title=\"2018汇总数据结构算法篇\"></a><a href=\"https://mp.weixin.qq.com/s/7WweVX6j_ZMyaSnYr8q5Ug\" target=\"_blank\" rel=\"noopener\">2018汇总数据结构算法篇</a></h3><p>用图文的方式对一些数据结构进行了通俗易懂的解释，内容非常基础和全面。</p>\n<h2 id=\"服务层相关\"><a href=\"#服务层相关\" class=\"headerlink\" title=\"服务层相关\"></a>服务层相关</h2><h3 id=\"Node-定时器详解\"><a href=\"#Node-定时器详解\" class=\"headerlink\" title=\"Node 定时器详解\"></a><a href=\"http://www.ruanyifeng.com/blog/2018/02/node-event-loop.html\" target=\"_blank\" rel=\"noopener\">Node 定时器详解</a></h3><p>作者：阮一峰，Node 的异步语法比浏览器更复杂，因为它可以跟内核对话，不得不搞了一个专门的库 <code>libuv</code> 做这件事。这个库负责各种回调函数的执行时间，毕竟异步任务最后还是要回到主线程，一个个排队执行。<br>至今为止，解释定时器最透彻的中文文章了</p>\n<h3 id=\"node-基础面试事件环？微任务、宏任务？一篇带你飞\"><a href=\"#node-基础面试事件环？微任务、宏任务？一篇带你飞\" class=\"headerlink\" title=\"node 基础面试事件环？微任务、宏任务？一篇带你飞\"></a><a href=\"https://juejin.im/post/5b35cdfa51882574c020d685\" target=\"_blank\" rel=\"noopener\">node 基础面试事件环？微任务、宏任务？一篇带你飞</a></h3><p>这是一篇很干货的文章，作者介绍了 node 的应用场景以及特性，同时还顺带着介绍了同步/异步、阻塞/非阻塞、微任务/宏任务这些 node 面试中经常遇到的知识点，虽然篇幅不是很长，但是涵盖的范围比较广，对于刚入门前端的童鞋来说有比较大的难度，不过对于那些已使用 node 一段时间的童鞋来说是一篇不错的总结类文章。</p>\n<h3 id=\"Error-Handling-in-Node-js\"><a href=\"#Error-Handling-in-Node-js\" class=\"headerlink\" title=\"Error Handling in Node.js\"></a><a href=\"https://www.joyent.com/node-js/production/design/errors\" target=\"_blank\" rel=\"noopener\">Error Handling in Node.js</a></h3><p>关于 NodeJS 中异常的种类，以及应该如何处理异常方面的设计文章，比较长，而且是英文的，但比较受益。（有没有大佬翻译一把？）</p>\n<h3 id=\"开发者需要了解的-nodejs-中-require-的机制\"><a href=\"#开发者需要了解的-nodejs-中-require-的机制\" class=\"headerlink\" title=\"开发者需要了解的 nodejs 中 require 的机制\"></a><a href=\"https://juejin.im/post/5bdea6b1518825170f50c485\" target=\"_blank\" rel=\"noopener\">开发者需要了解的 nodejs 中 require 的机制</a></h3><p>对 nodejs 中的模块加载进行了详细的讲解，同时对 exports 和 module.exports 的区别和正确使用方式也进行了讲解，是一篇非常不错的 nodejs 模块方面的文章，该文为译文，原文地址：<a href=\"https://medium.freecodecamp.org/requiring-modules-in-node-js-everything-you-need-to-know-e7fbd119be8\" target=\"_blank\" rel=\"noopener\">https://medium.freecodecamp.org/requiring-modules-in-node-js-everything-you-need-to-know-e7fbd119be8</a></p>\n<h3 id=\"CDN-技术详解\"><a href=\"#CDN-技术详解\" class=\"headerlink\" title=\"CDN 技术详解\"></a><a href=\"https://www.cnblogs.com/losbyday/p/5843960.html\" target=\"_blank\" rel=\"noopener\">CDN 技术详解</a></h3><p>《CDN技术详解》绝对是带你进入 CDN 行业的那盏最亮的明灯。因此，虽然只是纯粹的重点抄录，作者还是把《CDN技术详解》中的精华总结成了这篇文章。</p>\n<h3 id=\"漫画-从搬家到容器技术-Docker-应用场景解析\"><a href=\"#漫画-从搬家到容器技术-Docker-应用场景解析\" class=\"headerlink\" title=\"漫画 | 从搬家到容器技术 Docker 应用场景解析\"></a><a href=\"https://mp.weixin.qq.com/s/wHEVltlOOAffWILB1hqFjg\" target=\"_blank\" rel=\"noopener\">漫画 | 从搬家到容器技术 Docker 应用场景解析</a></h3><p>通过漫画的方式对 Docker 的原理和应用场景进行了比较详细的介绍和讲解</p>\n<h3 id=\"不仅仅是前端er——折腾服务器武装自己\"><a href=\"#不仅仅是前端er——折腾服务器武装自己\" class=\"headerlink\" title=\"不仅仅是前端er——折腾服务器武装自己\"></a><a href=\"https://segmentfault.com/a/1190000013242438\" target=\"_blank\" rel=\"noopener\">不仅仅是前端er——折腾服务器武装自己</a></h3><p>作者从购买服务器和购买域名讲起，将搭建网站的详细过程进行了介绍，同时还包括 nginx 配置文件的修改以及持续部署的配置。</p>\n<h2 id=\"Mac相关\"><a href=\"#Mac相关\" class=\"headerlink\" title=\"Mac相关\"></a>Mac相关</h2><h3 id=\"EffectiveMac\"><a href=\"#EffectiveMac\" class=\"headerlink\" title=\"EffectiveMac\"></a><a href=\"https://mac.bestswifter.com/\" target=\"_blank\" rel=\"noopener\">EffectiveMac</a></h3><p>作者是在今日头条任职的 iOS 高级工程师，在这篇文章里介绍了 Mac 的一些使用技巧以及配置指南，包括 Vim、Git、Zsh 等工具的使用方式，是截止到目前为止我看过的最全面、最实用的 Mac 教程，经常用 Mac 的童鞋一定要抽空看一看！</p>\n<h2 id=\"前沿\"><a href=\"#前沿\" class=\"headerlink\" title=\"前沿\"></a>前沿</h2><h3 id=\"GraphQL-and-Relay-浅析\"><a href=\"#GraphQL-and-Relay-浅析\" class=\"headerlink\" title=\"GraphQL and Relay 浅析\"></a><a href=\"https://zhuanlan.zhihu.com/p/20638731\" target=\"_blank\" rel=\"noopener\">GraphQL and Relay 浅析</a></h3><p>相信大部分人都没听说过 GraphQL 和 Relay 吧，这篇文章就对这两样东西进行了介绍，同时文章结尾还有一些扩展阅读链接</p>\n<h3 id=\"译文：Puppeteer-与-Chrome-Headless-——-从入门到爬虫\"><a href=\"#译文：Puppeteer-与-Chrome-Headless-——-从入门到爬虫\" class=\"headerlink\" title=\"译文：Puppeteer 与 Chrome Headless —— 从入门到爬虫\"></a><a href=\"http://csbun.github.io/blog/2017/09/puppeteer/\" target=\"_blank\" rel=\"noopener\">译文：Puppeteer 与 Chrome Headless —— 从入门到爬虫</a></h3><p><a href=\"https://github.com/GoogleChrome/puppeteer\" target=\"_blank\" rel=\"noopener\"><code>Puppeteer</code></a> 是 Google Chrome 团队官方的无界面（Headless）Chrome 工具。正因为这个官方声明，许多业内自动化测试库都已经停止维护，包括 <strong><a href=\"http://phantomjs.org/\" target=\"_blank\" rel=\"noopener\">PhantomJS</a></strong>。<strong><a href=\"https://addons.mozilla.org/en-US/firefox/addon/selenium-ide/\" target=\"_blank\" rel=\"noopener\">Selenium IDE for Firefox</a></strong> 项目也因为缺乏维护者而终止。</p>\n<h3 id=\"初探-Headless-Chrome\"><a href=\"#初探-Headless-Chrome\" class=\"headerlink\" title=\"初探 Headless Chrome\"></a><a href=\"https://zhuanlan.zhihu.com/p/27100187\" target=\"_blank\" rel=\"noopener\">初探 Headless Chrome</a></h3><p>Headless Chrome 是 Chrome 浏览器的无界面形态，可以在不打开浏览器的前提下，使用所有 Chrome 支持的特性运行你的程序。相比于现代浏览器，Headless Chrome 更加方便测试 web 应用，获得网站的截图，做爬虫抓取信息等。相比于出道较早的 PhantomJS，SlimerJS 等，Headless Chrome 则更加贴近浏览器环境。</p>\n<h3 id=\"译-React-Native-vs-Cordova、PhoneGap、Ionic，等等\"><a href=\"#译-React-Native-vs-Cordova、PhoneGap、Ionic，等等\" class=\"headerlink\" title=\"[译] React Native vs. Cordova、PhoneGap、Ionic，等等\"></a>[译] React Native vs. Cordova、PhoneGap、Ionic，等等</h3><p>原文链接：<a href=\"https://learnreact.design/2018/02/14/react-native-vs-cordova-phone-gap-ionic-etc\" target=\"_blank\" rel=\"noopener\">https://learnreact.design/2018/02/14/react-native-vs-cordova-phone-gap-ionic-etc</a>，主要解释了以下几个问题：</p>\n<ul>\n<li>什么是原生应用？</li>\n<li>什么是 WebView UI ？</li>\n<li>更原生化的框架的优势和劣势分别是什么？原生化更少的框架呢？</li>\n<li>React Native 与 Cordova 相比如何？</li>\n</ul>\n<h2 id=\"求职\"><a href=\"#求职\" class=\"headerlink\" title=\"求职\"></a>求职</h2><h3 id=\"如何写面向互联网公司的求职简历\"><a href=\"#如何写面向互联网公司的求职简历\" class=\"headerlink\" title=\"如何写面向互联网公司的求职简历\"></a><a href=\"http://blog.devtang.com/2013/12/22/how-to-write-resume-for-it-company/\" title=\"如何写面向互联网公司的求职简历\" target=\"_blank\" rel=\"noopener\">如何写面向互联网公司的求职简历</a></h3><p>作者在 IT 公司工作了六年，有着三年面试官的经历。文章主要内容为：</p>\n<ul>\n<li>简历的页数不要超过两页（最好一页）<ul>\n<li>删掉不必要的信息</li>\n<li>如果你实在太牛逼，最多写 2 页</li>\n</ul>\n</li>\n<li>重要的信息写在最前面<ul>\n<li>你的联系方式</li>\n<li>你最重要的工作经历</li>\n</ul>\n</li>\n<li>不要简单罗列工作经历<ul>\n<li>列出你的工作中有价值的细节（有哪些技术上的困难等）</li>\n</ul>\n</li>\n<li>不要写任何虚假或夸大的信息<ul>\n<li>类似精通 java，精通 C/C++ 等</li>\n</ul>\n</li>\n<li>不要附加任何可能带来负面印象的信息<ul>\n<li>不要加照片</li>\n<li>不要写政治面貌</li>\n<li>不要写奇怪的爱好（打游戏，喝酒，抽烟）</li>\n<li>不要写参加过某某培训公司的 iOS 培训</li>\n<li>尽量用专业邮箱</li>\n<li>用 PDF 格式</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"让-BAT-的-Offer-不再难拿\"><a href=\"#让-BAT-的-Offer-不再难拿\" class=\"headerlink\" title=\"让 BAT 的 Offer 不再难拿\"></a><a href=\"https://github.com/bestswifter/blog/commit/40885de8e065b774973ac52ef3f72de84cb19f69\" title=\"[Add] 让 BAT 的 Offer 不再难拿\" target=\"_blank\" rel=\"noopener\">让 BAT 的 Offer 不再难拿</a></h3><p>作者是软件工程专业，对 Web 前端感兴趣，目前从事 iOS 开发，对开发效率的提升以及工具的使用有很深入研究和思考，相信他总结的这篇面经一定不会让你失望。</p>\n<h3 id=\"一篇文章搞定前端面试\"><a href=\"#一篇文章搞定前端面试\" class=\"headerlink\" title=\"一篇文章搞定前端面试\"></a><a href=\"https://juejin.im/post/5bbaa549e51d450e827b6b13\" target=\"_blank\" rel=\"noopener\">一篇文章搞定前端面试</a></h3><p>这篇文章旨在用最通俗的语言讲述最枯燥的基本知识，文章提纲：</p>\n<ol>\n<li>TCP</li>\n<li>UDP</li>\n<li>套接字 socket</li>\n<li>HTTP 协议</li>\n<li>DNS 解析</li>\n<li>HTTP 请求发起和响应</li>\n<li>页面渲染的过程</li>\n<li>页面的性能优化</li>\n</ol>\n<h3 id=\"OpenDoc-前端简历评级标准\"><a href=\"#OpenDoc-前端简历评级标准\" class=\"headerlink\" title=\"OpenDoc - 前端简历评级标准\"></a><a href=\"https://zhuanlan.zhihu.com/p/27996237\" target=\"_blank\" rel=\"noopener\">OpenDoc - 前端简历评级标准</a></h3><p>美团团队从工作意向、工作经历、教育经历、技术栈、基础知识五个维度评价简历，仅供参考。</p>\n<h2 id=\"设计\"><a href=\"#设计\" class=\"headerlink\" title=\"设计\"></a>设计</h2><h3 id=\"严选Redesign\"><a href=\"#严选Redesign\" class=\"headerlink\" title=\"严选Redesign\"></a><a href=\"https://www.zcool.com.cn/work/ZMjAxNjc4ODQ=.html\" target=\"_blank\" rel=\"noopener\">严选Redesign</a></h3><p>这篇文章来自站酷，介绍了网易严选的设计风格和思路，包括一些颜色规范、版面设计和图标选择\b等等。</p>\n<h3 id=\"移动端设计样式库-导航设计（二）\"><a href=\"#移动端设计样式库-导航设计（二）\" class=\"headerlink\" title=\"移动端设计样式库-导航设计（二）\"></a><a href=\"https://mp.weixin.qq.com/s/MVvh9dh0BGK1w2mnqnmURg\" target=\"_blank\" rel=\"noopener\">移动端设计样式库-导航设计（二）</a></h3><p>作者对移动端界面设计中另一个常见的导航模式-瞬时导航进行了介绍，对导航的实现方式以及优缺点进行了十分详细的介绍。</p>\n<h3 id=\"斗鱼5-0全新升级\"><a href=\"#斗鱼5-0全新升级\" class=\"headerlink\" title=\"斗鱼5.0全新升级\"></a><a href=\"https://www.zcool.com.cn/work/ZMzIxNDAxNjg=.html\" target=\"_blank\" rel=\"noopener\">斗鱼5.0全新升级</a></h3><p>来自站酷，文章篇幅较长，详细介绍了斗鱼 APP 和网页的设计思路。</p>\n<h3 id=\"有哪些好看的字体可以免费用？看完这篇就知道了（附字体安装包）\"><a href=\"#有哪些好看的字体可以免费用？看完这篇就知道了（附字体安装包）\" class=\"headerlink\" title=\"有哪些好看的字体可以免费用？看完这篇就知道了（附字体安装包）\"></a><a href=\"https://mp.weixin.qq.com/s/-YTanYeFMuoPYrMG7F5RfA\" target=\"_blank\" rel=\"noopener\">有哪些好看的字体可以免费用？看完这篇就知道了（附字体安装包）</a></h3><p>目录：</p>\n<ul>\n<li>为什么字体需要收费？</li>\n<li>有哪些免费商用字体？</li>\n<li>使用字体时需要注意什么？</li>\n</ul>\n<h3 id=\"PPT中的图片不会排版-给你这份超全设计模板\"><a href=\"#PPT中的图片不会排版-给你这份超全设计模板\" class=\"headerlink\" title=\"PPT中的图片不会排版?给你这份超全设计模板\"></a><a href=\"https://mp.weixin.qq.com/s/Mu9guK8ppCjIyJOikWilJA\" target=\"_blank\" rel=\"noopener\">PPT中的图片不会排版?给你这份超全设计模板</a></h3><p>关于PPT排版，每天都有很多人问，图片应该怎么排版？而这篇文章，就是为你展示这些图片排版的范例。文章非常详细的介绍了 PPT 中有不同数量的图片时的排版技巧，干货满满。</p>\n<h2 id=\"文章集合\"><a href=\"#文章集合\" class=\"headerlink\" title=\"文章集合\"></a>文章集合</h2><h3 id=\"前端面试查漏补缺–Index篇-12万字符合集\"><a href=\"#前端面试查漏补缺–Index篇-12万字符合集\" class=\"headerlink\" title=\"前端面试查漏补缺–Index篇(12万字符合集)\"></a><a href=\"https://juejin.im/post/5c73347cf265da2dd773e7dc\" target=\"_blank\" rel=\"noopener\">前端面试查漏补缺–Index篇(12万字符合集)</a></h3><p>号称“全、准、详”的前端面试系列文章：</p>\n<blockquote>\n<p>其他面试文章都是高度总结,浓缩,适合临时抱佛脚!但如果知识点你本身不理解,光靠死记硬背,面试官随便深入一下你就蒙蔽了!所以这系列文章,就是对常考的知识点,从源头开始详解,只有你真正理解,才能自如应付面试官的各种刁难.</p>\n</blockquote>\n<h3 id=\"高质量文章精选-收藏集-掘金\"><a href=\"#高质量文章精选-收藏集-掘金\" class=\"headerlink\" title=\"高质量文章精选 - 收藏集 - 掘金\"></a><a href=\"https://segmentfault.com/a/1190000010448008\" target=\"_blank\" rel=\"noopener\">高质量文章精选 - 收藏集 - 掘金</a></h3><p>掘金发到 segmentfault 上的高质量文章集合，涵盖了编程领域的各个方面</p>\n<h3 id=\"奇文共欣赏，疑义相与析\"><a href=\"#奇文共欣赏，疑义相与析\" class=\"headerlink\" title=\"奇文共欣赏，疑义相与析\"></a><a href=\"https://github.com/jawil/blog/issues/6\" target=\"_blank\" rel=\"noopener\">奇文共欣赏，疑义相与析</a></h3><p>总结了很多不错的前端文章，领域包括ES6、前端基础、React、Webpack、TypeScript 等等，大概 100 篇左右，信息量很大。</p>\n<h3 id=\"年终回顾，为你汇总一份「前端技术清单」\"><a href=\"#年终回顾，为你汇总一份「前端技术清单」\" class=\"headerlink\" title=\"年终回顾，为你汇总一份「前端技术清单」\"></a><a href=\"https://juejin.im/post/5bdfb387e51d452c8e0aa902\" target=\"_blank\" rel=\"noopener\">年终回顾，为你汇总一份「前端技术清单」</a></h3><p>作者对前端基础相关好文以及前沿技术类文章进行了汇总，框架类的文章较少，期待作者继续补充完善。</p>\n<h3 id=\"微信网络技术的一些整理与思考\"><a href=\"#微信网络技术的一些整理与思考\" class=\"headerlink\" title=\"微信网络技术的一些整理与思考\"></a><a href=\"https://mp.weixin.qq.com/s/SHQay5wlz2fQ1xwQoh5eBA\" target=\"_blank\" rel=\"noopener\">微信网络技术的一些整理与思考</a></h3><p>在弱网情况下所有 app 中微信是几乎唯一一个能够正常工作的，大家都比较好奇为什么微信能够达到这样的效果。\b而作者收集了一些微信公开的网络优化相关的材料，特地分享于此。</p>\n<h3 id=\"五星推荐的系列文章清单\"><a href=\"#五星推荐的系列文章清单\" class=\"headerlink\" title=\"五星推荐的系列文章清单\"></a><a href=\"https://juejin.im/post/5c1f01fef265da61587723f4\" target=\"_blank\" rel=\"noopener\">五星推荐的系列文章清单</a></h3><p>大部分文章需要翻墙，文章有一些难度，需要一定的基础知识。</p>\n<h3 id=\"年度榜单！我整理了2018年所有文章和素材资源。\"><a href=\"#年度榜单！我整理了2018年所有文章和素材资源。\" class=\"headerlink\" title=\"年度榜单！我整理了2018年所有文章和素材资源。\"></a><a href=\"https://mp.weixin.qq.com/s/nKgeQ5guQJvmoeD5fTPdUA\" target=\"_blank\" rel=\"noopener\">年度榜单！我整理了2018年所有文章和素材资源。</a></h3><p>公众号【三顿】整理出的2018年这一年中全网值得一看的 PPT 文章。如果你对 PPT 感兴趣或者想寻找一些素材和创意，不妨在年末照着这份榜单，给自己充充电吧~</p>\n<h2 id=\"资源推荐\"><a href=\"#资源推荐\" class=\"headerlink\" title=\"资源推荐\"></a>资源推荐</h2><h3 id=\"译-如何学习-CSS\"><a href=\"#译-如何学习-CSS\" class=\"headerlink\" title=\"[译] 如何学习 CSS\"></a><a href=\"https://juejin.im/post/5c74daaaf265da2d9d1cb774\" target=\"_blank\" rel=\"noopener\">[译] 如何学习 CSS</a></h3><p>原文地址：<a href=\"https://www.smashingmagazine.com/2019/01/how-to-learn-css/，文中推荐了很多\" target=\"_blank\" rel=\"noopener\">https://www.smashingmagazine.com/2019/01/how-to-learn-css/，文中推荐了很多</a> CSS 相关的文章和视频</p>\n<h3 id=\"我如何零基础转行成为一个自信的前端\"><a href=\"#我如何零基础转行成为一个自信的前端\" class=\"headerlink\" title=\"我如何零基础转行成为一个自信的前端\"></a><a href=\"https://juejin.im/post/5c75d34851882564965edb23\" target=\"_blank\" rel=\"noopener\">我如何零基础转行成为一个自信的前端</a></h3><p>作者是蚂蚁金服的前端工程师，前面的可以略去不看，后面推荐的一些课程和牛人值得关注一下。</p>\n<h3 id=\"越忙越要多读书-字节跳动12位牛人的私藏书单\"><a href=\"#越忙越要多读书-字节跳动12位牛人的私藏书单\" class=\"headerlink\" title=\"越忙越要多读书| 字节跳动12位牛人的私藏书单\"></a><a href=\"https://mp.weixin.qq.com/s/lxvGNkd7qITi-j-hmn2Caw\" target=\"_blank\" rel=\"noopener\">越忙越要多读书| 字节跳动12位牛人的私藏书单</a></h3><p>新一年的好开端从阅读开始，字节范儿采访了字节跳动公司里12位大牛，邀请他们分享最近读过印象深刻的书，并且为大家推荐。</p>\n<h3 id=\"前端开发工程师必读书籍有哪些值得推荐？\"><a href=\"#前端开发工程师必读书籍有哪些值得推荐？\" class=\"headerlink\" title=\"前端开发工程师必读书籍有哪些值得推荐？\"></a><a href=\"https://www.zhihu.com/question/22591993\" target=\"_blank\" rel=\"noopener\">前端开发工程师必读书籍有哪些值得推荐？</a></h3><p>来自知乎，书荒的童鞋不妨一看。</p>\n<h3 id=\"个人分享–web-前端学习资源分享\"><a href=\"#个人分享–web-前端学习资源分享\" class=\"headerlink\" title=\"个人分享–web 前端学习资源分享\"></a><a href=\"https://juejin.im/post/5a0c1956f265da430a501f51\" target=\"_blank\" rel=\"noopener\">个人分享–web 前端学习资源分享</a></h3><p>掘金-守候i分享的前端学习资源，包括一些不错的教程和文章、大牛博客、前端团队博客、推荐书籍、推荐社区、公众号、推荐关注项目和综合项目教程等等。</p>\n<h3 id=\"入门前端一周年总结-我是如何快速入门前端的知识分享\"><a href=\"#入门前端一周年总结-我是如何快速入门前端的知识分享\" class=\"headerlink\" title=\"入门前端一周年总结-我是如何快速入门前端的知识分享\"></a><a href=\"https://juejin.im/post/5c2c18116fb9a049fb43c32c\" target=\"_blank\" rel=\"noopener\">入门前端一周年总结-我是如何快速入门前端的知识分享</a></h3><p>作者虽然入门前端才一年，但是已经有 14K star 的开源项目，面试了几十人，拥有丰富的面试经验，在这篇总结里作者分享了一下自己的学习方式和资源，值得学习与研究。</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"OAuth-认证流程详解\"><a href=\"#OAuth-认证流程详解\" class=\"headerlink\" title=\"OAuth 认证流程详解\"></a><a href=\"https://www.jianshu.com/p/0db71eb445c8\" target=\"_blank\" rel=\"noopener\">OAuth 认证流程详解</a></h3><p>文章以接入微博登录为例，以非常短小的篇幅对 OAuth 认证流程进行了介绍和讲解。</p>\n<h3 id=\"单点登录原理与简单实现\"><a href=\"#单点登录原理与简单实现\" class=\"headerlink\" title=\"单点登录原理与简单实现\"></a><a href=\"https://www.jianshu.com/p/a2c4b877be7d\" target=\"_blank\" rel=\"noopener\">单点登录原理与简单实现</a></h3><p>很多产品中都会有 SSO（单点登录）的实现，而本篇文章就十分详尽的介绍了 SSO 的原理，同时介绍了实现方式。</p>\n<h3 id=\"区块链，将如何重新定义世界？\"><a href=\"#区块链，将如何重新定义世界？\" class=\"headerlink\" title=\"区块链，将如何重新定义世界？\"></a><a href=\"https://mp.weixin.qq.com/s/ikPBVTsOhOWyyJKJBf021w\" target=\"_blank\" rel=\"noopener\">区块链，将如何重新定义世界？</a></h3><p>最近，区块链真的很火，同时区块链结束被认为是继蒸汽机、电力、互联网之后，下一代颠覆性的核心技术。在这篇文章里，作者用最容易理解的方式解答了以下 4 个问题：</p>\n<ol>\n<li>区块链的本质到底是什么？</li>\n<li>区块链技术带来的三大巨变。</li>\n<li>区块链面临的两大技术挑战。</li>\n<li>区块链技术未来的发展脉络。</li>\n</ol>\n<p>不过，文章篇幅较长，做好心理准备……</p>\n<h3 id=\"也许，这样理解-HTTPS-更容易\"><a href=\"#也许，这样理解-HTTPS-更容易\" class=\"headerlink\" title=\"也许，这样理解 HTTPS 更容易\"></a><a href=\"http://showme.codes/2017-02-20/understand-https/\" target=\"_blank\" rel=\"noopener\">也许，这样理解 HTTPS 更容易</a></h3><p>作者从一个经常遇到的例子开始介绍为什么我们需要 HTTPS，同时推荐一本书《HTTP权威指南》</p>\n<h3 id=\"做为技术人员为什么要写博客\"><a href=\"#做为技术人员为什么要写博客\" class=\"headerlink\" title=\"做为技术人员为什么要写博客\"></a><a href=\"http://www.cnblogs.com/zery/p/3343893.html\" target=\"_blank\" rel=\"noopener\">做为技术人员为什么要写博客</a></h3><p>技术人员写博客这件事本身就很据争议，有人认为真正的大牛是不需要写博客来博人眼球的，也有人认为水平不够还写博客就是个笑话。而这篇文章就为你解释了上面这两个问题，最后和这篇文章一样，附上一句名言：<strong>有些事情你现在不去做，可能以后都不会有机会了！</strong></p>\n<h3 id=\"从苹果公开-macOS-和-iOS-内核源码说起，分享一些开源知识\"><a href=\"#从苹果公开-macOS-和-iOS-内核源码说起，分享一些开源知识\" class=\"headerlink\" title=\"从苹果公开 macOS 和 iOS 内核源码说起，分享一些开源知识\"></a><a href=\"https://mp.weixin.qq.com/s/4ma3tHBBSC_pINOtcpQtYA\" target=\"_blank\" rel=\"noopener\">从苹果公开 macOS 和 iOS 内核源码说起，分享一些开源知识</a></h3><p>聊了聊开源精神、介绍了些开源社区，分享了点开源项目，仅此而已（还嫌不够？）</p>\n<h3 id=\"程序员字典：「牛逼」\"><a href=\"#程序员字典：「牛逼」\" class=\"headerlink\" title=\"程序员字典：「牛逼」\"></a><a href=\"https://zhuanlan.zhihu.com/p/25050829\" target=\"_blank\" rel=\"noopener\">程序员字典：「牛逼」</a></h3><p>作者通过他在招人时的“奇葩”条件展开阐述了到底如何定义一个“牛逼”的程序员，从作者的字里行间可以看出，作者是一名资深程序员，同时更是一名资深面试官和 team leader，所以这篇文章对于入门级程序员和骨灰级程序猿来说都是极好的</p>\n<h3 id=\"给网站加-HTTPS-完全指南\"><a href=\"#给网站加-HTTPS-完全指南\" class=\"headerlink\" title=\"给网站加 HTTPS 完全指南\"></a><a href=\"https://ksmx.me/letsencrypt-ssl-https/\" target=\"_blank\" rel=\"noopener\">给网站加 HTTPS 完全指南</a></h3><p>作者介绍了如何给自己的个人网站加 https，虽然具体是否可行我还没有尝试，但是如果你有这个需求，这篇文章也许会帮到你。</p>\n<h3 id=\"反击爬虫，前端工程师的脑洞可以有多大？\"><a href=\"#反击爬虫，前端工程师的脑洞可以有多大？\" class=\"headerlink\" title=\"反击爬虫，前端工程师的脑洞可以有多大？\"></a><a href=\"http://litten.me/2017/07/09/prevent-spiders/\" target=\"_blank\" rel=\"noopener\">反击爬虫，前端工程师的脑洞可以有多大？</a></h3><p>对于一张网页，我们往往希望它是结构良好，内容清晰的，这样搜索引擎才能准确地认知它。 而反过来，又有一些情景，我们不希望内容能被轻易获取，比方说电商网站的交易额，教育网站的题目等。因为这些内容，往往是一个产品的生命线，必须做到有效地保护。这就是<strong>爬虫与反爬虫</strong>这一话题的由来。 作为前端工程师，我们可以增加一下游戏难度，设计出一些<strong>很(sang)有(xin)意(bing)思(kuang)</strong>的反爬虫策略。</p>\n<h3 id=\"2016年学习Javascript是一种什么样的体验？\"><a href=\"#2016年学习Javascript是一种什么样的体验？\" class=\"headerlink\" title=\"2016年学习Javascript是一种什么样的体验？\"></a><a href=\"https://mp.weixin.qq.com/s/sYFhD55nHsxtjN_f_wfPLA\" target=\"_blank\" rel=\"noopener\">2016年学习Javascript是一种什么样的体验？</a></h3><p>与其说这是一篇好文章，还不如说这是一篇好吐槽，和上面那篇类似，作者想表达的都是“前端疲劳”这件事，只不过通过对话的形式让画风变得轻松愉快。</p>\n<h3 id=\"17-张程序员壁纸推荐\"><a href=\"#17-张程序员壁纸推荐\" class=\"headerlink\" title=\"17 张程序员壁纸推荐\"></a><a href=\"http://www.runoob.com/w3cnote/17-wallpaper-for-programmer.html\" target=\"_blank\" rel=\"noopener\">17 张程序员壁纸推荐</a></h3><p>不算是一篇好文章，但是这 17 张壁纸着实不错~</p>\n<h3 id=\"前后端分离实践（一）\"><a href=\"#前后端分离实践（一）\" class=\"headerlink\" title=\"前后端分离实践（一）\"></a><a href=\"https://segmentfault.com/a/1190000009329474\" target=\"_blank\" rel=\"noopener\">前后端分离实践（一）</a></h3><p>很多人都不理解甚至误解了“前后端分离”这一概念，相信这篇文章可以让你搞明白到底什么是前后端分离以及我们在什么业务场景下需要前后端分离和如何做才算前后端分离。</p>\n<h3 id=\"程序员怎么升职？\"><a href=\"#程序员怎么升职？\" class=\"headerlink\" title=\"程序员怎么升职？\"></a><a href=\"https://www.zhihu.com/question/20259295\" target=\"_blank\" rel=\"noopener\">程序员怎么升职？</a></h3><p>知乎上关于“程序员怎么升职”这个问题的回答，我认认真真的阅读了获得最高赞的那个回答，感觉说的很对，其中有很多道理是我一直保持认同的，希望每一位从事这个行业的人都可以花时间看一下并思考。</p>\n<h3 id=\"当你练习表达的时候，开场白是怎样去设计呢\"><a href=\"#当你练习表达的时候，开场白是怎样去设计呢\" class=\"headerlink\" title=\"当你练习表达的时候，开场白是怎样去设计呢\"></a><a href=\"http://www.jianshu.com/p/f76c540e3158\" target=\"_blank\" rel=\"noopener\">当你练习表达的时候，开场白是怎样去设计呢</a></h3><p>不管你从事什么职业，表达自己都是一项必备技能。而如何表达自己，如何吸引听众呢？这篇文章从生物学的角度阐述了开场白的重要性以及什么样的开场白才会吸引到听众，同时作者还有同一类型的其他文章，感兴趣的话可以多读读。</p>\n<h3 id=\"程序员的鄙视链\"><a href=\"#程序员的鄙视链\" class=\"headerlink\" title=\"程序员的鄙视链\"></a><a href=\"http://www.techug.com/post/look-down-chains-of-programmer.html\" target=\"_blank\" rel=\"noopener\">程序员的鄙视链</a></h3><p>如果你看了以上这些惨绝人寰的鄙视链之后，仍然没有击倒你想要学习 coding 的心，那我必须提醒你一件最重要的事：先去交一个女朋友，再来学写程序；因为一旦你成为软件工程师之后，就交不到女朋友了。</p>\n<h3 id=\"JavaScript-疲劳终极指南：我们行业的真相\"><a href=\"#JavaScript-疲劳终极指南：我们行业的真相\" class=\"headerlink\" title=\"JavaScript 疲劳终极指南：我们行业的真相\"></a><a href=\"http://www.zcfy.cc/article/3914\" target=\"_blank\" rel=\"noopener\">JavaScript 疲劳终极指南：我们行业的真相</a></h3><p>抱怨 JS 疲劳就像是在抱怨人类发明了太多解决问题的工具：从邮件到飞机到宇宙飞船。<strong>这篇文章的目的是希望改变你对软件工程行业的普遍的看法，助你在你可能工作的领域上一臂之力</strong>。</p>\n<h3 id=\"超大型-JavaScript-应用的设计哲学\"><a href=\"#超大型-JavaScript-应用的设计哲学\" class=\"headerlink\" title=\"超大型 JavaScript 应用的设计哲学\"></a><a href=\"https://zhuanlan.zhihu.com/p/35929167\" target=\"_blank\" rel=\"noopener\">超大型 JavaScript 应用的设计哲学</a></h3><p>这篇文章为译文，基于 <a href=\"https://link.zhihu.com/?target=https%3A//medium.com/%40cramforce\" target=\"_blank\" rel=\"noopener\">Malte Ubl</a> 在 JSConf Australia 的演讲速记稿和现场视频整理而来，<a href=\"https://link.zhihu.com/?target=https%3A//www.youtube.com/watch%3Fv%3DZZmUwXEiPm4\" target=\"_blank\" rel=\"noopener\">你可以在 YouTube 上观看完整演讲</a>。这篇文章很长，文中讨论了前端领域很多热门的话题与技术，知识点很多很密集。</p>\n<h3 id=\"图解Git\"><a href=\"#图解Git\" class=\"headerlink\" title=\"图解Git\"></a><a href=\"http://marklodato.github.io/visual-git-guide/index-zh-cn.html\" target=\"_blank\" rel=\"noopener\">图解Git</a></h3><p>图解 git 中的最常用命令。如果你稍微理解 git 的工作原理，这篇文章能够让你理解的更透彻。</p>\n<h3 id=\"如何成为一名优秀的全栈工程师\"><a href=\"#如何成为一名优秀的全栈工程师\" class=\"headerlink\" title=\"如何成为一名优秀的全栈工程师\"></a><a href=\"https://www.jianshu.com/p/f0d134ed7fd0\" target=\"_blank\" rel=\"noopener\">如何成为一名优秀的全栈工程师</a></h3><p>现在感觉“全栈工程师”已经成为了一个梗，然而，实际上全栈工程师是真实存在的，并且是一类对产品和业务发展起到很重要作用的工程师，该文章有点鸡汤，理论偏多。</p>\n<h3 id=\"路由器爱国上网、屏蔽广告与宽带提速\"><a href=\"#路由器爱国上网、屏蔽广告与宽带提速\" class=\"headerlink\" title=\"路由器爱国上网、屏蔽广告与宽带提速\"></a><a href=\"http://fullstack.blog/2018/03/27/%E8%B7%AF%E7%94%B1%E5%99%A8%E7%88%B1%E5%9B%BD%E4%B8%8A%E7%BD%91%E3%80%81%E5%B1%8F%E8%94%BD%E5%B9%BF%E5%91%8A%E4%B8%8E%E5%AE%BD%E5%B8%A6%E6%8F%90%E9%80%9F/\" target=\"_blank\" rel=\"noopener\">路由器爱国上网、屏蔽广告与宽带提速</a></h3><p>作者介绍了利用小米路由器实现爱国上网的具体操作流程，而路由器经过改造之后，所有接入的终端就都可以实现爱国上网了，简直是一劳永逸，而且作者在文章末尾还介绍了宽带提速的方法，每月只要十几块钱，就可以享受 100M 网络了，效果非常明显。</p>\n<h3 id=\"中文文案排版指北\"><a href=\"#中文文案排版指北\" class=\"headerlink\" title=\"中文文案排版指北\"></a><a href=\"https://github.com/sparanoid/chinese-copywriting-guidelines/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">中文文案排版指北</a></h3><p>提供统一中文文案、排版的相关用法，降低团队成员之间的沟通成本。</p>\n<h3 id=\"提问的智慧\"><a href=\"#提问的智慧\" class=\"headerlink\" title=\"提问的智慧\"></a><a href=\"https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md\" target=\"_blank\" rel=\"noopener\">提问的智慧</a></h3><p>原文网址：<a href=\"http://www.catb.org/~esr/faqs/smart-questions.html\" target=\"_blank\" rel=\"noopener\">http://www.catb.org/~esr/faqs/smart-questions.html</a>，文章比较长，但是看完会很有收获，提问也是有很多需要注意的地方的，好的提问方式不仅能够更快的获得想要的答案，还可以提高自己的情商，获得他人的认可。</p>\n<h3 id=\"理解-OAuth-2-0\"><a href=\"#理解-OAuth-2-0\" class=\"headerlink\" title=\"理解 OAuth 2.0\"></a><a href=\"http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html\" target=\"_blank\" rel=\"noopener\">理解 OAuth 2.0</a></h3><p><a href=\"http://en.wikipedia.org/wiki/OAuth\" target=\"_blank\" rel=\"noopener\">OAuth</a>是一个关于授权（authorization）的开放网络标准，在全世界得到广泛应用，目前的版本是 2.0 版。在这篇文章中，阮一峰对 OAuth 2.0 的设计思路和运行流程，做了一个简明通俗的解释。</p>\n<h3 id=\"以色列简史，简到崩溃，笑到流泪！\"><a href=\"#以色列简史，简到崩溃，笑到流泪！\" class=\"headerlink\" title=\"以色列简史，简到崩溃，笑到流泪！\"></a><a href=\"https://mp.weixin.qq.com/s/8Kvgu6sSU57U1q-1K1G-XA\" target=\"_blank\" rel=\"noopener\">以色列简史，简到崩溃，笑到流泪！</a></h3><p>以图文和人物对话的方式对巴以冲突的历史原因以及以色列的历史进行了介绍，风趣幽默，通过一种别样的方式了解历史，我很喜欢。</p>\n<h3 id=\"97-Things-Every-Programmer-Should-Know\"><a href=\"#97-Things-Every-Programmer-Should-Know\" class=\"headerlink\" title=\"97 Things Every Programmer Should Know\"></a><a href=\"https://97-things-every-x-should-know.gitbooks.io/97-things-every-programmer-should-know/content/en/\" target=\"_blank\" rel=\"noopener\">97 Things Every Programmer Should Know</a></h3><p>同事推荐的文章，97 个程序员需要知道的理论，文章内容较长，读起来可能比较枯燥，而且暂时没有看到中文版本。。</p>\n<h3 id=\"为什么你统计-PV-的方式是错的？\"><a href=\"#为什么你统计-PV-的方式是错的？\" class=\"headerlink\" title=\"为什么你统计 PV 的方式是错的？\"></a><a href=\"https://juejin.im/post/58ef1fcc570c3500561c2e89\" target=\"_blank\" rel=\"noopener\">为什么你统计 PV 的方式是错的？</a></h3><p>翻译自 Google 工程师 Philip Walton 的<a href=\"https://philipwalton.com/articles/how-we-track-pageviews-is-all-wrong/\" target=\"_blank\" rel=\"noopener\">文章</a>。该文会帮你剖析为什么你常用的统计方式是错的？然后给出可行的解决方案。</p>\n<h3 id=\"编程语言拟人化\"><a href=\"#编程语言拟人化\" class=\"headerlink\" title=\"编程语言拟人化\"></a><a href=\"http://blog.jobbole.com/63311/\" target=\"_blank\" rel=\"noopener\">编程语言拟人化</a></h3><p>作者将各种语言都拟人化了，并赋予了他们一些特征，很有意思。</p>\n<h3 id=\"从平面设计师到前端工程师：五个月的转变历程\"><a href=\"#从平面设计师到前端工程师：五个月的转变历程\" class=\"headerlink\" title=\"从平面设计师到前端工程师：五个月的转变历程\"></a><a href=\"https://mp.weixin.qq.com/s/JGADqRL56xfHM37Cix4VEw\" target=\"_blank\" rel=\"noopener\">从平面设计师到前端工程师：五个月的转变历程</a></h3><p>作者通过自己的转行经历对前端知识路线进行了概括，同时还提供了一些很好的自学资源，包括视频和文章。原文：<a href=\"https://medium.com/@vinceshao/graphic-designer-to-front-end-developer-ch-3e1ac681eea8\" target=\"_blank\" rel=\"noopener\">https://medium.com/@vinceshao/graphic-designer-to-front-end-developer-ch-3e1ac681eea8</a></p>\n","raw":null,"categories":[{"name":"summary","path":"api/categories/summary.json"}],"tags":[{"name":"前端","path":"api/tags/前端.json"},{"name":"推荐","path":"api/tags/推荐.json"}]}]}