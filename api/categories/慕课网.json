{"name":"慕课网","postlist":[{"title":"Hybrid设计与浅析","slug":"Hybrid设计与浅析","date":"2017-12-01T14:19:00.000Z","updated":"2019-07-04T08:09:14.545Z","comments":true,"path":"api/articles/Hybrid设计与浅析.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_288.png","content":"<p>慕课网视频——<a href=\"https://www.imooc.com/learn/850\" target=\"_blank\" rel=\"noopener\">Hybrid设计</a>的学习笔记，同时加入了一些自己的理解，希望通过本篇文章能够让你理解什么是 Hybrid，以及 Hybrid 有什么特点，同时还会简单介绍一下 Hybrid 开发时的注意事项。</p>\n<h2 id=\"什么是-Hybrid\"><a href=\"#什么是-Hybrid\" class=\"headerlink\" title=\"什么是 Hybrid\"></a>什么是 Hybrid</h2><p>Hybrid 和普通前端代码没差别，只不过宿主不一样，Hybrid 就是在 app 中运行的前端代码。</p>\n<h2 id=\"业内的-Hybrid-App\"><a href=\"#业内的-Hybrid-App\" class=\"headerlink\" title=\"业内的 Hybrid App\"></a>业内的 Hybrid App</h2><ul>\n<li>携程</li>\n<li>百度糯米</li>\n<li>京东</li>\n<li>天猫</li>\n<li>微信</li>\n<li>QQ</li>\n<li>手机百度</li>\n<li>支付宝</li>\n</ul>\n<h3 id=\"一般地，APP-开发方式有以下几种方式：\"><a href=\"#一般地，APP-开发方式有以下几种方式：\" class=\"headerlink\" title=\"一般地，APP 开发方式有以下几种方式：\"></a>一般地，APP 开发方式有以下几种方式：</h3><ol>\n<li>Web App（浏览器网页）</li>\n<li>Native App（原生app）</li>\n<li>Hybrid App（ H5 混合app）</li>\n<li>超级Hybrid（React Native、Weex）</li>\n<li>微信/支付宝小程序（或内嵌页面）</li>\n</ol>\n<h2 id=\"Hybrid-相比-Native-和纯-Html5-的优缺点\"><a href=\"#Hybrid-相比-Native-和纯-Html5-的优缺点\" class=\"headerlink\" title=\"Hybrid 相比 Native 和纯 Html5 的优缺点\"></a>Hybrid 相比 Native 和纯 Html5 的优缺点</h2><div align=\"center\"><img src=\"/images/hexo_post_288.png\" alt=\"\"></div>\n\n<h2 id=\"Native-与-H5-的职责\"><a href=\"#Native-与-H5-的职责\" class=\"headerlink\" title=\"Native 与 H5 的职责\"></a>Native 与 H5 的职责</h2><ul>\n<li>H5 做业务</li>\n<li>Native 提供基础能力</li>\n<li>Native 做好必须 Native 做的业务</li>\n</ul>\n<h2 id=\"H5-与-Native-通信\"><a href=\"#H5-与-Native-通信\" class=\"headerlink\" title=\"H5 与 Native 通信\"></a>H5 与 Native 通信</h2><h3 id=\"JavascriptCore\"><a href=\"#JavascriptCore\" class=\"headerlink\" title=\"JavascriptCore\"></a>JavascriptCore</h3><p>和 JS Bridge 类似</p>\n<div align=\"center\"><img src=\"/images/hexo_post_104.png\" alt=\"\"></div>\n\n<h2 id=\"通过-URL-Schema-通信\"><a href=\"#通过-URL-Schema-通信\" class=\"headerlink\" title=\"通过 URL Schema 通信\"></a>通过 URL Schema 通信</h2><h3 id=\"App-主动与-H5-通信\"><a href=\"#App-主动与-H5-通信\" class=\"headerlink\" title=\"App 主动与 H5 通信\"></a>App 主动与 H5 通信</h3><div align=\"center\"><img src=\"/images/hexo_post_88.png\" alt=\"\"></div>\n\n<p>将一组 API 绑定在 webview 的 window 对象上，App 通过 iOS/Android 原生方法调用 window 对象中的 js 方法</p>\n<h3 id=\"H5-主动与-App-通信\"><a href=\"#H5-主动与-App-通信\" class=\"headerlink\" title=\"H5 主动与 App 通信\"></a>H5 主动与 App 通信</h3><div align=\"center\"><img src=\"/images/hexo_post_105.png\" alt=\"\"></div>\n\n<p>App 实现对 WebView URL 的观察者模式，H5 通过改变 URL 的哈希值，App 会通过解析哈希值的变化执行对应的操作</p>\n","raw":null,"categories":[{"name":"慕课网","path":"api/categories/慕课网.json"}],"tags":[{"name":"Hybrid","path":"api/tags/Hybrid.json"},{"name":"慕课网","path":"api/tags/慕课网.json"}]},{"title":"浅谈搜索引擎（SEO）","slug":"浅谈搜索引擎（SEO）","date":"2017-11-30T14:47:40.000Z","updated":"2019-07-04T08:09:14.553Z","comments":true,"path":"api/articles/浅谈搜索引擎（SEO）.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>这是一篇视频笔记，最近看了幕课网上的视频——<a href=\"https://www.imooc.com/learn/855\" target=\"_blank\" rel=\"noopener\">浅谈搜索引擎_SEO</a>，同时结合了之前有位公司的同事分享的关于 SEO 的一些内容，可以说是基本上包含了 SEO 的全部内容了~</p>\n<h2 id=\"SEO-与-SEM-的区别\"><a href=\"#SEO-与-SEM-的区别\" class=\"headerlink\" title=\"SEO 与 SEM 的区别\"></a>SEO 与 SEM 的区别</h2><p>SEO：Search Engine Optimization，搜索引擎优化，SEM：Search Engine Marketing，搜索引擎营销，因为价钱越高排名越靠前，所以也可以称为搜索引擎竞价</p>\n<ul>\n<li>SEO 免费，SEM 付费</li>\n<li>SEM 短，效益快、SEO 长期投入，增长慢</li>\n<li>新广告法颁布之后 SEM 广告位减少、竞争压力大</li>\n</ul>\n<h2 id=\"IP、PV、UV\"><a href=\"#IP、PV、UV\" class=\"headerlink\" title=\"IP、PV、UV\"></a>IP、PV、UV</h2><ul>\n<li><strong>IP</strong>：独立IP访问的用户</li>\n<li><strong>PV</strong>：页面浏览量或点击量</li>\n<li><strong>UV</strong>：独立访客数</li>\n</ul>\n<p>搜索引擎占有率工具：statcounter</p>\n<h2 id=\"SEO-的三个大方向\"><a href=\"#SEO-的三个大方向\" class=\"headerlink\" title=\"SEO 的三个大方向\"></a>SEO 的三个大方向</h2><ol>\n<li>优化网站的内容</li>\n<li>提升用户体验，吸引更多流量</li>\n<li>优化网站结构，帮助搜索引擎抓取</li>\n</ol>\n<p>虽然搜索引擎的算法，网站的技术不断更新，但是 SEO 的三个大的方向从未变过</p>\n<h2 id=\"SEO-优化最重要的三要素\"><a href=\"#SEO-优化最重要的三要素\" class=\"headerlink\" title=\"SEO 优化最重要的三要素\"></a>SEO 优化最重要的三要素</h2><ul>\n<li>标题（title，一般格式为内容-关键词-品牌词）</li>\n<li>关键词（keywords，一般不超过 100 个字符）</li>\n<li>描述（description，50-170 个字）</li>\n</ul>\n<p><code>title</code>:一般会作为搜索结果的标题中，<code>description</code>:可能会被引用为搜索结果，也可能不会，<code>keyowrds</code>:由于很多网站无法准确提取关键词，一些网站恶意堆砌关键词，关键词的重要性已经在降低。</p>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><h3 id=\"内链\"><a href=\"#内链\" class=\"headerlink\" title=\"内链\"></a>内链</h3><ul>\n<li>提升网站内部页面抓取率</li>\n<li>优化本站、提高流量</li>\n</ul>\n<p>经典的内链网站为百度百科</p>\n<h3 id=\"外链\"><a href=\"#外链\" class=\"headerlink\" title=\"外链\"></a>外链</h3><p>外链是指网站与网站之间的链接向导，外链是提升权重的方式，互联网是链接与链接实现的一条网络，灌水式外链会让人头疼</p>\n<h2 id=\"友情链接交换注意事项\"><a href=\"#友情链接交换注意事项\" class=\"headerlink\" title=\"友情链接交换注意事项\"></a>友情链接交换注意事项</h2><p>和内容相近的网站交换 链接交换形式多样</p>\n<ul>\n<li>单向链接：别人指向我或者我指向别人，而对方不指过来</li>\n<li>双向链接：网站与网站之间互相交换链接</li>\n</ul>\n<h2 id=\"SEO建议\"><a href=\"#SEO建议\" class=\"headerlink\" title=\"SEO建议\"></a>SEO建议</h2><ul>\n<li>经常更新</li>\n<li>质量</li>\n<li>原创</li>\n<li>关键词密度（2%~8%）</li>\n<li>图文并茂</li>\n</ul>\n<h2 id=\"和SEO相关的HTML标签\"><a href=\"#和SEO相关的HTML标签\" class=\"headerlink\" title=\"和SEO相关的HTML标签\"></a>和SEO相关的HTML标签</h2><h3 id=\"a-标签中的-nofollow\"><a href=\"#a-标签中的-nofollow\" class=\"headerlink\" title=\"a 标签中的 nofollow\"></a>a 标签中的 nofollow</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"nofollow\"</span>&gt;</span>链接<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>作用：使链接指向的页面不影响本页权重，但不能保证搜索引擎不抓取，使用时机：</p>\n<ul>\n<li>搜索引擎不需要抓取的页面，如登录、注册、付费等；</li>\n<li>对页面没有正向权重的页面，如了解更多；</li>\n<li>页面中的重复链接。</li>\n</ul>\n<h3 id=\"meta-中-robots-设置\"><a href=\"#meta-中-robots-设置\" class=\"headerlink\" title=\"meta 中 robots 设置\"></a>meta 中 robots 设置</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"robots\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"index,follow\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>noindex：不要索引此页面</li>\n<li>nofollow：不要关注此页面的链接</li>\n<li>noatchive：不要保存网页快照</li>\n<li>nosnippet：不要此页面的描述</li>\n</ul>\n<p>目前不是所有的搜索引擎都支持 robots，即使支持，也不是所有的字段都会遵守。</p>\n<h2 id=\"避免过度-SEO\"><a href=\"#避免过度-SEO\" class=\"headerlink\" title=\"避免过度 SEO\"></a>避免过度 SEO</h2><h3 id=\"不要尝试欺骗搜索引擎\"><a href=\"#不要尝试欺骗搜索引擎\" class=\"headerlink\" title=\"不要尝试欺骗搜索引擎\"></a>不要尝试欺骗搜索引擎</h3><ul>\n<li>采用图片遮盖、透明度等方式隐藏文字</li>\n<li>关键词、标题、描述和内容不符</li>\n</ul>\n<h3 id=\"避免抄袭\"><a href=\"#避免抄袭\" class=\"headerlink\" title=\"避免抄袭\"></a>避免抄袭</h3><ul>\n<li>避免机器采集</li>\n<li>有技巧的借鉴</li>\n</ul>\n<h3 id=\"购买外链，恶意交换友情链接\"><a href=\"#购买外链，恶意交换友情链接\" class=\"headerlink\" title=\"购买外链，恶意交换友情链接\"></a>购买外链，恶意交换友情链接</h3><ul>\n<li>保证适量的外链和友情链接</li>\n<li>不购买被百度惩罚了的网站的外链</li>\n</ul>\n<h3 id=\"移动端强引导下载\"><a href=\"#移动端强引导下载\" class=\"headerlink\" title=\"移动端强引导下载\"></a>移动端强引导下载</h3><p><code>冰心算法</code>是专门用来打击移动端的强引导下载。不下载 app 就无法阅读网页全部内容被百度认为是最严重影响用户体验的行为</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li>《SEO实战密码》——堪称 SEO 必读书籍</li>\n<li>seoWhy——关于 seo 的一个论坛</li>\n<li>cnzz、百度统计、谷歌统计——流量统计网站</li>\n</ul>\n<p>本博客用的就是 cnzz，因为流量比较小，所以看不出来和百度统计、谷歌统计比有哪些好处，而且这三家统计网站好像统计的标准都不相同，所以最好的方案就是放三套统计代码。。</p>\n<h2 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h2><ul>\n<li><a href=\"https://mp.weixin.qq.com/s/sY93w6xx7j_TnfRShHuzWQ\" target=\"_blank\" rel=\"noopener\">Web 工程师需要掌握的 38 种 SEO 技巧</a></li>\n</ul>\n","raw":null,"categories":[{"name":"慕课网","path":"api/categories/慕课网.json"}],"tags":[{"name":"慕课网","path":"api/tags/慕课网.json"},{"name":"SEO","path":"api/tags/SEO.json"}]},{"title":"慕课网视频评分&推荐","slug":"慕课网视频评分&推荐","date":"2018-02-19T02:11:11.000Z","updated":"2019-07-04T08:09:14.553Z","comments":true,"path":"api/articles/慕课网视频评分&推荐.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":null,"content":"<p>总有童鞋问我<a href=\"https://www.imooc.com/\" target=\"_blank\" rel=\"noopener\">慕课网</a>上面有哪些视频比较好，我就索性写一篇文章总结一下我看过的慕课网上面的优秀的视频，绝大部分都是前端相关的，希望能够提升你的效率，节省时间。下面我会对这些视频从以下几个方面进行评分（单纯个人评分，不喜勿喷- -）：</p>\n<ul>\n<li><strong>难度系数</strong>：视频所讲内容的难度</li>\n<li><strong>实战系数</strong>：视频所讲内容的实际应用系数</li>\n<li><strong>版本系数</strong>：视频所讲内容中涉及到的框架/插件的版本是否是最新的</li>\n<li><strong>综合评分</strong>：综合评价</li>\n</ul>\n<p>推荐大家用 1.75 倍速播放，这样可以节省很多时间，同时也能听清- -</p>\n<h2 id=\"前端工具\"><a href=\"#前端工具\" class=\"headerlink\" title=\"前端工具\"></a>前端工具</h2><h3 id=\"前端内容的自动化构建\"><a href=\"#前端内容的自动化构建\" class=\"headerlink\" title=\"前端内容的自动化构建\"></a><a href=\"https://www.imooc.com/learn/922\" target=\"_blank\" rel=\"noopener\">前端内容的自动化构建</a></h3><ul>\n<li>难度系数：★☆☆☆☆</li>\n<li>实战系数：★★★★☆</li>\n<li>版本系数：★★☆☆☆</li>\n<li>综合评分：★★★☆☆</li>\n</ul>\n<p>该课程分为三个部分，第一部分讲解什么是构建，为什么需要自动化构建，后面两部分分别讲解如何使用 Gulp 进行 JavaScript 和 CSS 的构建。所讲内容比较简单，而且自动化构建在实际项目中经常会用到，不过 webpack 版本比较低，需要结合评论进行学习。。</p>\n<h3 id=\"webpack深入与实战\"><a href=\"#webpack深入与实战\" class=\"headerlink\" title=\"webpack深入与实战\"></a><a href=\"https://www.imooc.com/learn/802\" target=\"_blank\" rel=\"noopener\">webpack深入与实战</a></h3><ul>\n<li>难度系数：★★★★☆</li>\n<li>实战系数：★★★★☆</li>\n<li>版本系数：★★☆☆☆</li>\n<li>综合评分：★★★★☆</li>\n</ul>\n<p>该课程介绍了如何在项目中使用 webpack 打包文件，处理各种资源，以及配置开发环境，上线环境等，通过实际的例子来讲解 webpack 的使用方法，带你探索 webpack 强大的功能。可以说是很全面了，作者讲解的也比较详细，想初步了解 webpack 如何使用的童鞋可以选择看一下该视频。</p>\n<h3 id=\"前端实时可视化开发工具体验\"><a href=\"#前端实时可视化开发工具体验\" class=\"headerlink\" title=\"前端实时可视化开发工具体验\"></a><a href=\"https://www.imooc.com/learn/718\" target=\"_blank\" rel=\"noopener\">前端实时可视化开发工具体验</a></h3><ul>\n<li>难度系数：★★☆☆☆</li>\n<li>实战系数：★★★★☆</li>\n<li>版本系数：★★★☆☆</li>\n<li>综合评分：★★★☆☆</li>\n</ul>\n<p>前端开发中，我们常常需要频繁的修改 html，css，js，然后刷新页面，看效果，再调整，再刷新。该课程使用 liveStyle，liveReload，browserSync 工具实现修改代码后，立即体现效果的功能，使用可见即可得的开发模式，极大的提高前端开发效率。实时可视化在开发环境应用的比较多，会很大程度地提高工作效率，感兴趣的童鞋可以再自行搜索 hotreload，这样结合本视频观看食用效果更佳</p>\n<h3 id=\"前端性能优化-基础知识认知\"><a href=\"#前端性能优化-基础知识认知\" class=\"headerlink\" title=\"前端性能优化-基础知识认知\"></a><a href=\"https://www.imooc.com/learn/580\" target=\"_blank\" rel=\"noopener\">前端性能优化-基础知识认知</a></h3><ul>\n<li>难度系数：★★★☆☆</li>\n<li>实战系数：★★★★☆</li>\n<li>版本系数：★★★★☆</li>\n<li>综合评分：★★★★☆</li>\n</ul>\n<p>该课程从前端优化目的，简单方法、分类开始，到如何优化，优化过程中的常见错误，业内公认的但是不适应所有方案。我们还可从这个课程中学习到当我们访问一个站点的时候，我们究竟做了什么以及怎么样才叫优化成功。性能优化是一个老生常谈的问题，如果你对该问题有一定的基础认知，想再深入了解相关知识的话，该课程你不容错过</p>\n<h2 id=\"WebApp\"><a href=\"#WebApp\" class=\"headerlink\" title=\"WebApp\"></a>WebApp</h2><h3 id=\"Hello，移动WEB\"><a href=\"#Hello，移动WEB\" class=\"headerlink\" title=\"Hello，移动WEB\"></a><a href=\"https://www.imooc.com/learn/494\" target=\"_blank\" rel=\"noopener\">Hello，移动WEB</a></h3><ul>\n<li>难度系数：★★★☆☆</li>\n<li>实战系数：★★★★★</li>\n<li>版本系数：★★★★☆</li>\n<li>综合评分：★★★★☆</li>\n</ul>\n<p>该课程介绍移动 web 的开发基础，高效的排版布局，常见的移动 web 问题，终端触摸交互，各种 bug 坑如何解决等多方面。虽然视频比较短，但是干货多多，对于移动端的适配布局这类问题进行了很详细的讲解。</p>\n<h2 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h2><h3 id=\"Promise入门\"><a href=\"#Promise入门\" class=\"headerlink\" title=\"Promise入门\"></a><a href=\"https://www.imooc.com/learn/949\" target=\"_blank\" rel=\"noopener\">Promise入门</a></h3><ul>\n<li>难度系数：★★★★☆</li>\n<li>实战系数：★★★★★</li>\n<li>版本系数：★★★★☆</li>\n<li>综合评分：★★★★★</li>\n</ul>\n<p>Promise 是 ES6 中最重要的特性之一，该课程为我们讲解了为什么会有 Promise，以及 Promise 的常见用法和注意事项，通过实际代码进行讲解清晰易懂，适合前端中级水平开发者，我对该课程进行了总结，笔记<a href=\"/20180226/introduction-to-promise.html\">在这里</a>可以查看得到。</p>\n<h3 id=\"ajax跨域完全讲解\"><a href=\"#ajax跨域完全讲解\" class=\"headerlink\" title=\"ajax跨域完全讲解\"></a><a href=\"https://www.imooc.com/learn/947\" target=\"_blank\" rel=\"noopener\">ajax跨域完全讲解</a></h3><ul>\n<li>难度系数：★★★☆☆</li>\n<li>实战系数：★★★★★</li>\n<li>版本系数：★★★★☆</li>\n<li>综合评分：★★★★★</li>\n</ul>\n<p>跨域是前端领域中经常遇到的问题，尤其是各种 CDN 服务兴起之后，而究竟什么情况下跨域，如何解决跨域问题更是笔试或面试时经常被问到的问题，该视频教程详细讲解了 jsonp 的工作机制，http 协议如何支持跨域，以及 http 服务器 nginx 和 apache 的 2 种不同解决思路，让大家知其然并知其所以然，是非常不错的跨域入门讲解课程</p>\n<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><h3 id=\"CSS深入理解系列\"><a href=\"#CSS深入理解系列\" class=\"headerlink\" title=\"CSS深入理解系列\"></a><a href=\"https://www.imooc.com/search/course?words=css%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20%E5%BC%A0%E9%91%AB%E6%97%AD\" target=\"_blank\" rel=\"noopener\">CSS深入理解系列</a></h3><ul>\n<li>难度系数：★★★☆☆</li>\n<li>实战系数：★★★★★</li>\n<li>版本系数：★★★★☆</li>\n<li>综合评分：★★★★★</li>\n</ul>\n<p>该系列视频为张鑫旭老师对 CSS 相关属性的讲解，包括 margin、padding、position、z-index 等等基础属性，适合具备一定 CSS 基础知识的童鞋，张鑫旭老师的讲课风格很独特，也不知道是否符合你的口味，不过我是很喜欢啦~而且张鑫旭老师对于这些属性的讲解很深入，在实际项目中应用的很多，毕竟前端工程师一年写的 CSS 代码可以绕地球三圈啊（我对该系列视频的讲解进行了总结，在系列专栏中的<a href=\"/20170421/css-in-depth-understanding-series.html\">CSS深入理解系列</a>中可以看到）</p>\n<h3 id=\"如何用CSS进行网页布局\"><a href=\"#如何用CSS进行网页布局\" class=\"headerlink\" title=\"如何用CSS进行网页布局\"></a><a href=\"https://www.imooc.com/learn/57\" target=\"_blank\" rel=\"noopener\">如何用CSS进行网页布局</a></h3><ul>\n<li>难度系数：★☆☆☆☆</li>\n<li>实战系数：★★★★☆</li>\n<li>版本系数：★★★☆☆</li>\n<li>综合评分：★★★☆☆</li>\n</ul>\n<p>该课程教你怎么制作一列布局、二列布局、三列布局当然还有最通用的混合布局，而且你还可以选择让它固定还是自适应。用 CSS 重新规划你的网页，让你的网页从此更美观、更友好。难度系数很低，而布局在实际项目中是很基本也是很重要的知识点</p>\n<h3 id=\"分页页码制作\"><a href=\"#分页页码制作\" class=\"headerlink\" title=\"分页页码制作\"></a><a href=\"https://www.imooc.com/learn/15\" target=\"_blank\" rel=\"noopener\">分页页码制作</a></h3><ul>\n<li>难度系数：★☆☆☆☆</li>\n<li>实战系数：★★☆☆☆</li>\n<li>版本系数：★★★★☆</li>\n<li>综合评分：★★★☆☆</li>\n</ul>\n<p>通过本课程的学习，我们可以学习到利用 HTML、CSS 样式技术制作出分页页码的效果。包括最简单的直角分页页码效果，修复行内元素之间的间隔 bug 问题分析，代码整理，为分页页码插入小图标。虽然一般不需要我们自己制作分页页码，但是如果你想自己写框架或者对这类知识比较好奇的话，该视频能够充分解答你的疑惑，最为关键的是<strong>提供源码</strong>啊~</p>\n<h2 id=\"JavaScript-1\"><a href=\"#JavaScript-1\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h2><h3 id=\"Hybrid设计\"><a href=\"#Hybrid设计\" class=\"headerlink\" title=\"Hybrid设计\"></a><a href=\"https://www.imooc.com/learn/850\" target=\"_blank\" rel=\"noopener\">Hybrid设计</a></h3><ul>\n<li>难度系数：★★☆☆☆</li>\n<li>实战系数：★★★★☆</li>\n<li>版本系数：★★★★☆</li>\n<li>综合评分：★★★★☆</li>\n</ul>\n<p>该课程首先会告诉大家什么是 Hybrid，Hybrid 有什么特点，也会告诉大家业内有哪些常见的 Hybrid 应用以及 Hybrid 合理的应用场景。 然后，课程会简单介绍一个 Hybrid 架构的方方面面，包括 Hybrid 的发展，比如超级 Hybrid 方案 React Native 以及 Weex 学习该课程，大家会知道 Hybrid 中 H5 与 Native 如何交互，并且对 Hybrid 体验增强和 Hybrid 离线包有一些认识，是大家做混合 APP 的必备良药。</p>\n<h3 id=\"zepto设计和源码分析\"><a href=\"#zepto设计和源码分析\" class=\"headerlink\" title=\"zepto设计和源码分析\"></a><a href=\"https://www.imooc.com/learn/745\" target=\"_blank\" rel=\"noopener\">zepto设计和源码分析</a></h3><ul>\n<li>难度系数：★★★☆☆</li>\n<li>实战系数：★★★☆☆</li>\n<li>版本系数：★★★☆☆</li>\n<li>综合评分：★★★☆☆</li>\n</ul>\n<p>当熟练使用 zepto 的 API 之后，也应该解读一下 zepto 的源码，了解一下 zepto 的设计原理。该教程深入浅出的介绍了 zepto 最核心的设计原理，看完之后即能轻松解读 zepto 所有源码。就像 TJ 大神一样，有时候看别人写的代码会有不同寻常的收获</p>\n<h3 id=\"Web安全-XSS\"><a href=\"#Web安全-XSS\" class=\"headerlink\" title=\"Web安全-XSS\"></a><a href=\"https://www.imooc.com/learn/812\" target=\"_blank\" rel=\"noopener\">Web安全-XSS</a></h3><ul>\n<li>难度系数：★★☆☆☆</li>\n<li>实战系数：★★★★☆</li>\n<li>版本系数：★★★☆☆</li>\n<li>综合评分：★★★☆☆</li>\n</ul>\n<p>该课程从 Web 安全 XSS 的定义开始讲起，到深入剖析 XSS 攻击的原理和流程，了解常见 XSS 攻击的危害。同时通过项目实战针对性的分析如何应对 XSS 攻击做到安全的 XSS 防御措施。XSS 是最常见的一种 web 攻击，了解一些相关知识百利无一害= =</p>\n","raw":null,"categories":[{"name":"慕课网","path":"api/categories/慕课网.json"}],"tags":[{"name":"前端","path":"api/tags/前端.json"},{"name":"推荐","path":"api/tags/推荐.json"},{"name":"慕课网","path":"api/tags/慕课网.json"},{"name":"教程","path":"api/tags/教程.json"}]},{"title":"与MySQL的零距离接触","slug":"与MySQL的零距离接触","date":"2017-05-09T02:02:40.000Z","updated":"2019-07-04T08:09:14.549Z","comments":true,"path":"api/articles/与MySQL的零距离接触.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_207.png","content":"<h2 id=\"MySQL-基础\"><a href=\"#MySQL-基础\" class=\"headerlink\" title=\"MySQL 基础\"></a>MySQL 基础</h2><p>由瑞典 MySQL AB 公司开发，目前属于 Oracle 公司，MySQL 是一个开源的<strong>关系型</strong>数据库管理系统，分为社区版和企业版</p>\n<h2 id=\"MySQL-一些常用参数\"><a href=\"#MySQL-一些常用参数\" class=\"headerlink\" title=\"MySQL 一些常用参数\"></a>MySQL 一些常用参数</h2><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-D，–database=name</td>\n<td>打开指定数据库</td>\n</tr>\n<tr>\n<td>–delimiter=name</td>\n<td>指定分隔符</td>\n</tr>\n<tr>\n<td>-h，–host=name</td>\n<td>服务器名称</td>\n</tr>\n<tr>\n<td>-p，–password[=name]</td>\n<td>密码</td>\n</tr>\n<tr>\n<td>-P，–port=#</td>\n<td>端口号</td>\n</tr>\n<tr>\n<td>–prompt=name</td>\n<td>设置提示符</td>\n</tr>\n<tr>\n<td>-u，–user=name</td>\n<td>用户名</td>\n</tr>\n<tr>\n<td>-V，–version</td>\n<td>输出版本信息并且退出</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"MySQL退出\"><a href=\"#MySQL退出\" class=\"headerlink\" title=\"MySQL退出\"></a>MySQL退出</h3><ul>\n<li>mysql &gt; exit;</li>\n<li>mysql &gt; quit;</li>\n<li>mysql &gt; \\q;</li>\n</ul>\n<h3 id=\"修改-MySQL-提示符\"><a href=\"#修改-MySQL-提示符\" class=\"headerlink\" title=\"修改 MySQL 提示符\"></a>修改 MySQL 提示符</h3><p>连接客户端时通过参数指定提示符：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell&gt;mysql -uroot -proot --prompt</span><br></pre></td></tr></table></figure>\n<p>连接上客户端后，通过 prompt 命令修改提示符：mysql&gt;prompt，MySQL 提示符修改时可以用到的一些参数：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\\D</td>\n<td>完整的日期</td>\n</tr>\n<tr>\n<td>\\d</td>\n<td>当前数据库</td>\n</tr>\n<tr>\n<td>\\h</td>\n<td>服务器名称</td>\n</tr>\n<tr>\n<td>\\u</td>\n<td>当前用户</td>\n</tr>\n</tbody>\n</table>\n<div align=\"center\"><img src=\"/images/hexo_post_207.png\" alt=\"\" width=\"500\"></div>\n\n<h3 id=\"修改数据表的默认存储引擎\"><a href=\"#修改数据表的默认存储引擎\" class=\"headerlink\" title=\"修改数据表的默认存储引擎\"></a>修改数据表的默认存储引擎</h3><p>找到 MySQL 配置文件：default-storage-engine=INNODB，修改完之后需要重启 MySQL</p>\n<h2 id=\"MySQL-语句的规范\"><a href=\"#MySQL-语句的规范\" class=\"headerlink\" title=\"MySQL 语句的规范\"></a>MySQL 语句的规范</h2><ul>\n<li>关键字与函数名称全部大写</li>\n<li>数据库名称、表名称、字段名称全部小写</li>\n<li>SQL 语句必须以分号结尾</li>\n</ul>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><ol>\n<li>字符型</li>\n<li>整型</li>\n<li>浮点型</li>\n<li>日期时间型</li>\n</ol>\n<h2 id=\"MySQL-常用命令\"><a href=\"#MySQL-常用命令\" class=\"headerlink\" title=\"MySQL 常用命令\"></a>MySQL 常用命令</h2><ul>\n<li>显示当前服务器版本：SELECT VERSION();</li>\n<li>显示当前日期时间：SELECT NOW();</li>\n<li>显示当前用户：SELECT USER();</li>\n</ul>\n<h3 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h3><ul>\n<li>|：表示可以互换的两项</li>\n<li>[]：表示可选项</li>\n<li>{}：表示必选项</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE &#123;DATABASE | SCHEMA&#125; \\[IF NOT EXISTS\\] db\\_name \\[DEFAULT\\] CHARACTER SET \\[=\\] charset\\_name</span><br></pre></td></tr></table></figure>\n<p>DATABASE | SCHEMA：这两个完全相同，任选其一即可<br>IF NOT EXISTS：可选项，如果存在就不创建，不存在才会创建<br>CHARACTER：设置编码格式，例如 utf-8，gbk</p>\n<h3 id=\"查看当前服务器下的数据表列表\"><a href=\"#查看当前服务器下的数据表列表\" class=\"headerlink\" title=\"查看当前服务器下的数据表列表\"></a>查看当前服务器下的数据表列表</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW &#123;DATABASES | SCHEMAS&#125; \\[LIKE <span class=\"string\">'pattern'</span> | WHERE expr\\]</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改数据库\"><a href=\"#修改数据库\" class=\"headerlink\" title=\"修改数据库\"></a>修改数据库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER &#123;DATABASE | SCHEMA&#125; \\[db\\_name\\] \\[DEFAULT\\] CHARACTER SET \\[=\\] charset\\_name</span><br></pre></td></tr></table></figure>\n<p>通过以上语句可以修改某个数据库的编码格式</p>\n<h3 id=\"删除数据库\"><a href=\"#删除数据库\" class=\"headerlink\" title=\"删除数据库\"></a>删除数据库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP &#123;DATABASE | SCHEMA&#125; \\[IF EXISTS\\] db_name</span><br></pre></td></tr></table></figure>\n<h3 id=\"打开数据库\"><a href=\"#打开数据库\" class=\"headerlink\" title=\"打开数据库\"></a>打开数据库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">USE db_name</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建数据表\"><a href=\"#创建数据表\" class=\"headerlink\" title=\"创建数据表\"></a>创建数据表</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE \\[IF NOT EXISTS\\] table\\_name( column\\_name data_type, .... )</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看数据表列表\"><a href=\"#查看数据表列表\" class=\"headerlink\" title=\"查看数据表列表\"></a>查看数据表列表</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW TABLES \\[FROM db_name\\] \\[LIKE <span class=\"string\">'pattern'</span> | WHERE expr\\]</span><br></pre></td></tr></table></figure>\n<p>FROM db_name：不仅可以查看当前数据库中的数据表，还可以查看其他数据库中的数据表</p>\n<h3 id=\"查看数据表结构\"><a href=\"#查看数据表结构\" class=\"headerlink\" title=\"查看数据表结构\"></a>查看数据表结构</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW COLUMNS FROM tbl_name</span><br></pre></td></tr></table></figure>\n<p>tbl_name：数据表的名称</p>\n<h3 id=\"插入记录\"><a href=\"#插入记录\" class=\"headerlink\" title=\"插入记录\"></a>插入记录</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT \\[INFO\\] tbl\\_name \\[(col\\_name,...)\\] VALUES(val,...)</span><br></pre></td></tr></table></figure>\n<p>如果省略 col_name (列名称)，就必须为所有字段都赋值</p>\n<h3 id=\"记录查找\"><a href=\"#记录查找\" class=\"headerlink\" title=\"记录查找\"></a>记录查找</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT expr,... FROM tbl_name</span><br></pre></td></tr></table></figure>\n<p>expr：表达式</p>\n<h2 id=\"字段属性设置\"><a href=\"#字段属性设置\" class=\"headerlink\" title=\"字段属性设置\"></a>字段属性设置</h2><h3 id=\"空值与非空\"><a href=\"#空值与非空\" class=\"headerlink\" title=\"空值与非空\"></a>空值与非空</h3><ul>\n<li>NULL：字段值可以为空（默认值）</li>\n<li>NOT NULL：字段值禁止为空</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE tbl_name(username VARCHAR(20) NOT NULL,age TINYINT UNSIGNED NULL);</span><br></pre></td></tr></table></figure>\n<div align=\"center\"><img src=\"/images/hexo_post_208.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"表级约束与列级约束\"><a href=\"#表级约束与列级约束\" class=\"headerlink\" title=\"表级约束与列级约束\"></a>表级约束与列级约束</h2><p>对一个数据列建立的约束，称为列级约束 对多个数据列建立的约束，称为表级约束 列级约束既可以在列定义时声明，也可以在列定义后声明 表级约束只能在列定义后声明</p>\n<h3 id=\"主键约束\"><a href=\"#主键约束\" class=\"headerlink\" title=\"主键约束\"></a>主键约束</h3><p>PRIMARY KEY：每张数据表只能存在一个主键，主键保证记录的唯一性，主键自动为 NOT NULL，主键不一定和下面的自动编号一起使用，但是不能赋相同的值</p>\n<h3 id=\"自动编号\"><a href=\"#自动编号\" class=\"headerlink\" title=\"自动编号\"></a>自动编号</h3><p>AUTO_INCREMENT：必须与主键组合使用，默认情况下，起始值为 1，每次的增量为 1，该字段的数据类型必须为数字，如果是浮点数必须小数位数为 0</p>\n<h3 id=\"唯一约束\"><a href=\"#唯一约束\" class=\"headerlink\" title=\"唯一约束\"></a>唯一约束</h3><p>UNIQUE KEY：可以保证记录的唯一性，字段可以为空值（NULL），每张数据表可以存在多个唯一约束</p>\n<h3 id=\"默认约束\"><a href=\"#默认约束\" class=\"headerlink\" title=\"默认约束\"></a>默认约束</h3><p>DEFAULT：当插入记录时，如果没有明确为字段赋值，则自动赋予默认值</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sex enum(<span class=\"string\">'1'</span>,<span class=\"string\">'2'</span>,<span class=\"string\">'3'</span>) DEFAULT <span class=\"string\">'3'</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"外键约束\"><a href=\"#外键约束\" class=\"headerlink\" title=\"外键约束\"></a>外键约束</h3><p>FOREIGN KEY：保持数据一致性和完整性，实现一对一或一对多关系</p>\n<h4 id=\"外键约束的要求\"><a href=\"#外键约束的要求\" class=\"headerlink\" title=\"外键约束的要求\"></a>外键约束的要求</h4><ol>\n<li>父表和子表必须使用相同的存储引擎，而且禁止使用临时表</li>\n<li>数据表的存储引擎只能为 InnoDB</li>\n<li>外键列和参照列必须具有相似的数据类型，其中数字的长度或是否有符号位必须相同；而字符的长度则可以不同</li>\n<li>外键列和参照列必须创建索引，如果外键列不存在索引的话，MySQL 将自动创建索引</li>\n</ol>\n<h4 id=\"外键约束的参照操作\"><a href=\"#外键约束的参照操作\" class=\"headerlink\" title=\"外键约束的参照操作\"></a>外键约束的参照操作</h4><ol>\n<li>CASCADE：从父表删除或更新且自动删除或更新子表中匹配的行</li>\n<li>SET NULL：从父表删除或更新行，并设置子表中的外键列为 NULL。如果使用该选项，必须保证子表列没有指定NOT NULL</li>\n<li>RESTRICT：拒绝对父表的删除或更新操作</li>\n<li>NO ACTION：标准 SQL 的关键字，在 MySQL 中与 RESTRICT 相同</li>\n</ol>\n<p>pid INT,FOREIGN KEY (pid) REFERENCES provinces (id) ON DELETE CASCADE =&gt; pid 为外键约束，参照数据表 provinces 中的 id 字段；并且删除时的参照操作为 CASCADE</p>\n<h2 id=\"修改数据表\"><a href=\"#修改数据表\" class=\"headerlink\" title=\"修改数据表\"></a>修改数据表</h2><h3 id=\"添加单列\"><a href=\"#添加单列\" class=\"headerlink\" title=\"添加单列\"></a>添加单列</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tbl\\_name ADD \\[COLUMN\\] col\\_name column\\_definition \\[FIRST | AFTER col\\_name\\]</span><br></pre></td></tr></table></figure>\n<p>FIRST：新添加的列将置于最前面<br>AFTER col_name：新添加的列将置于某一列后面<br>如果省略以上两项，新添加的列将位于所有列最后面</p>\n<h3 id=\"添加多列\"><a href=\"#添加多列\" class=\"headerlink\" title=\"添加多列\"></a>添加多列</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tbl\\_name ADD \\[COLUMN\\] (col\\_name column_definition,...)</span><br></pre></td></tr></table></figure>\n<p>添加多列时无法指定位置，只能位于最后面</p>\n<h3 id=\"删除列\"><a href=\"#删除列\" class=\"headerlink\" title=\"删除列\"></a>删除列</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tbl\\_name DROP \\[COLUMN\\] col\\_name</span><br></pre></td></tr></table></figure>\n<p>ALTER TABLE tbl_name DROP age,DROP password =&gt; 可以同时删除 age 列和 password 列</p>\n<h3 id=\"添加约束\"><a href=\"#添加约束\" class=\"headerlink\" title=\"添加约束\"></a>添加约束</h3><h4 id=\"添加主键约束\"><a href=\"#添加主键约束\" class=\"headerlink\" title=\"添加主键约束\"></a>添加主键约束</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tbl\\_name ADD \\[CONSTRAINT \\[symbol\\] \\] PRIMARY KEY \\[index\\_type\\] (index\\_col\\_name,...)</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加唯一约束\"><a href=\"#添加唯一约束\" class=\"headerlink\" title=\"添加唯一约束\"></a>添加唯一约束</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tbl\\_name ADD \\[CONSTRAINT \\[symbol\\] \\] UNIQUE \\[INDEX | KEY\\] \\[index\\_name\\] \\[index\\_type\\] (index\\_col_name,...)</span><br></pre></td></tr></table></figure>\n<p>唯一约束可以给多列添加</p>\n<h4 id=\"添加外键约束\"><a href=\"#添加外键约束\" class=\"headerlink\" title=\"添加外键约束\"></a>添加外键约束</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tbl\\_name ADD \\[CONSTRAINT \\[symbol\\] \\] FOREIGN KEY \\[index\\_name\\] (index\\_col\\_name,...) reference_definition</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加-删除默认约束\"><a href=\"#添加-删除默认约束\" class=\"headerlink\" title=\"添加/删除默认约束\"></a>添加/删除默认约束</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tbl\\_name ALTER \\[COLUMN\\] col\\_name &#123;SET DEFAULT literal | DROP DEFAULT&#125;</span><br></pre></td></tr></table></figure>\n<p>SET DEFAULT literal：添加默认约束<br>DROP DEFAULT：删除默认约束</p>\n<h3 id=\"删除约束\"><a href=\"#删除约束\" class=\"headerlink\" title=\"删除约束\"></a>删除约束</h3><h4 id=\"删除主键约束\"><a href=\"#删除主键约束\" class=\"headerlink\" title=\"删除主键约束\"></a>删除主键约束</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tbl_name DROP PRIMARY KEY</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除唯一约束\"><a href=\"#删除唯一约束\" class=\"headerlink\" title=\"删除唯一约束\"></a>删除唯一约束</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tbl\\_name DROP &#123;INDEX | KEY&#125; index\\_name</span><br></pre></td></tr></table></figure>\n<p>一张表可以有多个唯一约束，所以需要查看约束的名字 =&gt; SHOW INDEXES FROM tbl_name [\\G];</p>\n<h4 id=\"删除外键约束\"><a href=\"#删除外键约束\" class=\"headerlink\" title=\"删除外键约束\"></a>删除外键约束</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tbl\\_name DROP FOREIGN KEY fk\\_symbol</span><br></pre></td></tr></table></figure>\n<p>fk_symbol：约束的名字，需要提前查看 =&gt; SHOW CREATE tbl_name</p>\n<h3 id=\"修改列定义\"><a href=\"#修改列定义\" class=\"headerlink\" title=\"修改列定义\"></a>修改列定义</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tbl\\_name MODIFY \\[COLUMN\\] col\\_name column\\_definition \\[FIRST | AFTER col\\_name\\]</span><br></pre></td></tr></table></figure>\n<p>可以修改数据类型以及数据列的位置</p>\n<h3 id=\"修改列名称\"><a href=\"#修改列名称\" class=\"headerlink\" title=\"修改列名称\"></a>修改列名称</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tbl\\_name CHANGE \\[COLUMN\\] old\\_col\\_name new\\_col\\_name column\\_definition \\[FIRST | AFTER col_name\\]</span><br></pre></td></tr></table></figure>\n<p>修改列名称的同时也可以修改列类型和位置，所以其功能要强大于修改列定义</p>\n<h3 id=\"数据表更名\"><a href=\"#数据表更名\" class=\"headerlink\" title=\"数据表更名\"></a>数据表更名</h3><p>尽量少更改数据表和数据列名字，因为如果创建过索引和约束，会影响到正常使用</p>\n<h4 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1\"></a>方法1</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE tbl\\_name RENAME \\[TO | AS\\] new\\_tbl_name</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法2\"><a href=\"#方法2\" class=\"headerlink\" title=\"方法2\"></a>方法2</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RENAME TABLE tbl\\_name TO new\\_tbl\\_name \\[,tbl\\_name2 TO new\\_tbl\\_name2\\] ...</span><br></pre></td></tr></table></figure>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><div align=\"center\"><img src=\"/images/hexo_post_209.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"记录操作\"><a href=\"#记录操作\" class=\"headerlink\" title=\"记录操作\"></a>记录操作</h2><h3 id=\"插入记录-1\"><a href=\"#插入记录-1\" class=\"headerlink\" title=\"插入记录\"></a>插入记录</h3><h4 id=\"第一种\"><a href=\"#第一种\" class=\"headerlink\" title=\"第一种\"></a>第一种</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT \\[INTO\\] tbl\\_name \\[(col\\_name,...)\\] &#123;VALUES | VALUE&#125; (&#123;expr | DEFAULT&#125;,...&#125;,(...),...</span><br></pre></td></tr></table></figure>\n<p>可以插入一条记录，也可以插入多条记录 INSERT users VALUES(NULL,’John’,’456’,25,1); =&gt; NULL 为空值，也可以为自增字段赋值（DEFAULT也可以）</p>\n<p>INSERT users VALUES(\bDEFAULT,’Tom’,’123’,3*7-5,1),(NULL,’Rose’,md5(‘123’),DEFAULT,0); =&gt; 插入多条记录，可以用表达式，也可以用函数、NULL、DEFAULT</p>\n<h4 id=\"第二种\"><a href=\"#第二种\" class=\"headerlink\" title=\"第二种\"></a>第二种</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT \\[INTO\\] tbl\\_name SET col\\_name=&#123;expr | DEFAULT&#125;,...</span><br></pre></td></tr></table></figure>\n<p>与第一种方式的区别在于，此方法可以使用子查询(SubQuery)，但是此方法只能插入一条记录<br>INSERT users SET username=’Ben’,password=’456’; =&gt; 将这两条数据列插入users，其他数据列为默认值<br>INSERT test(username) SELECT username FROM users WHERE age&gt;=30; =&gt; 将 users 数据表中的 age &gt;= 30 的记录中的 username 数据列插入到 test 的 username 数据列中</p>\n<h3 id=\"第三种\"><a href=\"#第三种\" class=\"headerlink\" title=\"第三种\"></a>第三种</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT \\[INTO\\] tbl\\_name \\[(col\\_name,...)\\] SELECT ...</span><br></pre></td></tr></table></figure>\n<p>此方法可以将查询结果插入到指定数据表</p>\n<h3 id=\"更新记录（单表更新）\"><a href=\"#更新记录（单表更新）\" class=\"headerlink\" title=\"更新记录（单表更新）\"></a>更新记录（单表更新）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UPDATE \\[LOW\\_PRIORITY\\] \\[IGNORE\\] table\\_reference SET col\\_name1=&#123;expr1 | DEFAULT&#125; \\[,col\\_name2=&#123;expr2 | DEFAULT&#125;\\] ... \\[WHERE where_condition\\]</span><br></pre></td></tr></table></figure>\n<p>UPDATE users SET age=age-id,sex=0 WHERE id%2=0; =&gt; 将 id 为偶数的记录的 age 设置为 age-id，sex 设置为 0</p>\n<h3 id=\"删除记录（单表删除）\"><a href=\"#删除记录（单表删除）\" class=\"headerlink\" title=\"删除记录（单表删除）\"></a>删除记录（单表删除）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DELETE FROM tbl\\_name \\[WHERE <span class=\"built_in\">where</span>\\_condition\\]</span><br></pre></td></tr></table></figure>\n<h3 id=\"查找记录\"><a href=\"#查找记录\" class=\"headerlink\" title=\"查找记录\"></a>查找记录</h3><p>查找记录占据了 MySQL 语句的 80% 频率</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT select\\_expr \\[,select\\_expr ...\\] \\[ FROM table\\_references \\[WHERE <span class=\"built_in\">where</span>\\_condition\\] \\[GROUP BY &#123;col\\_name | position&#125; \\[ASC | DESC\\],...\\] \\[HAVING <span class=\"built_in\">where</span>\\_condition\\] \\[ORDER BY &#123;col\\_name | expr | position&#125; \\[ASC | DESC\\],...\\] \\[LIMIT &#123;\\[offset,\\] row\\_count | row_count OFFSET offset&#125;\\] \\]</span><br></pre></td></tr></table></figure>\n<h4 id=\"select-expr\"><a href=\"#select-expr\" class=\"headerlink\" title=\"select_expr\"></a>select_expr</h4><p>查询表达式</p>\n<ul>\n<li>每一个表达式表示想要的一列，必须有至少一个</li>\n<li>多个列之间以英文逗号分隔</li>\n<li>星号(<em>)表示所有列；tbl_name.</em> 可以表示命名表的所有列</li>\n<li>查询表达式可以使用 [AS] alias_name 为其赋予别名</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT username AS uname FROM users;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>别名可用于 GROUP BY,ORDRE BY 或 HAVING 子句</li>\n</ul>\n<h4 id=\"WHERE\"><a href=\"#WHERE\" class=\"headerlink\" title=\"WHERE\"></a>WHERE</h4><p>条件表达式 对记录进行过滤，如果没有指定WHERE子句，则显示所有记录 在 WHERE 表达式中，可以使用 MySQL 支持的函数或运算符</p>\n<h4 id=\"GROUP-BY\"><a href=\"#GROUP-BY\" class=\"headerlink\" title=\"GROUP BY\"></a>GROUP BY</h4><p>查询结果分组</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\[GROUP BY &#123;col_name | position&#125; \\[ASC | DESC\\], ...\\]</span><br></pre></td></tr></table></figure>\n<p>既可以指定列名，也可以指定列的位置 ASC 为升序（默认），DESC 为降序</p>\n<h4 id=\"HAVING\"><a href=\"#HAVING\" class=\"headerlink\" title=\"HAVING\"></a>HAVING</h4><p>分组条件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\[HAVING where_condition\\]</span><br></pre></td></tr></table></figure>\n<h4 id=\"ORDER-BY\"><a href=\"#ORDER-BY\" class=\"headerlink\" title=\"ORDER BY\"></a>ORDER BY</h4><p>对查询结果进行排序</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\[ORDER BY &#123;col_name | expr | position&#125; \\[ASC | DESC\\],...\\]</span><br></pre></td></tr></table></figure>\n<p>可以指定多个数据列进行排序，当第一个数据列的值相同时，按照第二个数据列进行排序，以此类推……</p>\n<h4 id=\"LIMIT\"><a href=\"#LIMIT\" class=\"headerlink\" title=\"LIMIT\"></a>LIMIT</h4><p>限制查询结果返回的数量</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\[LIMIT &#123;\\[offset,\\] row\\_count | row\\_count OFFSET offset&#125;\\]</span><br></pre></td></tr></table></figure>\n<p>SELECT * FROM users LIMIT 3,2; =&gt; 从索引值为 3（第四条记录）的记录开始返回两条记录</p>\n<h2 id=\"子查询\"><a href=\"#子查询\" class=\"headerlink\" title=\"子查询\"></a>子查询</h2><p>子查询(Subquery)是指出现在其他 SQL 语句内的 SELECT 子句<br>SELECT <em> FROM t1 WHERE col1 = (SELECT col2 FROM t2); =&gt; 其中SELECT </em> FROM t1 称为 Outer Query/Outer Statement,SELECT col2 FROM t2 称为 SubQuery</p>\n<ul>\n<li>子查询指嵌套在查询内部，且必须始终出现在圆括号内</li>\n<li>子查询可以包含多个关键字或条件，如 DISTINCT、GROUP BY、ORDER BY、LIMIT 函数等</li>\n<li>子查询的外层查询可以是：SELECT，INSERT，UPDATE，SET 或 DO</li>\n</ul>\n<h3 id=\"子查询返回值\"><a href=\"#子查询返回值\" class=\"headerlink\" title=\"子查询返回值\"></a>子查询返回值</h3><p>子查询可以返回标量、一行、一列或子查询</p>\n<h3 id=\"使用比较运算法的子查询\"><a href=\"#使用比较运算法的子查询\" class=\"headerlink\" title=\"使用比较运算法的子查询\"></a>使用比较运算法的子查询</h3><p>=、&gt;、&lt;、&gt;=、&lt;=、&lt;&gt;、!=、&lt;=&gt;</p>\n<h3 id=\"语法结构\"><a href=\"#语法结构\" class=\"headerlink\" title=\"语法结构\"></a>语法结构</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">operand comparison_operator subquery</span><br></pre></td></tr></table></figure>\n<h3 id=\"用-ANY、SOME-或-ALL-修饰的比较运算符\"><a href=\"#用-ANY、SOME-或-ALL-修饰的比较运算符\" class=\"headerlink\" title=\"用 ANY、SOME 或 ALL 修饰的比较运算符\"></a>用 ANY、SOME 或 ALL 修饰的比较运算符</h3><ol>\n<li>operand comparison_operator ANY (subquery)</li>\n<li>operand comparison_operator SOME (subquery)</li>\n<li>operand comparison_operator ALL (subquery)</li>\n</ol>\n<p>运算符和关键字相结合之后的结果类型：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_210.png\" alt=\"\" width=\"400\"></div>\n\n<h3 id=\"使用-NOT-IN-的子查询\"><a href=\"#使用-NOT-IN-的子查询\" class=\"headerlink\" title=\"使用 [NOT] IN 的子查询\"></a>使用 [NOT] IN 的子查询</h3><h4 id=\"语法结构-1\"><a href=\"#语法结构-1\" class=\"headerlink\" title=\"语法结构\"></a>语法结构</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">operand comparison_operator \\[NOT\\] IN (subquery)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>=ANY 运算符与 IN 等效</li>\n<li>!=ALL 或 &lt;&gt;ALL 运算符与 NOT IN 等效</li>\n</ul>\n<h3 id=\"使用-NOT-EXISTS-的子查询\"><a href=\"#使用-NOT-EXISTS-的子查询\" class=\"headerlink\" title=\"使用 [NOT] EXISTS 的子查询\"></a>使用 [NOT] EXISTS 的子查询</h3><p>如果子查询返回任何行，EXISTS 将返回 TRUE，否则为 FALSE</p>\n<h2 id=\"多表操作\"><a href=\"#多表操作\" class=\"headerlink\" title=\"多表操作\"></a>多表操作</h2><h3 id=\"多表更新\"><a href=\"#多表更新\" class=\"headerlink\" title=\"多表更新\"></a>多表更新</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UPDATE table\\_references SET col\\_name1 = &#123;expr1 | DEFAULT&#125; \\[,col\\_name2= &#123;expr2 | DEFAULT&#125;\\] ...\\[WHERE <span class=\"built_in\">where</span>\\_condition\\]</span><br></pre></td></tr></table></figure>\n<h3 id=\"CREATE…SELECT\"><a href=\"#CREATE…SELECT\" class=\"headerlink\" title=\"CREATE…SELECT\"></a>CREATE…SELECT</h3><p>创建数据表同时将查询结果写入到数据表</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE \\[IF NOT EXISTS\\] tbl\\_name \\[(create\\_definition,...)\\] select_statement</span><br></pre></td></tr></table></figure>\n<p>CREATE TABLE tdb_goods_brands(brand_id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,brand_name VARCHAR(40) NOT NULL) SELECT brand_name FROM tdb_goods GROUP BY brand_name; =&gt; 创建表 tdb_goods_brands 的同时将 tdb_goods 中的 brand_name 数据列的值赋给新表 tdb_goods_brands 中的 brand_name 数据列</p>\n<h3 id=\"表的连接\"><a href=\"#表的连接\" class=\"headerlink\" title=\"表的连接\"></a>表的连接</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table\\_reference &#123;\\[INNER | CROSS\\] JOIN | &#123;LEFT | RIGHT&#125; \\[OUTER\\] JOIN&#125; table\\_reference ON conditional_expr</span><br></pre></td></tr></table></figure>\n<p>table_reference：连接的两张表的名字<br>conditional_expr：连接条件，使用 ON 关键字来设定连接条件，也可以使用 WHERE 来代替：通常使用 ON 关键字来设定连接条件，使用 WHERE 关键字进行结果集记录的过滤</p>\n<h4 id=\"连接类型\"><a href=\"#连接类型\" class=\"headerlink\" title=\"连接类型\"></a>连接类型</h4><ol>\n<li>INNER JOIN，内连接，在 MySQL 中，JOIN，CROSS JOIN 和 INNER JOIN 是等价的</li>\n<li>LEFT [OUTER] JOIN，左外连接</li>\n<li>RIGHT [OUTER] JOIN，右外连接</li>\n</ol>\n<p>UPDATE tdb_goods AS g INNER JOIN tdb_goods_brands AS b ON g.brand_name=b.brand_name SET g.brand_name=b.brand_id; =&gt; 按照 tdb_goods_brands (设置别名为 b)表更新 tdb_goods (设置别名为 g)表，连接条件为表 g 的brand_name 和表 b 的 brand_name 字段值相等，更新操作为将 g 中的 brand_name 更改为 b 中的 brand_id</p>\n<h4 id=\"内连接\"><a href=\"#内连接\" class=\"headerlink\" title=\"内连接\"></a>内连接</h4><p>仅显示左表及右表符合连接条件的记录（交集、公共部分）</p>\n<h4 id=\"左（右）外连接\"><a href=\"#左（右）外连接\" class=\"headerlink\" title=\"左（右）外连接\"></a>左（右）外连接</h4><p>显示左（右）表的全部记录及右（左）表符合连接条件的记录 A LEFT JOIN B join_condition 如果数据表 A 的某条记录符合 WHERE 条件，但是在数据表B不存在符合连接条件的记录，将生成一个所有列为空的额外的B行</p>\n<h3 id=\"多表删除\"><a href=\"#多表删除\" class=\"headerlink\" title=\"多表删除\"></a>多表删除</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DELETE tbl\\_name\\[.*\\] \\[,tbl\\_name\\[.*\\]\\] ... FROM table\\_references \\[WHERE <span class=\"built_in\">where</span>\\_condition\\]</span><br></pre></td></tr></table></figure>\n<h2 id=\"系统内置函数\"><a href=\"#系统内置函数\" class=\"headerlink\" title=\"系统内置函数\"></a>系统内置函数</h2><h3 id=\"字符函数\"><a href=\"#字符函数\" class=\"headerlink\" title=\"字符函数\"></a>字符函数</h3><table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CONCAT()</td>\n<td>字符连接</td>\n</tr>\n<tr>\n<td>CONCAT_WS()</td>\n<td>使用指定的分隔符进行字符连接</td>\n</tr>\n<tr>\n<td>FORMAT()</td>\n<td>数字格式化</td>\n</tr>\n<tr>\n<td>LOWER()</td>\n<td>转换成小写字母</td>\n</tr>\n<tr>\n<td>UPPER()</td>\n<td>转换成大写字母</td>\n</tr>\n<tr>\n<td>LEFT()</td>\n<td>获取左侧字符</td>\n</tr>\n<tr>\n<td>RIGHT()</td>\n<td>获取右侧字符</td>\n</tr>\n<tr>\n<td>LENGTH()</td>\n<td>获取字符串长度</td>\n</tr>\n<tr>\n<td>LTRIM()</td>\n<td>删除前导空格</td>\n</tr>\n<tr>\n<td>RTRIM()</td>\n<td>删除后续空格</td>\n</tr>\n<tr>\n<td>TRIM()</td>\n<td>删除前导和后续空格</td>\n</tr>\n<tr>\n<td>SUBSTRING()</td>\n<td>字符串截取</td>\n</tr>\n<tr>\n<td>[NOT] LIKE</td>\n<td>模式匹配</td>\n</tr>\n<tr>\n<td>REPLACE()</td>\n<td>字符串替换</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"CONCAT\"><a href=\"#CONCAT\" class=\"headerlink\" title=\"CONCAT()\"></a>CONCAT()</h3><p>SELECT CONCAT(first_name,last_name) AS fullname FROM test; =&gt; 将数据表 test 中的 first_name 和 last_name 中的数据连接到一起进行输出，并命名为 fullname</p>\n<h3 id=\"FORMAT\"><a href=\"#FORMAT\" class=\"headerlink\" title=\"FORMAT()\"></a>FORMAT()</h3><p>SELECT FORMAT(12560.75,2); =&gt; 转换成 12,560.75（千分位）<br>SELECT FORMAT(12560.75,1); =&gt; 转换成 12,560.8（四舍五入）<br>SELECT FORMAT(12560.75,0); =&gt; 转换成 12,561（取整）</p>\n<h3 id=\"TRIM\"><a href=\"#TRIM\" class=\"headerlink\" title=\"TRIM()\"></a>TRIM()</h3><p>除了删除首尾空格，还可以删除指定其他字符 SELECT TRIM(LEADING ‘?’ FROM ‘??MySQL???’); =&gt; MySQL???，LEADING 关键字代表前导，所以这句话的含义是删除字符串前面的’?’字符；将 LEADING 换为 TRAILING 表示去掉尾部相应字符，换为 BOTH 表示去掉首尾相应字符</p>\n<h3 id=\"NOT-LIKE\"><a href=\"#NOT-LIKE\" class=\"headerlink\" title=\"[NOT] LIKE\"></a>[NOT] LIKE</h3><p>SELECT <em> FROM test WHERE first_name LIKE ‘%o%’; => tom%，%相当于</em>，所以 LIKE 有点类似于正则匹配</p>\n<h3 id=\"数值运算符与函数\"><a href=\"#数值运算符与函数\" class=\"headerlink\" title=\"数值运算符与函数\"></a>数值运算符与函数</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CEIL()</td>\n<td>进一取整</td>\n</tr>\n<tr>\n<td>DIV</td>\n<td>整数除法</td>\n</tr>\n<tr>\n<td>FLOOR()</td>\n<td>舍一取整</td>\n</tr>\n<tr>\n<td>MOD</td>\n<td>取余数（取模）</td>\n</tr>\n<tr>\n<td>POWER()</td>\n<td>幂运算</td>\n</tr>\n<tr>\n<td>ROUND()</td>\n<td>四舍五入</td>\n</tr>\n<tr>\n<td>TRUNCATE()</td>\n<td>数字截取</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"TRUNCATE\"><a href=\"#TRUNCATE\" class=\"headerlink\" title=\"TRUNCATE()\"></a>TRUNCATE()</h3><p>数字截取，不会进行运算，TRUNCATE(125.89,0); => 125，TRUNCATE(125.89,-1); => 120</p>\n<h3 id=\"比较运算符与函数\"><a href=\"#比较运算符与函数\" class=\"headerlink\" title=\"比较运算符与函数\"></a>比较运算符与函数</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[NOT] BETWEEN…AND…</td>\n<td>[不]在范围之内</td>\n</tr>\n<tr>\n<td>[NOT] IN()</td>\n<td>[不]在列出值范围内</td>\n</tr>\n<tr>\n<td>IS [NOT] NULL</td>\n<td>[不]为空</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"日期时间函数\"><a href=\"#日期时间函数\" class=\"headerlink\" title=\"日期时间函数\"></a>日期时间函数</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NOW()</td>\n<td>当前日期和时间</td>\n</tr>\n<tr>\n<td>CURDATE()</td>\n<td>当前日期</td>\n</tr>\n<tr>\n<td>CURTIME()</td>\n<td>当前时间</td>\n</tr>\n<tr>\n<td>DATE_ADD()</td>\n<td>日期变化</td>\n</tr>\n<tr>\n<td>DATEDIFF()</td>\n<td>日期差值</td>\n</tr>\n<tr>\n<td>DATE_FORMAT()</td>\n<td>日期格式化</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"DATE-ADD\"><a href=\"#DATE-ADD\" class=\"headerlink\" title=\"DATE_ADD()\"></a>DATE_ADD()</h3><p>DATE_ADD(‘2014-3-12’,INTERVAL 3 \bWEEK); =&gt; 2014-04-02<br>DATE_ADD(‘2014-3-12’,INTERVAL -365 DAY); =&gt; 2013-3-12</p>\n<h3 id=\"DATEDIFF\"><a href=\"#DATEDIFF\" class=\"headerlink\" title=\"DATEDIFF()\"></a>DATEDIFF()</h3><p>DATEDIFF(‘2013-3-12’,’2014-3-12’); =&gt;-365</p>\n<h3 id=\"DATE-FORMAT\"><a href=\"#DATE-FORMAT\" class=\"headerlink\" title=\"DATE_FORMAT()\"></a>DATE_FORMAT()</h3><p>DATE_FORMAT(‘2014-3-2’,’%m/%d/%Y’); =&gt;03/02/2014</p>\n<h3 id=\"信息函数\"><a href=\"#信息函数\" class=\"headerlink\" title=\"信息函数\"></a>信息函数</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CONNECTION_ID()</td>\n<td>连接ID</td>\n</tr>\n<tr>\n<td>DATABASE()</td>\n<td>当前数据库</td>\n</tr>\n<tr>\n<td>LAST_INSERT_ID()</td>\n<td>最后插入记录的ID号</td>\n</tr>\n<tr>\n<td>USER()</td>\n<td>当前用户</td>\n</tr>\n<tr>\n<td>VERSION()</td>\n<td>版本信息</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"LAST-INSERT-ID\"><a href=\"#LAST-INSERT-ID\" class=\"headerlink\" title=\"LAST_INSERT_ID()\"></a>LAST_INSERT_ID()</h3><p>当使用该函数时，当前数据表中必须存在一个自增的字段，字段名可以不为 id，当同时写入多条记录时，只返回插入的第一条记录的 ID 值</p>\n<h3 id=\"聚合函数\"><a href=\"#聚合函数\" class=\"headerlink\" title=\"聚合函数\"></a>聚合函数</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AVG()</td>\n<td>平均值</td>\n</tr>\n<tr>\n<td>COUNT()</td>\n<td>计数</td>\n</tr>\n<tr>\n<td>MAX()</td>\n<td>最大值</td>\n</tr>\n<tr>\n<td>MIN()</td>\n<td>最小值</td>\n</tr>\n<tr>\n<td>SUM()</td>\n<td>求和</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"AVG\"><a href=\"#AVG\" class=\"headerlink\" title=\"AVG()\"></a>AVG()</h4><p>SELECT AVG(age) FROM test; =&gt; 返回 test 数据表中的 age 平均值</p>\n<h2 id=\"自定义函数\"><a href=\"#自定义函数\" class=\"headerlink\" title=\"自定义函数\"></a>自定义函数</h2><p>用户自定义函数（user-defined function,UDF）是一种对 MySQL 扩展的途径，其用法与内置函数相同</p>\n<h3 id=\"必要条件\"><a href=\"#必要条件\" class=\"headerlink\" title=\"必要条件\"></a>必要条件</h3><ol>\n<li>参数（理论上不超过 1024 个参数）</li>\n<li>返回值</li>\n</ol>\n<p>函数可以返回任意类型的值，同样可以接收这些类型的参数</p>\n<h3 id=\"创建自定义函数\"><a href=\"#创建自定义函数\" class=\"headerlink\" title=\"创建自定义函数\"></a>创建自定义函数</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE FUNCTION <span class=\"keyword\">function</span>\\_name RETURNS &#123;STRING | INTERGER | REAL | DECIMAL&#125; routine\\_body</span><br></pre></td></tr></table></figure>\n<p>CREATE FUNCTION f1() RETURNS VARCHAR(30) RETURN DATE_FORMAT(NOW(),’%Y年%m月%d日 %H点:%i分:%s秒’); =&gt; 不带有参数的函数，返回格式为 ‘2017年05月09日 21点:26分:15秒’</p>\n<h3 id=\"关于函数体\"><a href=\"#关于函数体\" class=\"headerlink\" title=\"关于函数体\"></a>关于函数体</h3><ol>\n<li>函数体由合法的 SQL 语句构成</li>\n<li>函数体可以是简单的 SELECT 或 INSERT 语句</li>\n<li>函数体如果为复合结构，则使用 BEGIN…END 语句</li>\n<li>复合结构可以包含声明，循环，控制结构</li>\n</ol>\n<h3 id=\"删除函数\"><a href=\"#删除函数\" class=\"headerlink\" title=\"删除函数\"></a>删除函数</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP FUNCTION \\[IF EXISTS\\] function_name</span><br></pre></td></tr></table></figure>\n<h2 id=\"MySQL命令执行过程\"><a href=\"#MySQL命令执行过程\" class=\"headerlink\" title=\"MySQL命令执行过程\"></a>MySQL命令执行过程</h2><div align=\"center\"><img src=\"/images/hexo_post_211.png\" alt=\"\" width=\"400\"></div>\n\n<h2 id=\"存储过程\"><a href=\"#存储过程\" class=\"headerlink\" title=\"存储过程\"></a>存储过程</h2><p>存储过程是 SQL 语句和控制语句的预编译集合，以一个名称存储并作为一个单元处理</p>\n<h3 id=\"存储过程的优点\"><a href=\"#存储过程的优点\" class=\"headerlink\" title=\"存储过程的优点\"></a>存储过程的优点</h3><ol>\n<li>增强 SQL 语句的功能和灵活性</li>\n<li>实现较快的执行速度</li>\n<li>减少网络流量</li>\n</ol>\n<h3 id=\"创建存储过程\"><a href=\"#创建存储过程\" class=\"headerlink\" title=\"创建存储过程\"></a>创建存储过程</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE \\[DEFINER = &#123;user | CURRENT\\_USER&#125;\\] PROCEDURE sp\\_name (\\[proc\\_parameter\\[,...\\]\\]) \\[characteristic ...\\] routine\\_body</span><br></pre></td></tr></table></figure>\n<p>和创建自定义函数类似，最大的不同就是参数部分不同</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proc\\_parameter:\\[IN | OUT | INOUT\\] param\\_name <span class=\"built_in\">type</span></span><br></pre></td></tr></table></figure>\n<p>IN -&gt; 表示该参数的值必须在调用存储过程时指定<br>OUT -&gt; 表示该参数的值可以被存储过程改变，并且可以返回<br>INOUT -&gt; 表示该参数的调用时指定，并且可以被改变和返回</p>\n<h3 id=\"过程体\"><a href=\"#过程体\" class=\"headerlink\" title=\"过程体\"></a>过程体</h3><ol>\n<li>过程体由合法的 SQL 语句构成</li>\n<li>过程体可以是任意 SQL 语句</li>\n<li>过程体如果为复合结构则使用 BEGIN…END 语句</li>\n<li>复合结构可以包含声明，循环，控制结构</li>\n</ol>\n<h3 id=\"调用存储过程\"><a href=\"#调用存储过程\" class=\"headerlink\" title=\"调用存储过程\"></a>调用存储过程</h3><ul>\n<li>CALL sp_name([parameter[,…]])</li>\n<li>CALL sp_name[()]</li>\n</ul>\n<h3 id=\"修改存储过程\"><a href=\"#修改存储过程\" class=\"headerlink\" title=\"修改存储过程\"></a>修改存储过程</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER PROCEDURE sp_name \\[characteristic ...\\] COMMENT <span class=\"string\">'string'</span> | &#123;CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA&#125; | SQL SECURITY &#123; DEFINER | INVOKER &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除存储过程\"><a href=\"#删除存储过程\" class=\"headerlink\" title=\"删除存储过程\"></a>删除存储过程</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP PROCEDURE \\[IF EXISTS\\] sp_name</span><br></pre></td></tr></table></figure>\n<h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3><p>CREATE PROCEDURE sp1() SELECTION VERSION(); -&gt; 创建存储体<br>CALL sp1; -&gt; 调用存储体</p>\n","raw":null,"categories":[{"name":"慕课网","path":"api/categories/慕课网.json"}],"tags":[{"name":"mysql","path":"api/tags/mysql.json"},{"name":"数据库","path":"api/tags/数据库.json"}]}]}