{"name":"wordpress","postlist":[{"title":"Wordpress开发行动指南","slug":"Wordpress开发行动指南","date":"2017-03-15T15:26:18.000Z","updated":"2019-05-22T02:25:26.069Z","comments":true,"path":"api/articles/Wordpress开发行动指南.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_135.png","content":"<p>本人玩 Wordpress 到目前为止也只有 3 天，但是发现 Wordpress 是异常庞大的，可能在开发的过程中会遇到各种各样的 bug，同时也会运用到各种小技巧和“黑科技”，所以就索性写篇文章用来记录我在这个过程中的收获与教训吧。</p>\n<h2 id=\"1-Wordpress-的插件\"><a href=\"#1-Wordpress-的插件\" class=\"headerlink\" title=\"1. Wordpress 的插件\"></a>1. Wordpress 的插件</h2><p>Wordpress 的插件使 Wordpress 的功能得到了无限扩展，所以想用 Wordpress 搭建网站或者开发插件的话，一定要多用它的插件，并且多了解一些插件的功能，其中我在做博客的过程中用到的一些好用的插件都在我的另一篇文章里了，可以点击查看 -&gt;：<a href=\"/20170314/wordpress-plugin-recommendation.html\">Wordpress插件推荐</a></p>\n<h2 id=\"2-自动为-WordPress-文章设置特色图像代码\"><a href=\"#2-自动为-WordPress-文章设置特色图像代码\" class=\"headerlink\" title=\"2. 自动为 WordPress 文章设置特色图像代码\"></a>2. 自动为 WordPress 文章设置特色图像代码</h2><p>这里有一段很实用的代码，可以自动将文章中的第一张图片设置为特色图像，如果你手动设置了特色图像，可以覆盖这段代码。将下面的代码丢到当前主题的 functions.php 里，以后就不用担心忘记设置特色图像了。（这个到底有什么用呢，反正我没用= =）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">autoset_featured</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">global</span> $post;</span><br><span class=\"line\">  $already_has_thumb = has_post_thumbnail($post-&gt;ID);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!$already_has_thumb)  &#123;</span><br><span class=\"line\">    $attached_image = get_children( <span class=\"string\">\"post_parent=$post-&gt;ID&amp;post_type=attachment&amp;post_mime_type=image&amp;numberposts=1\"</span> );</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($attached_image) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">foreach</span> ($attached_image <span class=\"keyword\">as</span> $attachment_id =&gt; $attachment) &#123;</span><br><span class=\"line\">        set_post_thumbnail($post-&gt;ID, $attachment_id);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;  <span class=\"comment\">//end function</span></span><br><span class=\"line\">add_action(<span class=\"string\">'the_post'</span>, <span class=\"string\">'autoset_featured'</span>);</span><br><span class=\"line\">add_action(<span class=\"string\">'save_post'</span>, <span class=\"string\">'autoset_featured'</span>);</span><br><span class=\"line\">add_action(<span class=\"string\">'draft_to_publish'</span>, <span class=\"string\">'autoset_featured'</span>);</span><br><span class=\"line\">add_action(<span class=\"string\">'new_to_publish'</span>, <span class=\"string\">'autoset_featured'</span>);</span><br><span class=\"line\">add_action(<span class=\"string\">'pending_to_publish'</span>, <span class=\"string\">'autoset_featured'</span>);</span><br><span class=\"line\">add_action(<span class=\"string\">'future_to_publish'</span>, <span class=\"string\">'autoset_featured'</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-为某篇文章添加特定的样式或-js-代码\"><a href=\"#3-为某篇文章添加特定的样式或-js-代码\" class=\"headerlink\" title=\"3. 为某篇文章添加特定的样式或 js 代码\"></a>3. 为某篇文章添加特定的样式或 js 代码</h2><p>将下面代码添加到你的 WordPress 主题模板的 functions.php 中：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">为特定文章添加特定css最简单的方式.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">/*添加自定义CSS的meta box*/</span></span><br><span class=\"line\">add_action(<span class=\"string\">'admin_menu'</span>, <span class=\"string\">'cwp_add_my_custom_css_meta_box'</span>);</span><br><span class=\"line\"><span class=\"comment\">/*保存自定义CSS的内容*/</span></span><br><span class=\"line\">add_action(<span class=\"string\">'save_post'</span>, <span class=\"string\">'cwp_save_my_custom_css'</span>);</span><br><span class=\"line\"><span class=\"comment\">/*将自定义CSS添加到特定文章(适用于Wordpress中文章、页面、自定义文章类型等)的头部*/</span></span><br><span class=\"line\">add_action(<span class=\"string\">'wp_head'</span>,<span class=\"string\">'cwp_insert_my_custom_css'</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_add_my_custom_css_meta_box</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">add_meta_box(<span class=\"string\">'my_custom_css'</span>, <span class=\"string\">'自定义CSS'</span>, <span class=\"string\">'cwp_output_my_custom_css_input_fields'</span>, <span class=\"string\">'post'</span>, <span class=\"string\">'normal'</span>, <span class=\"string\">'high'</span>);</span><br><span class=\"line\">add_meta_box(<span class=\"string\">'my_custom_css'</span>, <span class=\"string\">'自定义CSS'</span>, <span class=\"string\">'cwp_output_my_custom_css_input_fields'</span>, <span class=\"string\">'page'</span>, <span class=\"string\">'normal'</span>, <span class=\"string\">'high'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_output_my_custom_css_input_fields</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">global</span> $post;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;input type=\"hidden\" name=\"my_custom_css_noncename\" id=\"my_custom_css_noncename\" value=\"'</span>.wp_create_nonce(<span class=\"string\">'custom-css'</span>).<span class=\"string\">'\" /&gt;'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;textarea name=\"my_custom_css\" id=\"my_custom_css\" rows=\"5\" cols=\"30\" style=\"width:100%;\"&gt;'</span>.get_post_meta($post-&gt;ID,<span class=\"string\">'_my_custom_css'</span>,<span class=\"keyword\">true</span>).<span class=\"string\">'&lt;/textarea&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_save_my_custom_css</span><span class=\"params\">($post_id)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!wp_verify_nonce($_POST[<span class=\"string\">'my_custom_css_noncename'</span>], <span class=\"string\">'custom-css'</span>)) <span class=\"keyword\">return</span> $post_id;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (defined(<span class=\"string\">'DOING_AUTOSAVE'</span>) &amp;&amp; DOING_AUTOSAVE) <span class=\"keyword\">return</span> $post_id;</span><br><span class=\"line\">  $my_custom_css = $_POST[<span class=\"string\">'my_custom_css'</span>];</span><br><span class=\"line\">  update_post_meta($post_id, <span class=\"string\">'_my_custom_css'</span>, $my_custom_css);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cwp_insert_my_custom_css</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (is_page() || is_single()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (have_posts()) : <span class=\"keyword\">while</span> (have_posts()) : the_post();</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'&lt;style type=\"text/css\"&gt;'</span>.get_post_meta(get_the_ID(), <span class=\"string\">'_my_custom_css'</span>, <span class=\"keyword\">true</span>).<span class=\"string\">'&lt;/style&gt;'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">endwhile</span>; <span class=\"keyword\">endif</span>;</span><br><span class=\"line\">    rewind_posts();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在文章的编辑页面就会出现如下输入框：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_135.png\" alt=\"\" width=\"500\"></div>\n\n<p>它是在字数统计的下面，我一开始没注意到，以为没生效呢，差点就把这段代码否定了，不过这个方法只能用来定义特定 CSS 样式，如果想插入特定 js 代码的话，可以考虑用下面一个方法：</p>\n<p>首先还是要将下面代码添加到你的 WordPress 主题模板的 functions.php 中</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add_action(<span class=\"string\">\"wp_head\"</span>,<span class=\"string\">\"ruikeedu_custom_head\"</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ruikeedu_custom_head</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (is_single() || is_page()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> $post;</span><br><span class=\"line\">    $custom_head = get_post_meta($post-&gt;ID, <span class=\"string\">'custom_head'</span>, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $custom_head;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在文章的编辑页面设置显示自定义栏目：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_136.png\" alt=\"\" width=\"700\"></div>\n\n<p>然后在文章编辑的后面会出现自定义栏目的输入框，名称为 custom_head，值就是你想插入的 css 代码或 js 代码（css 代码需要有 <code>&lt;style&gt;&lt;/style&gt;</code>，js 代码同理，因为该方法不会自动添加标签）</p>\n<p>总结：网上虽然关于这个问题的回答很多，但是基本上都是抄来抄去，而且有的方法亲测不可用，所以推荐以上这两种方法一起用，既可以添加 css 代码又可以添加 js 代码。</p>\n<h2 id=\"4-允许分类描述添加-html-代码\"><a href=\"#4-允许分类描述添加-html-代码\" class=\"headerlink\" title=\"4. 允许分类描述添加 html 代码\"></a>4. 允许分类描述添加 html 代码</h2><p>出于安全等因素考虑，WordPress 后台的文本框一般是不允许添加 html 代码的（也就是被过滤掉）。所以如果有 WP 用户需要在分类描述中添加 html 代码，下面这个实现方法就可以实现。直接将下面的代码添加到当前主题的 functions.php 文件即可：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 允许分类描述添加html代码</span></span><br><span class=\"line\"><span class=\"comment\"> * https://www.wpdaxue.com/category-description-support-html.html</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">remove_filter(<span class=\"string\">'pre_term_description'</span>, <span class=\"string\">'wp_filter_kses'</span>);</span><br><span class=\"line\">remove_filter(<span class=\"string\">'term_description'</span>, <span class=\"string\">'wp_kses_data'</span>);</span><br></pre></td></tr></table></figure>\n<p>如果你还想让 链接描述和备注、用户描述 也一样支持 html 代码，可以试试下面的代码，同样是添加到 functions.php：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Disables Kses only for textarea saves</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"keyword\">array</span>(<span class=\"string\">'pre_term_description'</span>, <span class=\"string\">'pre_link_description'</span>, <span class=\"string\">'pre_link_notes'</span>, <span class=\"string\">'pre_user_description'</span>) <span class=\"keyword\">as</span> $filter) &#123;</span><br><span class=\"line\">  remove_filter($filter, <span class=\"string\">'wp_filter_kses'</span>);</span><br><span class=\"line\">&#125;<span class=\"comment\">// Disables Kses only for textarea admin displays</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"keyword\">array</span>(<span class=\"string\">'term_description'</span>, <span class=\"string\">'link_description'</span>, <span class=\"string\">'link_notes'</span>, <span class=\"string\">'user_description'</span>) <span class=\"keyword\">as</span> $filter) &#123;</span><br><span class=\"line\">  remove_filter($filter, <span class=\"string\">'wp_kses_data'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果你需要进一步了解实现原理，可以自己阅读以下文档：</p>\n<ul>\n<li><a href=\"http://codex.wordpress.org/Function_Reference/wp_filter_kses\" target=\"_blank\" rel=\"noopener\">http://codex.wordpress.org/Function_Reference/wp_filter_kses</a></li>\n<li><a href=\"http://codex.wordpress.org/Function_Reference/wp_kses_data\" target=\"_blank\" rel=\"noopener\">http://codex.wordpress.org/Function_Reference/wp_kses_data</a></li>\n</ul>\n<h2 id=\"5-在文章中插入动图\"><a href=\"#5-在文章中插入动图\" class=\"headerlink\" title=\"5. 在文章中插入动图\"></a>5. 在文章中插入动图</h2><p>Wordpress 对于文章中的图片是默认进行缩略处理的，而文章中的 gif 动图在经过处理后就变成了静态文件，就不会“动”了，所以需要插入动图之后对其进行编辑，然后选择完整尺寸就可以了，如果在编辑文章时，该 gif 动图就已经“动”了起来，那证明已经成功了。</p>\n<div align=\"center\"><img src=\"/images/hexo_post_8.png\" alt=\"\" width=\"500\"></div>\n\n<h2 id=\"6-编辑文章上传图片时提示-HTTP-错误\"><a href=\"#6-编辑文章上传图片时提示-HTTP-错误\" class=\"headerlink\" title=\"6.编辑文章上传图片时提示 HTTP 错误\"></a>6.编辑文章上传图片时提示 HTTP 错误</h2><p>这个错误发生在我刚把项目从本地部署到服务器之后，然后我就上网搜了一下，有的人说是因为图片太长或太大了，但是我将图片压缩之后还是提示这个错误，所以又尝试了一些其他方法：</p>\n<ol>\n<li>如果使用的是服务器，那应该是安全设置问题，修改服务器的 httpd.conf 文件，删除里面关于 mod_security 部分就可以了</li>\n<li>如果使用的是虚拟主机，在 .htaccess 文件里面加上一行（这个方法亲测有效）：</li>\n</ol>\n<blockquote>\n<p>SetEnvIfNoCase Request_URI /wp-admin/async-upload.php$ MODSEC_ENABLE=Off</p>\n</blockquote>\n<ol start=\"3\">\n<li>如果上述方法都不能解决，有可能你的图片确实是太长或者太大了，还是压缩一下再上传试一下吧</li>\n</ol>\n<h2 id=\"7-更改新域名\"><a href=\"#7-更改新域名\" class=\"headerlink\" title=\"7. 更改新域名\"></a>7. 更改新域名</h2><p>这个问题的故事是这样的：因为想给自己的网站备案，所以就买了一个可以备案的域名 merrier.wang，而之前是 merrier.online，在买完域名并解析之后，在 Wordpress 后台将域名配置成 merrier.wang 之后就出现问题了，因为 merrier.wang 是没有备案的，所以就无法访问：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_144.png\" alt=\"\" width=\"500\"></div>\n\n<p>但是访问之前的 merrier.online 又会重定向到 merrier.wang（应该是 Wordpress 自带的重定向），所以就相当于连后台也访问不了了，只能修改域名。在这里顺便提醒一下，如果你也给域名申请备案中，先不要在后台修改 Wordpress 的域名，因为备案不成功是访问不了的；接下来总结一下网上几种更改新域名的方法：</p>\n<h3 id=\"方法一：修改-wp-config-php\"><a href=\"#方法一：修改-wp-config-php\" class=\"headerlink\" title=\"方法一：修改 wp-config.php\"></a>方法一：修改 wp-config.php</h3><p>在 wp-config.php 中，添加以下两行内容：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(<span class=\"string\">'WP_HOME'</span>,<span class=\"string\">'http://\byourwebsite'</span>);</span><br><span class=\"line\">define(<span class=\"string\">'WP_SITEURL'</span>,<span class=\"string\">'http://yourwebsite'</span>);</span><br></pre></td></tr></table></figure>\n<p>然后登录后台，在 “常规 -&gt; 设置”重新配置新博客地址（HOME）和安装地址（SITEURL），<strong>成功后一定记得删除上面添加的内容。</strong></p>\n<h3 id=\"方法二：修改-functions-php\"><a href=\"#方法二：修改-functions-php\" class=\"headerlink\" title=\"方法二：修改 functions.php\"></a>方法二：修改 functions.php</h3><p>functions.php 位于当前博客主题目录内，在其中添加以下两行内容：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update_option(<span class=\"string\">'siteurl'</span>,<span class=\"string\">'http://yourwebsite'</span>);</span><br><span class=\"line\">update_option(<span class=\"string\">'home'</span>,<span class=\"string\">'http://yourwebsite'</span>);</span><br></pre></td></tr></table></figure>\n<p>然后登录后台，在 “常规 -&gt; 设置”重新配置新博客地址（HOME）和安装地址（SITEURL），<strong>成功后一定记得删除上面添加的内容。</strong></p>\n<h3 id=\"方法三：修改-wp-config-php（自动更新地址）\"><a href=\"#方法三：修改-wp-config-php（自动更新地址）\" class=\"headerlink\" title=\"方法三：修改 wp-config.php（自动更新地址）\"></a>方法三：修改 wp-config.php（自动更新地址）</h3><p>在 wp-config.php 中，添加下面一行内容</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(<span class=\"string\">'RELOCATE'</span>,<span class=\"keyword\">true</span>);</span><br></pre></td></tr></table></figure>\n<p>然后登录后台地址，WP 将自动更新安装地址（SITEURL），手动修改博客地址（HOME）地址即可，<strong>成功后一定要记得删除上面添加的内容</strong></p>\n<h3 id=\"方法四：修改数据库\"><a href=\"#方法四：修改数据库\" class=\"headerlink\" title=\"方法四：修改数据库\"></a>方法四：修改数据库</h3><p>通过某些方法（phpmyadmin 等）登陆到数据库，找到 wp_options 表，将表中的 siteurl 和 home 字段修改为当前的新域名</p>\n<h2 id=\"8-页面下开启评论框\"><a href=\"#8-页面下开启评论框\" class=\"headerlink\" title=\"8.页面下开启评论框\"></a>8.页面下开启评论框</h2><p>我在更新了一些页面（比如标签云、读者墙、网址导航）之后，发现这些页面下没有评论框，非常的不爽，就上网查了一下，然后大部分答案都是修改代码，我试了之后发现还是不行，后来在 <a href=\"http://tieba.baidu.com/p/2309858682\" target=\"_blank\" rel=\"noopener\">wordpress吧</a>发现了问题出在了哪里：</p>\n<p>首先，在后台的页面设置界面，显示讨论栏目：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_145.png\" alt=\"\" width=\"700\"></div>\n\n<p>然后在文章的下面开启允许评论：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_146.png\" alt=\"\" width=\"700\"></div>\n\n<p>经过这两个步骤之后刷新页面（别忘了更新），就会发现评论框出现了！</p>\n<h2 id=\"9-Wordpress-后台安装主题或插件时需要-FTP-帐号怎么办\"><a href=\"#9-Wordpress-后台安装主题或插件时需要-FTP-帐号怎么办\" class=\"headerlink\" title=\"9. Wordpress 后台安装主题或插件时需要 FTP 帐号怎么办\"></a>9. Wordpress 后台安装主题或插件时需要 FTP 帐号怎么办</h2><p>在我把代码部署到服务器上之后发现在更新插件或者安装插件的时候需要输入 FTP 用户名和密码，去阿里云控制台也没有找到，所以就上网找了一些解决教程，试了一下下面的解决方法，实测有效：</p>\n<p>主要原因是 Wordpress 主目录的权限所有者不属于 apache 造成的；</p>\n<p>第一步：找到 apache 服务所使用的用户名和用户组，具体做法为打开终端，输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -aux</span><br></pre></td></tr></table></figure>\n<p>找到 <code>/usr/sbin/apach</code>（或 <code>/usr/sbin/httpd</code>）的用户名，它就是 apache 的所有者，我这里是 apache</p>\n<p>第二步：终端输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown \bapache:apache -R /var/www/</span><br></pre></td></tr></table></figure>\n<p>这里的 <code>/var/www/</code> 是我的 web 主目录也是 Wordpress 主目录；<br>好了，这样就 OK 了，再进入 Wordpress 后台安装主题和插件就不再需要 FTP 帐户和密码了！！</p>\n<h2 id=\"10-WordPress-数据库及各表结构\"><a href=\"#10-WordPress-数据库及各表结构\" class=\"headerlink\" title=\"10. WordPress 数据库及各表结构\"></a>10. WordPress 数据库及各表结构</h2><p>转载自 <a href=\"http://blog.csdn.net/ppiao1970hank/article/details/6301812\" target=\"_blank\" rel=\"noopener\">csdn</a>，相信知道这些数据表的结构之后，可以对自己的 Wordpress 网站进行更加个性化的设置，当然如果你的英文还可以的话，推荐 <a href=\"https://codex.wordpress.org/Database_Description#Table_Overview\" target=\"_blank\" rel=\"noopener\">WordPress官方文档</a>，官方已经给出了比较详细的表格</p>\n<h2 id=\"11-建立数据库连接时出错\"><a href=\"#11-建立数据库连接时出错\" class=\"headerlink\" title=\"11. 建立数据库连接时出错\"></a>11. 建立数据库连接时出错</h2><p>某一天，我心血来潮想搞个 https，结果刷新网页的时候发现显示“建立数据库连接时出错”，后来在服务器上重启 mysql 就没问题了= =。。</p>\n<h2 id=\"12-升级至-HTTPS-时图片路径仍然为-HTTP\"><a href=\"#12-升级至-HTTPS-时图片路径仍然为-HTTP\" class=\"headerlink\" title=\"12. 升级至 HTTPS 时图片路径仍然为 HTTP\"></a>12. 升级至 HTTPS 时图片路径仍然为 HTTP</h2><p>前几天把网站升级至 HTTPS 了，不过随之而来的就是一堆 bug 报错，首先就是文章中的图片路径，仍然是 HTTP 的话浏览器会报 <code>Mixed Content</code> 错，但是我通过修改数据库的方式仍然不管用，后来不知不觉把两个插件禁用了，然后就好了，这两个插件就是七牛云的相关插件：<strong>WPJAM BASIC、WPJAM 七牛镜像存储</strong>，不过禁用掉之后就用不了七牛云了，后续有时间我再深入研究一下= =</p>\n<h2 id=\"13-WordPress：基于-JWT-的身份验证\"><a href=\"#13-WordPress：基于-JWT-的身份验证\" class=\"headerlink\" title=\"13. WordPress：基于 JWT 的身份验证\"></a>13. WordPress：基于 JWT 的身份验证</h2><p>如果你想基于 WordPress 去创建前端 App 或者移动端 App，解决用户的身份验证可以使用 JWT 这种方法，它是一种基于 Token 的验证身份的方法。</p>\n","raw":null,"categories":[{"name":"wordpress","path":"api/categories/wordpress.json"}],"tags":[{"name":"指南","path":"api/tags/指南.json"},{"name":"Wordpress","path":"api/tags/Wordpress.json"}]},{"title":"Wordpress插件推荐","slug":"Wordpress插件推荐","date":"2017-03-14T12:54:24.000Z","updated":"2019-05-22T02:25:26.069Z","comments":true,"path":"api/articles/Wordpress插件推荐.json","excerpt":null,"keywords":"merrier 博客 前端 北邮人","cover":"/images/hexo_post_129.png","content":"<h2 id=\"1-Easy-WP-SMTP\"><a href=\"#1-Easy-WP-SMTP\" class=\"headerlink\" title=\"1. Easy WP SMTP\"></a>1. Easy WP SMTP</h2><p>这个插件是我在看<a href=\"http://www.imooc.com/video/10468\" target=\"_blank\" rel=\"noopener\">慕课网</a>的 wordpress 教程的时候看到的，主要用来解决 wordpress 发送邮件会被屏蔽的 bug，从 wordpress 安装插件的界面可以看到这款插件活跃安装有 10W+，所以从一定角度说明了这个插件有多强大。但是，仅仅安装是不够的，还需要设置一些 SMTP 相关内容，关于此插件如何设置，慕课网上的相关视频已经讲的很清楚了。</p>\n<p>##v 2. WP User Avatar</p>\n<p>这个插件同样是在看慕课网的 wordpress 教程的时候看到的，讲师说是用来解决头像问题，他的视频中头像是带一个 × 号的（就和网页中加载图片失败后显示的样子差不多），而我这里在未安装这款插件的时候的默认头像是一个灰底的白色小人，所以应该是 wordpress 后来更新了这个 bug，但是不安装插件的话其他用户还是没有办法上传并修改头像的，所以这款插件还是很有必要安装的，具体的配置流程看<a href=\"http://www.imooc.com/video/10469\" target=\"_blank\" rel=\"noopener\">慕课网</a>的视频即可。</p>\n<h2 id=\"3-Wp-syntax\"><a href=\"#3-Wp-syntax\" class=\"headerlink\" title=\"3. Wp-syntax\"></a>3. Wp-syntax</h2><p>这个插件是我在写文章的时候发现的，因为想在文章中插入代码（作为一个码农，这个需求应该再正常不过了），然后我发现后台自带的编辑器是没办法高亮显示的，所以就 baidu 了一下，就搜到了这款插件，在 wordpress 里搜索到它有 10000+ 活跃安装，所以应该还可以，而且看介绍支持的语言简直覆盖了整个代码界，所以如果你也有同样需求的话，这款插件应该不容错过（话不多说，我去试用了 = =） 可是，这个插件用的并不顺利，启用之后按照网上的格式进行了编辑，然而有一个莫名其妙的 bug 出现了，先上图：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_129.png\" alt=\"\" width=\"550\"></div>\n\n<p>可以看到 <code>&lt;pre&gt;</code> 标签里面的双引号竟然是中文的，而且一半是中文，一半是英文，我在后台编辑的时候试了各种方法打出英文双引号，但是在后台编辑器里是””，但是到了前端页面就不是了，到目前为止我仍然不知道为什么……不知道是我的问题还是这款插件的 bug，所以只能换个插件了（其实已经解决了双引号的 bug，但是这款插件的效果依然没有看到，所以代码高亮只能用其他插件了，可以向下看）。</p>\n<h2 id=\"4-Jetpack\"><a href=\"#4-Jetpack\" class=\"headerlink\" title=\"4. Jetpack\"></a>4. Jetpack</h2><p>这款插件在推荐里是第二位，然后我就去查了一下，果然有代码块的功能，果断安装试用，然而，我在连接的时候遇到了下面一个 error：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_127.png\" alt=\"\" width=\"600\"></div>\n\n<p>翻译过来就是说我的根目录下的 xmlrpc.php 里面有空格，可能是别的插件或主题引起的，然后让我去一个网址看解决方案，我打开了那个网址：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_128.png\" alt=\"\" width=\"600\"></div>\n\n<p>确实给出了解决方案，然而我按照那个方案里说的把所有插件都禁用，并且主题更换为默认主题之后还是报错，然后去 wp-config.php 查看，第一个 <code>&lt;?php</code> 前面根本就没有空格，所以，这个问题就搁置在这里了，如果我找到解决方案了，我再回来更新吧……</p>\n<h2 id=\"5-Quotmarks-Replacer\"><a href=\"#5-Quotmarks-Replacer\" class=\"headerlink\" title=\"5. Quotmarks Replacer\"></a>5. Quotmarks Replacer</h2><p>wordpress 有一个bug，就是英文的双引号””会被强制转换成中文双引号“”，这个我在上面已经提到过了，然后我就查了一下，发现网上的回答基本上都是这样的：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_130.png\" alt=\"\" width=\"600\"></div>\n\n<p>按照第二个方法的解释，我去 formatting.php 里查找了一下，可能因为我所用的 wordpress 的版本比较高，所以并没有找到同样的代码（第一个 static strings 找到了，注释掉之后类似于 ‘’’ 这样的仍然会被强制转换为 ‘‘’）；然后尝试了第一种方法，也就是此款插件，虽然活跃安装很少，只有 600+，但是完美的解决了我的问题，值得推荐一把；至于第三种方法，我并没有去试，因为我的问题已经解决了呀~！</p>\n<h2 id=\"6-Pure-Highlightjs\"><a href=\"#6-Pure-Highlightjs\" class=\"headerlink\" title=\"6. Pure-Highlightjs\"></a>6. Pure-Highlightjs</h2><p>在试过了好多插件之后，终于找到一个可以用的代码高亮插件了，这款插件是一个长期玩 wordpress 的同学介绍的，在 wordpress 自带的插件库里搜索不到，我就直接给个现在下载链接好了，<a href=\"https://github.com/icodechef/…/Pure-Highlightjs_1.0.zip\" target=\"_blank\" rel=\"noopener\">点我下载</a>，下载之后上传启用，然后回到后台文章编辑的页面，就可以看到工具条里多了一个 “&lt;&gt;” 符号，点击之后就可以插入代码了：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_131.png\" alt=\"\" width=\"500\"></div>\n\n<p>可以插入多种类型的代码，效果还是蛮不错的。</p>\n<blockquote>\n<p>更新：我最后采用的是后面那款插件，感觉更加强大，满分推荐！</p>\n</blockquote>\n<h2 id=\"7-TablePress\"><a href=\"#7-TablePress\" class=\"headerlink\" title=\"7. TablePress\"></a>7. TablePress</h2><p>这款插件只能用一个词来描述，就是“太强大了”，作为一个表格管理的插件，不仅可以创建表单，还可以将创建的表单导入导出，供给多个 wordpress 网站使用；TablePress 所制作的表单，样式精美，具有翻页功能，搜索功能等非常强大的功能，全简体中文操作，简单易懂，活跃安装 50W+，已经可以说明一切了，五星好评推荐，下面一张功能列表镇楼：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_222.png\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"8-Easy-Add-Thumbnail\"><a href=\"#8-Easy-Add-Thumbnail\" class=\"headerlink\" title=\"8. Easy Add Thumbnail\"></a>8. Easy Add Thumbnail</h2><p>其实，这款插件的实用性仍然有待商议，它的功能是如果你没有给文章设置特色图片，就将你文章中的第一张图片设置为特色图片。。如果有喜欢这个功能的朋友可以尝试一下，1W+ 的活跃安装不容小觑。</p>\n<h2 id=\"9-Crayon-Syntax-Highlighter\"><a href=\"#9-Crayon-Syntax-Highlighter\" class=\"headerlink\" title=\"9. Crayon Syntax Highlighter\"></a>9. Crayon Syntax Highlighter</h2><p>这款插件是在别人的博客中看到的（所以说，多看别人的网站是多么的有用~），被它朴实大方的样式吸引的我果断安装，5W+ 的活跃安装也算是扬名在外了，果不其然，这款插件提供的功能和上面那款表格插件一样多：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_132.png\" alt=\"\" width=\"700\"></div>\n\n<p>这个主题是指代码块的样式，默认是 Classic，然而充满个性气质的我果断换了名叫 Github 的主题（这款主题为什么叫 Github？？）</p>\n<div align=\"center\"><img src=\"/images/hexo_post_133.png\" alt=\"\" width=\"300\"></div>\n\n<p>鉴于移动端的汹涌态势，工具栏始终显示还是值得考虑的，因为移动端没有 hover 事件啊（默认是鼠标放上去才显示，但是这样移动端的交互就不太好了）</p>\n<div align=\"center\"><img src=\"/images/hexo_post_134.png\" alt=\"\" width=\"450\"></div>\n\n<p>这个默认语言设置还是蛮关键的，因为一般的个人博客可能只会发某种语言的文章，设置好默认语言之后可能会省去很多设置语言的时间。这款插件的功能还有很多，在这里就不一一介绍了，自己安装之后去看就好了。</p>\n<h2 id=\"10-Akismet\"><a href=\"#10-Akismet\" class=\"headerlink\" title=\"10. Akismet\"></a>10. Akismet</h2><p>是 Wordpress 官方推荐的一款 WordPress 防垃圾评论插件，是默认已安装的插件，但是需要到后台去启用一下。不过从后台看的话，该插件的名字叫做 Akismet Anti-Spam，而且需要配置一下，步骤比较简单，就不一一截图了</p>\n<h2 id=\"11-Google-XML-Sitemaps\"><a href=\"#11-Google-XML-Sitemaps\" class=\"headerlink\" title=\"11.Google XML Sitemaps\"></a>11.Google XML Sitemaps</h2><p>Google XML Sitemaps 是一个使用非常广泛的 XML 网站地图插件，通过它，你可以很轻松为你的 WordPress 博客生成 <a href=\"http://baike.baidu.com/link?url=Ej_L5DfNH9hhAnwh7OpoJE3nKrBC_qRhLimem51ub_bfMsvwlk77swUnoPdvZxktOTpn0o9yFYbn_KvAeat-U_\" target=\"_blank\" rel=\"noopener\">Sitemap</a>，方便搜索引擎抓取你博客的文章。（不过中国的互联网环境大家懂得，如果没有特殊需求的话我建议你考虑下面那个插件，在国内作用会更大一点）</p>\n<h2 id=\"12-Baidu-Sitemap-Generator\"><a href=\"#12-Baidu-Sitemap-Generator\" class=\"headerlink\" title=\"12. Baidu Sitemap Generator\"></a>12. Baidu Sitemap Generator</h2><p>同样是生成 sitemap XML 文件的插件，这款插件是国人柳城制作的，对于国内的用户会更加友好，安装启用之后还要进行一些设置，可以<a href=\"http://jingyan.baidu.com/article/86fae346d0ae093c49121a38.html\" target=\"_blank\" rel=\"noopener\">点击这里</a>查看如何设置。</p>\n<h2 id=\"13-DB-Cache-Reloaded-Fix-Hyper-Cache\"><a href=\"#13-DB-Cache-Reloaded-Fix-Hyper-Cache\" class=\"headerlink\" title=\"13. DB Cache Reloaded Fix + Hyper Cache\"></a>13. DB Cache Reloaded Fix + Hyper Cache</h2><p>两个都是缓存插件，主要用于减少对数据库的请求次数和缓存 404 页等功能，但已经好久没更新了，不放心的还是慎用吧，安装启用之后还需要一些额外的设置，都是很简单的英文，自己去看好了。</p>\n<h2 id=\"14-EWWW-Image-Optimizer\"><a href=\"#14-EWWW-Image-Optimizer\" class=\"headerlink\" title=\"14. EWWW Image Optimizer\"></a>14. EWWW Image Optimizer</h2><p>这款插件是我在逛知乎的时候看到的，无损压缩 JPEG 和 PNG 图像，支持压缩已有的图像，可以加快访问者加载图片的速度。同时支持 JPEG 的渐进式加载。正常情况下，网速低时，图片是一点点从上往下加载，<strong>而使用渐进式加载，则是先加载这个图片的低分辨率版本，然后逐渐变得清晰。</strong>40W+ 的活跃安装简直无敌，不过是收费的，大概 330 张图片 1 美元，如果网站访问量很大的话还是很有必要买的。</p>\n<h2 id=\"15-Wordfence\"><a href=\"#15-Wordfence\" class=\"headerlink\" title=\"15. Wordfence\"></a>15. Wordfence</h2><p><strong>安全防御</strong>插件，可限制密码尝试次数防止暴力破解，可为你的 WordPress 增加 <a href=\"http://baike.baidu.com/link?url=FbGPIHYDfIy0NTVofknUrhlzFPIVHlkFpEP20emmXLidrVVEU1B5B9KJo8co-8NQutyZ6lnSaJXXH-9V8Yjxfq\" target=\"_blank\" rel=\"noopener\">WAF</a> 功能，查看实时访问。安装完之后发现确实很庞大，但是缺点是都是英文，而且需要配置的内容比较繁杂，英语不好的人看着有点累（比如我），但是具体好不好用还是自己试用之后再说吧。</p>\n<h2 id=\"16-WP-Fastest-Cache\"><a href=\"#16-WP-Fastest-Cache\" class=\"headerlink\" title=\"16. WP Fastest Cache\"></a>16. WP Fastest Cache</h2><p>开启缓存也是一个能快速提升 WordPress 网站访问速度的方法，立竿见影，这里推荐一个插件，有免费版的，我们用免费的足够了。需要自己设置一下，主要是设置压缩 css 文件和 js 文件。</p>\n<h2 id=\"17-a3-Lazy-Load\"><a href=\"#17-a3-Lazy-Load\" class=\"headerlink\" title=\"17. a3 Lazy Load\"></a>17. a3 Lazy Load</h2><p>图片懒加载也就是图片延时加载，简单点说就是只加载页面上能看到的图片，从而减短页面的等待时间，当访客需要看其他的图片的时候再加载相应的图片。但是当我启用这个插件之后，首页上的图片半天都不显示，所以我最后并没有启用这个插件。</p>\n<h2 id=\"18-WPJAM\"><a href=\"#18-WPJAM\" class=\"headerlink\" title=\"18. WPJAM\"></a>18. WPJAM</h2><p>这个插件是我在配置七牛云存储的时候看到的，因为安装七牛云插件必须先安装这款插件，所以我只能尝试着安装了，这款软件的活跃安装只有 4000+，但是安装完之后发现还是挺强大的，下面是它的功能截图（其实还有一些功能，但是一张图片截不下了）：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_203.png\" alt=\"\" width=\"500\"></div>\n\n<p>可以看到其提供的功能还是蛮多的，推荐一下</p>\n<h2 id=\"19-七牛云\"><a href=\"#19-七牛云\" class=\"headerlink\" title=\"19. 七牛云\"></a>19. 七牛云</h2><p>在之前做外包的时候碰到一个项目，它把所有的大型图片都放在了七牛云上，当时我根本不知道七牛是什么，但是感觉肯定是个牛逼的东西；后来我在自己探索 wordpress 插件的时候发现 wordpress 也有“七牛云”插件，于是抱着一颗好奇心尝试了一下，感觉速度的确有所提升，具体操作流程如下：</p>\n<h3 id=\"配置七牛云空间\"><a href=\"#配置七牛云空间\" class=\"headerlink\" title=\"配置七牛云空间\"></a>配置七牛云空间</h3><p>首先，到<a href=\"https://portal.qiniu.com/create\" target=\"_blank\" rel=\"noopener\">七牛云官网</a>申请一个账号，然后申请一个公开的空间，你可以将七牛云上的空间理解为网盘，七牛云会将你网站的静态资源存储到你申请的空间中，然后将空间和域名进行绑定，见下图：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_204.png\" alt=\"\" width=\"600\"></div>\n\n<p>加速的域名需要先备案，然后才可以用</p>\n<h3 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h3><p>后台搜索“七牛镜像存储”即可，安装过程应该不会遇到什么问题，安装之后进入设置页面开始进行配置</p>\n<h3 id=\"配置七牛云存储插件\"><a href=\"#配置七牛云存储插件\" class=\"headerlink\" title=\"配置七牛云存储插件\"></a>配置七牛云存储插件</h3><p>需要配置的有域名、空间名、ACCESS KEY 和 SECRET KEY，前两个是自己在七牛云网站上设置的，直接填进去就行了；后面两个密钥在个人面板中的密钥管理中可以看到，然后保存之后就可以了，就是如此简单粗暴！</p>\n<div align=\"center\"><img src=\"/images/hexo_post_13.png\" alt=\"\" width=\"700\"></div>\n\n<h2 id=\"20-Disqus\"><a href=\"#20-Disqus\" class=\"headerlink\" title=\"20. Disqus\"></a>20. Disqus</h2><p>Disqus 是一家社会化评论系统，主要为网站主提供评论托管服务；同时 Disqus 也为网站主提供了很多功能，所以 Disqus 其实不仅仅可以在 wordpress 中使用，在许多其他类型的网站上都可以使用；在这里我主要介绍一下在 wordpress 中如何使用 Disqus：<br>首先是安装 Disqus 插件（直接搜索 “Disqus”，活跃安装最多的那个就是）<br>然后需要去 <a href=\"https://disqus.com/\" target=\"_blank\" rel=\"noopener\">Disqus官网</a>注册一个账号，安装完插件之后配置 Disqus（由于是个国外的插件，所以可能会安装失败，多试几次就好了）：此时需要在 Disqus 的配置界面验证你刚才注册的账号密码，然后就配置完成了，下面是配置完成之后我的博客的评论界面：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_247.png\" alt=\"\" width=\"700\"></div>\n\n<p>从上面的截图中可以看到，Disqus 评论系统的整体风格还是很简单大方的，同时提供了分享功能、推荐功能以及自定义排序功能，是一款目前为止我认为最好的社会化评论系统（国内的多说已经关闭了，真希望 Disqus 早日打通中国市场，不要被墙啊！）；我的介绍不太详细，其实官网还需要配置一些东西，具体可参见：<a href=\"https://jingyan.baidu.com/article/ff42efa919f1b8c19f220245.html\" target=\"_blank\" rel=\"noopener\">wordpress如何使用评论插件Disqus</a></p>\n<h2 id=\"21-wumii-关联推荐\"><a href=\"#21-wumii-关联推荐\" class=\"headerlink\" title=\"21. wumii 关联推荐\"></a>21. wumii 关联推荐</h2><p>无觅关联推荐，援引<a href=\"http://www.wumii.com/widget/relatedItems\" target=\"_blank\" rel=\"noopener\">它的官网</a>中的一句话：</p>\n<blockquote>\n<p>来自前亚马逊推荐引擎团队，利用大数据分析带给你网站最精准的关联推荐服务，只需 1 分钟就可以看到效果。</p>\n</blockquote>\n<p>通俗点来说，它可以智能的分析出你博客中的文章内容，当用户在看你的文章时，可以推荐相关联的文章。安装其实很简单，按照<a href=\"http://www.wumii.com/widget/getWidget\" target=\"_blank\" rel=\"noopener\">它的指引</a>一步步安装就行了，我试用了一下，功能还是很强大的：</p>\n<div align=\"center\"><img src=\"/images/hexo_post_77.png\" alt=\"\" width=\"600\"></div>\n\n<p>其实除了图上这些，它还提供了其他多种功能，一张图截不下了，感兴趣的童鞋可以试用一下~</p>\n<h2 id=\"22-WP-PostViews\"><a href=\"#22-WP-PostViews\" class=\"headerlink\" title=\"22. WP-PostViews\"></a>22. WP-PostViews</h2><p>这款插件是用来显示文章浏览次数 / 查看次数的，因为我用的 wordpress 主题 Dux 自带这个功能，所以就没有用这个插件，但是看其他人推荐过这款插件，就也向大家推荐一下吧，但是具体好用与否真的不得而知了，因为现在大部分 wordpress 用户都会选择一些比较“高大上”的主题，而这些主题往往自带这种功能，所以用处并不是很大。。这款插件的具体用法参见 <a href=\"https://saber.love/wordpress%e6%98%be%e7%a4%ba%e6%96%87%e7%ab%a0%e6%b5%8f%e8%a7%88%e6%ac%a1%e6%95%b0_%e6%9f%a5%e7%9c%8b%e6%ac%a1%e6%95%b0.html\" target=\"_blank\" rel=\"noopener\">WordPress显示文章浏览次数/查看次数</a></p>\n<h2 id=\"23-Disable-Google-Fonts\"><a href=\"#23-Disable-Google-Fonts\" class=\"headerlink\" title=\"23. Disable Google Fonts\"></a>23. Disable Google Fonts</h2><p>禁用 WordPress 上所有的谷歌字体，为什么要用这款插件呢，你懂得~</p>\n<h2 id=\"24-TinyMCE-Advanced\"><a href=\"#24-TinyMCE-Advanced\" class=\"headerlink\" title=\"24. TinyMCE Advanced\"></a>24. TinyMCE Advanced</h2><p>为 WordPress 自带编辑器 TinyMCE 提供进阶功能设置和选项。非常好用的一款插件，强烈推荐使用，不过我是在博客上线一年多以后才发现的，很难受啊。。</p>\n<h2 id=\"25-Yoast-SEO\"><a href=\"#25-Yoast-SEO\" class=\"headerlink\" title=\"25. Yoast SEO\"></a>25. Yoast SEO</h2><p>真正的多合一 WordPress SEO 插件，该插件会检测你的网站在SEO方面有哪些不足以及如何优化。不过可能广告比较多。推荐配合下面这款插件进行使用</p>\n<h2 id=\"26-Remove-Yoast-SEO-Comments\"><a href=\"#26-Remove-Yoast-SEO-Comments\" class=\"headerlink\" title=\"26. Remove Yoast SEO Comments\"></a>26. Remove Yoast SEO Comments</h2><p>移除 Yoast 的广告信息。功能就是如此的单一，就问你怕不怕</p>\n<h2 id=\"27-蜜蜂采集\"><a href=\"#27-蜜蜂采集\" class=\"headerlink\" title=\"27. 蜜蜂采集\"></a>27. 蜜蜂采集</h2><p>这是一个微信公众号文章导入插件，通过粘贴公众号文章链接即可实现一键导入公众号文章到自己的网站，并且支持<strong>批量导入</strong>、<strong>自动采集</strong>、<strong>设置特色图片</strong>等功能，减少繁琐的操作，<strong>支持知乎专栏文章、简书文章、今日头条导入</strong>等，不过免费版的有次数限制，介意的话就算了 - -</p>\n","raw":null,"categories":[{"name":"wordpress","path":"api/categories/wordpress.json"}],"tags":[{"name":"推荐","path":"api/tags/推荐.json"},{"name":"Wordpress","path":"api/tags/Wordpress.json"}]}]}